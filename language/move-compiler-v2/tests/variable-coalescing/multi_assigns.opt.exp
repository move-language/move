============ initial bytecode ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
  0: $t2 := 1
  1: $t1 := infer($t2)
  2: $t3 := 2
  3: $t1 := infer($t3)
  4: $t0 := infer($t1)
  5: return $t0
}

============ after VariableCoalescingAnnotator: ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64
     var $t1: u64
     var $t2: u64 [unused]
     var $t3: u64
     # live vars:
     # events: b:$t3
  0: $t3 := 2
     # live vars: $t3
     # events: e:$t3, b:$t1
  1: $t1 := move($t3)
     # live vars: $t1
     # events: e:$t1, b:$t0
  2: $t0 := move($t1)
     # live vars: $t0
     # events: e:$t0
  3: return $t0
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64 [unused]
     var $t1: u64 [unused]
     var $t2: u64 [unused]
     var $t3: u64
  0: $t3 := 2
  1: $t3 := move($t3)
  2: $t3 := move($t3)
  3: return $t3
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {


test(): u64 /* def_idx: 0 */ {
B0:
	0: LdU64(2)
	1: Ret
}
}
