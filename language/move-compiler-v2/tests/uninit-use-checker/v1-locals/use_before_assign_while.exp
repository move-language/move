============ initial bytecode ================

[variant baseline]
fun M::tborrow1($t0: bool) {
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
     var $t4: &u64
     var $t5: u64
  0: label L0
  1: if ($t0) goto 2 else goto 9
  2: label L2
  3: $t3 := borrow_local($t1)
  4: $t2 := infer($t3)
  5: $t4 := move($t2)
  6: $t5 := 0
  7: $t1 := infer($t5)
  8: goto 11
  9: label L3
 10: goto 13
 11: label L4
 12: goto 0
 13: label L1
 14: return ()
}


[variant baseline]
fun M::tborrow2($t0: bool) {
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
     var $t4: &u64
     var $t5: u64
  0: label L0
  1: if ($t0) goto 2 else goto 15
  2: label L2
  3: $t3 := borrow_local($t1)
  4: $t2 := infer($t3)
  5: $t4 := move($t2)
  6: if ($t0) goto 7 else goto 11
  7: label L5
  8: $t5 := 0
  9: $t1 := infer($t5)
 10: goto 12
 11: label L6
 12: label L7
 13: goto 19
 14: goto 17
 15: label L3
 16: goto 19
 17: label L4
 18: goto 0
 19: label L1
 20: return ()
}


[variant baseline]
fun M::tcopy($t0: bool) {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
  0: label L0
  1: if ($t0) goto 2 else goto 17
  2: label L2
  3: $t4 := move($t1)
  4: $t5 := 1
  5: $t3 := +($t4, $t5)
  6: $t2 := infer($t3)
  7: if ($t0) goto 8 else goto 11
  8: label L5
  9: goto 0
 10: goto 12
 11: label L6
 12: label L7
 13: $t6 := 0
 14: $t1 := infer($t6)
 15: $t7 := infer($t2)
 16: goto 19
 17: label L3
 18: goto 21
 19: label L4
 20: goto 0
 21: label L1
 22: return ()
}


[variant baseline]
fun M::tmove($t0: bool) {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
  0: label L0
  1: if ($t0) goto 2 else goto 11
  2: label L2
  3: $t4 := move($t1)
  4: $t5 := 1
  5: $t3 := +($t4, $t5)
  6: $t2 := infer($t3)
  7: $t6 := 0
  8: $t1 := infer($t6)
  9: $t7 := infer($t2)
 10: goto 13
 11: label L3
 12: goto 15
 13: label L4
 14: goto 0
 15: label L1
 16: return ()
}


Diagnostics:
error: use of possibly unassigned local `x`
  ┌─ tests/uninit-use-checker/v1-locals/use_before_assign_while.move:4:32
  │
4 │         while (cond) { let y = move x + 1; x = 0; y; }
  │                                ^^^^^^

error: use of possibly unassigned local `x`
  ┌─ tests/uninit-use-checker/v1-locals/use_before_assign_while.move:9:32
  │
9 │         while (cond) { let y = move x + 1; if (cond) { continue }; x = 0; y; }
  │                                ^^^^^^

error: use of possibly unassigned local `x`
   ┌─ tests/uninit-use-checker/v1-locals/use_before_assign_while.move:14:32
   │
14 │         while (cond) { let y = &x; _ = move y; x = 0 }
   │                                ^^

error: use of unassigned local `x`
   ┌─ tests/uninit-use-checker/v1-locals/use_before_assign_while.move:19:32
   │
19 │         while (cond) { let y = &x; _ = move y; if (cond) { x = 0 }; break }
   │                                ^^

============ after uninitialized_use_checker: ================

[variant baseline]
fun M::tborrow1($t0: bool) {
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
     var $t4: &u64
     var $t5: u64
     # before: { maybe: $t1, $t2, $t3, $t4, $t5 }, after: { maybe: $t1, $t2, $t3, $t4, $t5 }
  0: label L0
     # before: { maybe: $t1, $t2, $t3, $t4, $t5 }, after: { maybe: $t1, $t2, $t3, $t4, $t5 }
  1: if ($t0) goto 2 else goto 9
     # before: { maybe: $t1, $t2, $t3, $t4, $t5 }, after: { maybe: $t1, $t2, $t3, $t4, $t5 }
  2: label L2
     # before: { maybe: $t1, $t2, $t3, $t4, $t5 }, after: { maybe: $t1, $t2, $t4, $t5 }
  3: $t3 := borrow_local($t1)
     # before: { maybe: $t1, $t2, $t4, $t5 }, after: { maybe: $t1, $t4, $t5 }
  4: $t2 := infer($t3)
     # before: { maybe: $t1, $t4, $t5 }, after: { maybe: $t1, $t5 }
  5: $t4 := move($t2)
     # before: { maybe: $t1, $t5 }, after: { maybe: $t1 }
  6: $t5 := 0
     # before: { maybe: $t1 }, after: all initialized
  7: $t1 := infer($t5)
     # before: all initialized, after: all initialized
  8: goto 11
     # before: { maybe: $t1, $t2, $t3, $t4, $t5 }, after: { maybe: $t1, $t2, $t3, $t4, $t5 }
  9: label L3
     # before: { maybe: $t1, $t2, $t3, $t4, $t5 }, after: { maybe: $t1, $t2, $t3, $t4, $t5 }
 10: goto 13
     # before: all initialized, after: all initialized
 11: label L4
     # before: all initialized, after: all initialized
 12: goto 0
     # before: { maybe: $t1, $t2, $t3, $t4, $t5 }, after: { maybe: $t1, $t2, $t3, $t4, $t5 }
 13: label L1
     # before: { maybe: $t1, $t2, $t3, $t4, $t5 }, after: { maybe: $t1, $t2, $t3, $t4, $t5 }
 14: return ()
}


[variant baseline]
fun M::tborrow2($t0: bool) {
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
     var $t4: &u64
     var $t5: u64
     # before: { no: $t1, $t2, $t3, $t4, $t5 }, after: { no: $t1, $t2, $t3, $t4, $t5 }
  0: label L0
     # before: { no: $t1, $t2, $t3, $t4, $t5 }, after: { no: $t1, $t2, $t3, $t4, $t5 }
  1: if ($t0) goto 2 else goto 15
     # before: { no: $t1, $t2, $t3, $t4, $t5 }, after: { no: $t1, $t2, $t3, $t4, $t5 }
  2: label L2
     # before: { no: $t1, $t2, $t3, $t4, $t5 }, after: { no: $t1, $t2, $t4, $t5 }
  3: $t3 := borrow_local($t1)
     # before: { no: $t1, $t2, $t4, $t5 }, after: { no: $t1, $t4, $t5 }
  4: $t2 := infer($t3)
     # before: { no: $t1, $t4, $t5 }, after: { no: $t1, $t5 }
  5: $t4 := move($t2)
     # before: { no: $t1, $t5 }, after: { no: $t1, $t5 }
  6: if ($t0) goto 7 else goto 11
     # before: { no: $t1, $t5 }, after: { no: $t1, $t5 }
  7: label L5
     # before: { no: $t1, $t5 }, after: { no: $t1 }
  8: $t5 := 0
     # before: { no: $t1 }, after: all initialized
  9: $t1 := infer($t5)
     # before: all initialized, after: all initialized
 10: goto 12
     # before: { no: $t1, $t5 }, after: { no: $t1, $t5 }
 11: label L6
     # before: { maybe: $t1, $t5 }, after: { maybe: $t1, $t5 }
 12: label L7
     # before: { maybe: $t1, $t5 }, after: { maybe: $t1, $t5 }
 13: goto 19
 14: goto 17
     # before: { no: $t1, $t2, $t3, $t4, $t5 }, after: { no: $t1, $t2, $t3, $t4, $t5 }
 15: label L3
     # before: { no: $t1, $t2, $t3, $t4, $t5 }, after: { no: $t1, $t2, $t3, $t4, $t5 }
 16: goto 19
 17: label L4
 18: goto 0
     # before: { maybe: $t1, $t2, $t3, $t4, $t5 }, after: { maybe: $t1, $t2, $t3, $t4, $t5 }
 19: label L1
     # before: { maybe: $t1, $t2, $t3, $t4, $t5 }, after: { maybe: $t1, $t2, $t3, $t4, $t5 }
 20: return ()
}


[variant baseline]
fun M::tcopy($t0: bool) {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
  0: label L0
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
  1: if ($t0) goto 2 else goto 17
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
  2: label L2
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t5, $t6, $t7 }
  3: $t4 := move($t1)
     # before: { maybe: $t1, $t2, $t3, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t6, $t7 }
  4: $t5 := 1
     # before: { maybe: $t1, $t2, $t3, $t6, $t7 }, after: { maybe: $t1, $t2, $t6, $t7 }
  5: $t3 := +($t4, $t5)
     # before: { maybe: $t1, $t2, $t6, $t7 }, after: { maybe: $t1, $t6, $t7 }
  6: $t2 := infer($t3)
     # before: { maybe: $t1, $t6, $t7 }, after: { maybe: $t1, $t6, $t7 }
  7: if ($t0) goto 8 else goto 11
     # before: { maybe: $t1, $t6, $t7 }, after: { maybe: $t1, $t6, $t7 }
  8: label L5
     # before: { maybe: $t1, $t6, $t7 }, after: { maybe: $t1, $t6, $t7 }
  9: goto 0
 10: goto 12
     # before: { maybe: $t1, $t6, $t7 }, after: { maybe: $t1, $t6, $t7 }
 11: label L6
     # before: { maybe: $t1, $t6, $t7 }, after: { maybe: $t1, $t6, $t7 }
 12: label L7
     # before: { maybe: $t1, $t6, $t7 }, after: { maybe: $t1, $t7 }
 13: $t6 := 0
     # before: { maybe: $t1, $t7 }, after: { maybe: $t7 }
 14: $t1 := infer($t6)
     # before: { maybe: $t7 }, after: all initialized
 15: $t7 := infer($t2)
     # before: all initialized, after: all initialized
 16: goto 19
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
 17: label L3
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
 18: goto 21
     # before: all initialized, after: all initialized
 19: label L4
     # before: all initialized, after: all initialized
 20: goto 0
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
 21: label L1
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
 22: return ()
}


[variant baseline]
fun M::tmove($t0: bool) {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
  0: label L0
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
  1: if ($t0) goto 2 else goto 11
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
  2: label L2
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t5, $t6, $t7 }
  3: $t4 := move($t1)
     # before: { maybe: $t1, $t2, $t3, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t6, $t7 }
  4: $t5 := 1
     # before: { maybe: $t1, $t2, $t3, $t6, $t7 }, after: { maybe: $t1, $t2, $t6, $t7 }
  5: $t3 := +($t4, $t5)
     # before: { maybe: $t1, $t2, $t6, $t7 }, after: { maybe: $t1, $t6, $t7 }
  6: $t2 := infer($t3)
     # before: { maybe: $t1, $t6, $t7 }, after: { maybe: $t1, $t7 }
  7: $t6 := 0
     # before: { maybe: $t1, $t7 }, after: { maybe: $t7 }
  8: $t1 := infer($t6)
     # before: { maybe: $t7 }, after: all initialized
  9: $t7 := infer($t2)
     # before: all initialized, after: all initialized
 10: goto 13
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
 11: label L3
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
 12: goto 15
     # before: all initialized, after: all initialized
 13: label L4
     # before: all initialized, after: all initialized
 14: goto 0
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
 15: label L1
     # before: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }, after: { maybe: $t1, $t2, $t3, $t4, $t5, $t6, $t7 }
 16: return ()
}
