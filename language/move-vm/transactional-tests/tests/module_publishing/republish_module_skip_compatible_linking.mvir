//# publish
module 0x42.A {
  struct A has store,drop {
        f: u64,
  }
  public new(f: u64): Self.A {
  label b0:
    return A { f: move(f) };
  }
  public f(a: &Self.A) :u64 {
  label b0:
      return *&move(a).A::f;
  }
}

//# publish
module 0x43.B {
  import 0x42.A;
  public f(a: &A.A) :u64 {
  label b0:
    return A.f(move(a));
  }

  public m(){
    let a: A.A;
    let f: u64;
  label b0:
    a = A.new(1);
    f = Self.f(&a);
    assert(move(f) == 1, 42);
    return;
  }
}

//# publish
module 0x44.C {
  import 0x43.B;

  public entry m(){
  label b0:
    B.m();
    return;
  }
}

//# run 0x44::C::m


//# publish --skip-check-struct-and-function-linking
module 0x42.A {
  struct A has store,drop {
        f: u64,
  }
  struct A1 has store,drop {
        f: u64,
  }
  public new(f: u64): Self.A {
  label b0:
    return A { f: move(f) };
  }
  // change the origin function signature
  public f(a: &Self.A1) :u64 {
  label b0:
      return *&move(a).A1::f;
  }
}


//# run 0x44::C::m
