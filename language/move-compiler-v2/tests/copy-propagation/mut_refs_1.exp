============ initial bytecode ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: &mut u64
     var $t4: &mut u64
     var $t5: u64
  0: $t2 := infer($t0)
  1: $t4 := borrow_local($t0)
  2: $t3 := infer($t4)
  3: $t5 := 1
  4: write_ref($t3, $t5)
  5: $t1 := infer($t2)
  6: return $t1
}

============ after AvailableCopiesAnalysisProcessor: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: &mut u64
     var $t4: &mut u64
     var $t5: u64
     # before: {}, after: {}
  0: $t2 := infer($t0)
     # before: {}, after: {}
  1: $t4 := borrow_local($t0)
     # before: {}, after: {$t3 := $t4}
  2: $t3 := infer($t4)
     # before: {$t3 := $t4}, after: {$t3 := $t4}
  3: $t5 := 1
     # before: {$t3 := $t4}, after: {$t3 := $t4}
  4: write_ref($t3, $t5)
     # before: {$t3 := $t4}, after: {$t1 := $t2, $t3 := $t4}
  5: $t1 := infer($t2)
     # before: {$t1 := $t2, $t3 := $t4}, after: {$t1 := $t2, $t3 := $t4}
  6: return $t1
}

============ after CopyPropagation: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: &mut u64
     var $t4: &mut u64
     var $t5: u64
  0: $t2 := infer($t0)
  1: $t4 := borrow_local($t0)
  2: $t3 := infer($t4)
  3: $t5 := 1
  4: write_ref($t4, $t5)
  5: $t1 := infer($t2)
  6: return $t2
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: &mut u64
     var $t4: &mut u64
     var $t5: u64
  0: $t2 := infer($t0)
  1: $t4 := borrow_local($t0)
  2: $t5 := 1
  3: write_ref($t4, $t5)
  4: return $t2
}
