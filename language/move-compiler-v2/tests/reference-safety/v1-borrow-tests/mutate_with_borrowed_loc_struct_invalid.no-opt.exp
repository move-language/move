
Diagnostics:
error: cannot assign to borrowed local `x`
  ┌─ tests/reference-safety/v1-borrow-tests/mutate_with_borrowed_loc_struct_invalid.move:7:9
  │
6 │         let y = &x;
  │                 -- previous local borrow
7 │         x = X { b: true };
  │         ^^^^^^^^^^^^^^^^^ attempted to assign here
8 │         move y;
  │         ------ conflicting reference `y` used here

error: cannot assign to borrowed local `s`
   ┌─ tests/reference-safety/v1-borrow-tests/mutate_with_borrowed_loc_struct_invalid.move:16:9
   │
14 │         let y = &s;
   │                 -- previous local borrow
15 │         let z = &y.z;
   │                 ---- used by field borrow
16 │         s = S { z: 7 };
   │         ^^^^^^^^^^^^^^ attempted to assign here
17 │         z;
   │         - conflicting reference `z` used here


Diagnostics:
error: local `x` of type `M::X` does not have the `drop` ability
  ┌─ tests/reference-safety/v1-borrow-tests/mutate_with_borrowed_loc_struct_invalid.move:6:17
  │
6 │         let y = &x;
  │                 ^^ still borrowed but will be implicitly dropped later since it is no longer used
