============ initial bytecode ================

[variant baseline]
fun m::consume($t0: u32) {
  0: return ()
}


[variant baseline]
fun m::consume_($t0: m::W) {
  0: return ()
}


[variant baseline]
public fun m::test($t0: u32) {
     var $t1: u32
  0: $t1 := copy($t0)
  1: m::consume($t1)
  2: m::consume($t0)
  3: return ()
}


[variant baseline]
public fun m::test_($t0: m::W) {
     var $t1: m::W
  0: $t1 := copy($t0)
  1: m::consume_($t1)
  2: m::consume_($t0)
  3: return ()
}

============ after VariableCoalescingAnnotator: ================

[variant baseline]
fun m::consume($t0: u32) {
     # live vars: $t0
     # events: b:$t0, e:$t0
  0: return ()
}


[variant baseline]
fun m::consume_($t0: m::W) {
     # live vars: $t0
     # events: b:$t0, e:$t0
  0: return ()
}


[variant baseline]
public fun m::test($t0: u32) {
     var $t1: u32
     # live vars: $t0
     # events: b:$t0, b:$t1
  0: $t1 := copy($t0)
     # live vars: $t0, $t1
     # events: e:$t1
  1: m::consume($t1)
     # live vars: $t0
     # events: e:$t0
  2: m::consume($t0)
     # live vars:
  3: return ()
}


[variant baseline]
public fun m::test_($t0: m::W) {
     var $t1: m::W
     # live vars: $t0
     # events: b:$t0, b:$t1
  0: $t1 := copy($t0)
     # live vars: $t0, $t1
     # events: e:$t1
  1: m::consume_($t1)
     # live vars: $t0
     # events: e:$t0
  2: m::consume_($t0)
     # live vars:
  3: return ()
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
fun m::consume($t0: u32) {
  0: return ()
}


[variant baseline]
fun m::consume_($t0: m::W) {
  0: return ()
}


[variant baseline]
public fun m::test($t0: u32) {
     var $t1: u32
  0: $t1 := copy($t0)
  1: m::consume($t1)
  2: m::consume($t0)
  3: return ()
}


[variant baseline]
public fun m::test_($t0: m::W) {
     var $t1: m::W
  0: $t1 := copy($t0)
  1: m::consume_($t1)
  2: m::consume_($t0)
  3: return ()
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {
struct W has copy, drop {
	a: u32
}

consume(Arg0: u32) /* def_idx: 0 */ {
B0:
	0: Ret
}
consume_(Arg0: W) /* def_idx: 1 */ {
B0:
	0: Ret
}
public test(Arg0: u32) /* def_idx: 2 */ {
L1:	loc0: u32
B0:
	0: CopyLoc[0](Arg0: u32)
	1: StLoc[1](loc0: u32)
	2: MoveLoc[1](loc0: u32)
	3: Call consume(u32)
	4: MoveLoc[0](Arg0: u32)
	5: Call consume(u32)
	6: Ret
}
public test_(Arg0: W) /* def_idx: 3 */ {
L1:	loc0: W
B0:
	0: CopyLoc[0](Arg0: W)
	1: StLoc[1](loc0: W)
	2: MoveLoc[1](loc0: W)
	3: Call consume_(W)
	4: MoveLoc[0](Arg0: W)
	5: Call consume_(W)
	6: Ret
}
}
============ bytecode verification succeeded ========
