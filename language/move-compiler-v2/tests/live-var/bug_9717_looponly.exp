============ initial bytecode ================

[variant baseline]
public fun vectors::guess_flips_break2($t0: vector<u8>): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: bool
     var $t7: u8
     var $t8: &u8
     var $t9: u8
     var $t10: u64
     var $t11: u64
     var $t12: bool
     var $t13: u8
     var $t14: &u8
     var $t15: u8
     var $t16: vector<u8>
     var $t17: vector<u8>
     var $t18: &vector<u8>
  0: $t2 := 0
  1: $t3 := borrow_local($t0)
  2: label L0
  3: $t5 := vector::length<u8>($t3)
  4: $t4 := <($t2, $t5)
  5: if ($t4) goto 6 else goto 31
  6: label L2
  7: $t8 := vector::borrow<u8>($t3, $t2)
  8: $t7 := read_ref($t8)
  9: $t9 := 0
 10: $t6 := !=($t7, $t9)
 11: if ($t6) goto 12 else goto 15
 12: label L5
 13: goto 35
 14: goto 16
 15: label L6
 16: label L7
 17: $t11 := 1
 18: $t10 := +($t2, $t11)
 19: $t2 := infer($t10)
 20: $t14 := vector::borrow<u8>($t3, $t2)
 21: $t13 := read_ref($t14)
 22: $t15 := 5
 23: $t12 := ==($t13, $t15)
 24: if ($t12) goto 25 else goto 28
 25: label L8
 26: goto 35
 27: goto 29
 28: label L9
 29: label L10
 30: goto 33
 31: label L3
 32: goto 35
 33: label L4
 34: goto 2
 35: label L1
 36: $t16 := copy($t0)
 37: $t17 := infer($t0)
 38: $t18 := infer($t3)
 39: $t1 := vector::length<u8>($t18)
 40: return $t1
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun vectors::guess_flips_break2($t0: vector<u8>): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: bool
     var $t7: u8
     var $t8: &u8
     var $t9: u8
     var $t10: u64
     var $t11: u64
     var $t12: bool
     var $t13: u8
     var $t14: &u8
     var $t15: u8
     var $t16: vector<u8>
     var $t17: vector<u8>
     var $t18: &vector<u8>
     # live vars: $t0
  0: $t2 := 0
     # live vars: $t0, $t2
  1: $t3 := borrow_local($t0)
     # live vars: $t0, $t2, $t3
  2: label L0
     # live vars: $t0, $t2, $t3
  3: $t5 := vector::length<u8>($t3)
     # live vars: $t0, $t2, $t3, $t5
  4: $t4 := <($t2, $t5)
     # live vars: $t0, $t2, $t3, $t4
  5: if ($t4) goto 6 else goto 31
     # live vars: $t0, $t2, $t3
  6: label L2
     # live vars: $t0, $t2, $t3
  7: $t8 := vector::borrow<u8>($t3, $t2)
     # live vars: $t0, $t2, $t3, $t8
  8: $t7 := read_ref($t8)
     # live vars: $t0, $t2, $t3, $t7
  9: $t9 := 0
     # live vars: $t0, $t2, $t3, $t7, $t9
 10: $t6 := !=($t7, $t9)
     # live vars: $t0, $t2, $t3, $t6
 11: if ($t6) goto 12 else goto 15
     # live vars: $t0, $t2, $t3
 12: label L5
     # live vars: $t0, $t3
 13: goto 35
     # live vars: $t0, $t2, $t3
 14: goto 16
     # live vars: $t0, $t2, $t3
 15: label L6
     # live vars: $t0, $t2, $t3
 16: label L7
     # live vars: $t0, $t2, $t3
 17: $t11 := 1
     # live vars: $t0, $t2, $t3, $t11
 18: $t10 := +($t2, $t11)
     # live vars: $t0, $t3, $t10
 19: $t2 := infer($t10)
     # live vars: $t0, $t2, $t3
 20: $t14 := vector::borrow<u8>($t3, $t2)
     # live vars: $t0, $t2, $t3, $t14
 21: $t13 := read_ref($t14)
     # live vars: $t0, $t2, $t3, $t13
 22: $t15 := 5
     # live vars: $t0, $t2, $t3, $t13, $t15
 23: $t12 := ==($t13, $t15)
     # live vars: $t0, $t2, $t3, $t12
 24: if ($t12) goto 25 else goto 28
     # live vars: $t0, $t2, $t3
 25: label L8
     # live vars: $t0, $t3
 26: goto 35
     # live vars: $t0, $t2, $t3
 27: goto 29
     # live vars: $t0, $t2, $t3
 28: label L9
     # live vars: $t0, $t2, $t3
 29: label L10
     # live vars: $t0, $t2, $t3
 30: goto 33
     # live vars: $t0, $t2, $t3
 31: label L3
     # live vars: $t0, $t3
 32: goto 35
     # live vars: $t0, $t2, $t3
 33: label L4
     # live vars: $t0, $t2, $t3
 34: goto 2
     # live vars: $t0, $t3
 35: label L1
     # live vars: $t0, $t3
 36: $t16 := copy($t0)
     # live vars: $t0, $t3
 37: $t17 := infer($t0)
     # live vars: $t3
 38: $t18 := infer($t3)
     # live vars: $t18
 39: $t1 := vector::length<u8>($t18)
     # live vars: $t1
 40: return $t1
}
