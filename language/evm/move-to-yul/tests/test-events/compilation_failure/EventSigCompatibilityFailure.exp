/* =======================================
 * Generated by Move-To-Yul compiler v0.0
 * ======================================= */


object "A2_M" {
    code {
        codecopy(0, dataoffset("A2_M_deployed"), datasize("A2_M_deployed"))
        return(0, datasize("A2_M_deployed"))
    }
    object "A2_M_deployed" {
        code {
            mstore(0, memoryguard(160))
            if iszero(lt(calldatasize(), 4))
            {
                let selector := $Shr(calldataload(0), 224)
                switch selector
                default {}
            }
            $Abort(97)
            function $Abort(code) {
                mstore(0, code)
                revert(24, 8) // TODO: store code as a string?
            }
            function $Shr(x, y) -> r {
                r := shr(y, x)
            }
        }
    }
}


!! Move-To-Yul Diagnostics:
 error: event signature is not compatible with the move struct
   ┌─ tests/test-events/compilation_failure/EventSigCompatibilityFailure.move:6:5
   │
 6 │ ╭     struct Transfer_Err_1 {
 7 │ │         from: address,
 8 │ │         to: address,
 9 │ │         value: U256,
10 │ │     }
   │ ╰─────^

error: event signature is not compatible with the move struct
   ┌─ tests/test-events/compilation_failure/EventSigCompatibilityFailure.move:13:5
   │
13 │ ╭     struct Transfer_Err_2 {
14 │ │         from: address,
15 │ │         to: address,
16 │ │         value: U256,
17 │ │     }
   │ ╰─────^

error: event signature is not compatible with the move struct
   ┌─ tests/test-events/compilation_failure/EventSigCompatibilityFailure.move:20:5
   │
20 │ ╭     struct Transfer_Err_3 {
21 │ │         from: address,
22 │ │         to: address,
23 │ │         value: U256,
24 │ │     }
   │ ╰─────^
