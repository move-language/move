// -- Model dump before bytecode pipeline
module 0x42::m {
    use std::vector;
    struct E {
        k: u8,
    }
    struct S {
        data: vector<m::E>,
    }
    public fun foo(v: &m::S): u8 {
        select m::E.k<&m::E>(vector::borrow<m::E>(Borrow(Immutable)(select m::S.data<&m::S>(v)), 0))
    }
} // end 0x42::m

============ initial bytecode ================

[variant baseline]
public fun m::foo($t0: &m::S): u8 {
     var $t1: u8
     var $t2: &m::E
     var $t3: &vector<m::E>
     var $t4: u64
     var $t5: &u8
  0: $t3 := borrow_field<m::S>.data($t0)
  1: $t4 := 0
  2: $t2 := vector::borrow<m::E>($t3, $t4)
  3: $t5 := borrow_field<m::E>.k($t2)
  4: $t1 := read_ref($t5)
  5: return $t1
}


============ bytecode verification succeeded ========
