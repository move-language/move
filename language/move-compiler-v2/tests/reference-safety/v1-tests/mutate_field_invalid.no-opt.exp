
Diagnostics:
error: cannot write to reference in local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/mutate_field_invalid.move:11:9
   │
10 │         let f = &s.f;
   │                 ---- previous field borrow
11 │         *s = S { f: 0, g: 0 };
   │         ^^^^^^^^^^^^^^^^^^^^^ written here

error: mutable reference in local `s` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/mutate_field_invalid.move:11:9
   │
10 │         let f = &s.f;
   │                 ---- previous field borrow
11 │         *s = S { f: 0, g: 0 };
   │         ^^^^^^^^^^^^^^^^^^^^^ requirement enforced here
12 │         *f;
   │         -- conflicting reference `f` used here

error: cannot write to reference in local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/mutate_field_invalid.move:15:9
   │
14 │         let f = &mut s.f;
   │                 -------- previous mutable field borrow
15 │         *s = S { f: 0, g: 0 };
   │         ^^^^^^^^^^^^^^^^^^^^^ written here

error: mutable reference in local `s` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/mutate_field_invalid.move:15:9
   │
14 │         let f = &mut s.f;
   │                 -------- previous mutable field borrow
15 │         *s = S { f: 0, g: 0 };
   │         ^^^^^^^^^^^^^^^^^^^^^ requirement enforced here
16 │         *f;
   │         -- conflicting reference `f` used here

error: cannot write to reference in local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/mutate_field_invalid.move:19:9
   │
18 │         let f = id(&s.f);
   │                 --------
   │                 │  │
   │                 │  previous field borrow
   │                 used by call result
19 │         *s = S { f: 0, g: 0 };
   │         ^^^^^^^^^^^^^^^^^^^^^ written here

error: mutable reference in local `s` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/mutate_field_invalid.move:19:9
   │
18 │         let f = id(&s.f);
   │                 --------
   │                 │  │
   │                 │  previous field borrow
   │                 used by call result
19 │         *s = S { f: 0, g: 0 };
   │         ^^^^^^^^^^^^^^^^^^^^^ requirement enforced here
20 │         *f;
   │         -- conflicting reference `f` used here

error: cannot write to reference in local `s` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/mutate_field_invalid.move:23:9
   │
22 │         let f = id_mut(&mut s.f);
   │                 ----------------
   │                 │      │
   │                 │      previous mutable field borrow
   │                 used by mutable call result
23 │         *s = S { f: 0, g: 0 };
   │         ^^^^^^^^^^^^^^^^^^^^^ written here

error: mutable reference in local `s` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/mutate_field_invalid.move:23:9
   │
22 │         let f = id_mut(&mut s.f);
   │                 ----------------
   │                 │      │
   │                 │      previous mutable field borrow
   │                 used by mutable call result
23 │         *s = S { f: 0, g: 0 };
   │         ^^^^^^^^^^^^^^^^^^^^^ requirement enforced here
24 │         *f;
   │         -- conflicting reference `f` used here
