============ initial bytecode ================

[variant baseline]
fun m::test_for_each_mut() {
     var $t0: vector<u64>
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: &vector<u64>
     var $t10: &mut vector<u64>
     var $t11: &mut vector<u64>
     var $t12: bool
     var $t13: &mut u64
     var $t14: &mut u64
     var $t15: u64
     var $t16: u64
     var $t17: u64
     var $t18: bool
     var $t19: vector<u64>
     var $t20: u64
     var $t21: u64
     var $t22: u64
     var $t23: u64
  0: $t2 := 1
  1: $t3 := 2
  2: $t4 := 3
  3: $t1 := vector($t2, $t3, $t4)
  4: $t0 := infer($t1)
  5: $t6 := 0
  6: $t5 := infer($t6)
  7: $t9 := borrow_local($t0)
  8: $t8 := vector::length<u64>($t9)
  9: $t7 := infer($t8)
 10: $t11 := borrow_local($t0)
 11: $t10 := infer($t11)
 12: label L0
 13: $t12 := <($t5, $t7)
 14: if ($t12) goto 15 else goto 24
 15: label L2
 16: $t14 := vector::borrow_mut<u64>($t10, $t5)
 17: $t13 := infer($t14)
 18: $t15 := 2
 19: write_ref($t13, $t15)
 20: $t17 := 1
 21: $t16 := +($t5, $t17)
 22: $t5 := infer($t16)
 23: goto 26
 24: label L3
 25: goto 28
 26: label L4
 27: goto 12
 28: label L1
 29: $t20 := 2
 30: $t21 := 3
 31: $t22 := 4
 32: $t19 := vector($t20, $t21, $t22)
 33: $t18 := ==($t0, $t19)
 34: if ($t18) goto 35 else goto 37
 35: label L5
 36: goto 40
 37: label L6
 38: $t23 := 0
 39: abort($t23)
 40: label L7
 41: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun m::test_for_each_mut() {
     var $t0: vector<u64>
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: &vector<u64>
     var $t10: &mut vector<u64>
     var $t11: &mut vector<u64>
     var $t12: bool
     var $t13: &mut u64
     var $t14: &mut u64
     var $t15: u64
     var $t16: u64
     var $t17: u64
     var $t18: bool
     var $t19: vector<u64>
     var $t20: u64
     var $t21: u64
     var $t22: u64
     var $t23: u64
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t3 := 2
     # live vars: $t2, $t3
  2: $t4 := 3
     # live vars: $t2, $t3, $t4
  3: $t1 := vector($t2, $t3, $t4)
     # live vars: $t1
  4: $t0 := infer($t1)
     # live vars: $t0
  5: $t6 := 0
     # live vars: $t0, $t6
  6: $t5 := infer($t6)
     # live vars: $t0, $t5
  7: $t9 := borrow_local($t0)
     # live vars: $t0, $t5, $t9
  8: $t8 := vector::length<u64>($t9)
     # live vars: $t0, $t5, $t8
  9: $t7 := infer($t8)
     # live vars: $t0, $t5, $t7
 10: $t11 := borrow_local($t0)
     # live vars: $t0, $t5, $t7, $t11
 11: $t10 := infer($t11)
     # live vars: $t0, $t5, $t7, $t10
 12: label L0
     # live vars: $t0, $t5, $t7, $t10
 13: $t12 := <($t5, $t7)
     # live vars: $t0, $t5, $t7, $t10, $t12
 14: if ($t12) goto 15 else goto 24
     # live vars: $t0, $t5, $t7, $t10
 15: label L2
     # live vars: $t0, $t5, $t7, $t10
 16: $t14 := vector::borrow_mut<u64>($t10, $t5)
     # live vars: $t0, $t5, $t7, $t10, $t14
 17: $t13 := infer($t14)
     # live vars: $t0, $t5, $t7, $t10, $t13
 18: $t15 := 2
     # live vars: $t0, $t5, $t7, $t10, $t13, $t15
 19: write_ref($t13, $t15)
     # live vars: $t0, $t5, $t7, $t10
 20: $t17 := 1
     # live vars: $t0, $t5, $t7, $t10, $t17
 21: $t16 := +($t5, $t17)
     # live vars: $t0, $t7, $t10, $t16
 22: $t5 := infer($t16)
     # live vars: $t0, $t5, $t7, $t10
 23: goto 26
     # live vars: $t0, $t5, $t7, $t10
 24: label L3
     # live vars: $t0
 25: goto 28
     # live vars: $t0, $t5, $t7, $t10
 26: label L4
     # live vars: $t0, $t5, $t7, $t10
 27: goto 12
     # live vars: $t0
 28: label L1
     # live vars: $t0
 29: $t20 := 2
     # live vars: $t0, $t20
 30: $t21 := 3
     # live vars: $t0, $t20, $t21
 31: $t22 := 4
     # live vars: $t0, $t20, $t21, $t22
 32: $t19 := vector($t20, $t21, $t22)
     # live vars: $t0, $t19
 33: $t18 := ==($t0, $t19)
     # live vars: $t18
 34: if ($t18) goto 35 else goto 37
     # live vars:
 35: label L5
     # live vars:
 36: goto 40
     # live vars:
 37: label L6
     # live vars:
 38: $t23 := 0
     # live vars: $t23
 39: abort($t23)
     # live vars:
 40: label L7
     # live vars:
 41: return ()
}

============ after ReferenceSafetyProcessor: ================

[variant baseline]
fun m::test_for_each_mut() {
     var $t0: vector<u64>
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: &vector<u64>
     var $t10: &mut vector<u64>
     var $t11: &mut vector<u64>
     var $t12: bool
     var $t13: &mut u64
     var $t14: &mut u64
     var $t15: u64
     var $t16: u64
     var $t17: u64
     var $t18: bool
     var $t19: vector<u64>
     var $t20: u64
     var $t21: u64
     var $t22: u64
     var $t23: u64
     # live vars:
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  0: $t2 := 1
     # live vars: $t2
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  1: $t3 := 2
     # live vars: $t2, $t3
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  2: $t4 := 3
     # live vars: $t2, $t3, $t4
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  3: $t1 := vector($t2, $t3, $t4)
     # live vars: $t1
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t2,$t3,$t4}
     #
  4: $t0 := infer($t1)
     # live vars: $t0
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t2,$t3,$t4}
     #
  5: $t6 := 0
     # live vars: $t0, $t6
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t2,$t3,$t4}
     #
  6: $t5 := infer($t6)
     # live vars: $t0, $t5
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t2,$t3,$t4}
     #
  7: $t9 := borrow_local($t0)
     # live vars: $t0, $t5, $t9
     # graph: {@700=local($t0)[borrow(false) -> @701],@701=derived[]}
     # locals: {$t0=@700,$t9=@701}
     # globals: {}
     # moved: {$t2,$t3,$t4}
     #
  8: $t8 := vector::length<u64>($t9)
     # live vars: $t0, $t5, $t8
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t9}
     #
  9: $t7 := infer($t8)
     # live vars: $t0, $t5, $t7
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t9}
     #
 10: $t11 := borrow_local($t0)
     # live vars: $t0, $t5, $t7, $t11
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t11=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t9}
     #
 11: $t10 := infer($t11)
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t7,$t9,$t10,$t17}
     #
 12: label L0
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t7,$t9,$t10,$t17}
     #
 13: $t12 := <($t5, $t7)
     # live vars: $t0, $t5, $t7, $t10, $t12
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 14: if ($t12) goto 15 else goto 24
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 15: label L2
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 16: $t14 := vector::borrow_mut<u64>($t10, $t5)
     # live vars: $t0, $t5, $t7, $t10, $t14
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[call(true) -> @1000],@1000=derived[]}
     # locals: {$t0=@700,$t10=@A01,$t14=@1000}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 17: $t13 := infer($t14)
     # live vars: $t0, $t5, $t7, $t10, $t13
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[call(true) -> @1000],@1000=derived[]}
     # locals: {$t0=@700,$t10=@A01,$t13=@1000}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 18: $t15 := 2
     # live vars: $t0, $t5, $t7, $t10, $t13, $t15
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[call(true) -> @1000],@1000=derived[]}
     # locals: {$t0=@700,$t10=@A01,$t13=@1000}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 19: write_ref($t13, $t15)
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 20: $t17 := 1
     # live vars: $t0, $t5, $t7, $t10, $t17
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 21: $t16 := +($t5, $t17)
     # live vars: $t0, $t7, $t10, $t16
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 22: $t5 := infer($t16)
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t7,$t9,$t10,$t17}
     #
 23: goto 26
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 24: label L3
     # live vars: $t0
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 25: goto 28
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t7,$t9,$t10,$t17}
     #
 26: label L4
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t7,$t9,$t10,$t17}
     #
 27: goto 12
     # live vars: $t0
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 28: label L1
     # live vars: $t0
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 29: $t20 := 2
     # live vars: $t0, $t20
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 30: $t21 := 3
     # live vars: $t0, $t20, $t21
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 31: $t22 := 4
     # live vars: $t0, $t20, $t21, $t22
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 32: $t19 := vector($t20, $t21, $t22)
     # live vars: $t0, $t19
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t20,$t21,$t22}
     #
 33: $t18 := ==($t0, $t19)
     # live vars: $t18
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 34: if ($t18) goto 35 else goto 37
     # live vars:
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 35: label L5
     # live vars:
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 36: goto 40
     # live vars:
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 37: label L6
     # live vars:
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 38: $t23 := 0
     # live vars: $t23
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 39: abort($t23)
     # live vars:
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 40: label L7
     # live vars:
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 41: return ()
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
fun m::test_for_each_mut() {
     var $t0: vector<u64>
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: &vector<u64>
     var $t10: &mut vector<u64>
     var $t11: &mut vector<u64>
     var $t12: bool
     var $t13: &mut u64
     var $t14: &mut u64
     var $t15: u64
     var $t16: u64
     var $t17: u64
     var $t18: bool
     var $t19: vector<u64>
     var $t20: u64
     var $t21: u64
     var $t22: u64
     var $t23: u64
     # abort state: {returns,aborts}
     # live vars:
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  0: $t2 := 1
     # abort state: {returns,aborts}
     # live vars: $t2
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  1: $t3 := 2
     # abort state: {returns,aborts}
     # live vars: $t2, $t3
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  2: $t4 := 3
     # abort state: {returns,aborts}
     # live vars: $t2, $t3, $t4
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  3: $t1 := vector($t2, $t3, $t4)
     # abort state: {returns,aborts}
     # live vars: $t1
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t2,$t3,$t4}
     #
  4: $t0 := infer($t1)
     # abort state: {returns,aborts}
     # live vars: $t0
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t2,$t3,$t4}
     #
  5: $t6 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t6
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t2,$t3,$t4}
     #
  6: $t5 := infer($t6)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t2,$t3,$t4}
     #
  7: $t9 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t9
     # graph: {@700=local($t0)[borrow(false) -> @701],@701=derived[]}
     # locals: {$t0=@700,$t9=@701}
     # globals: {}
     # moved: {$t2,$t3,$t4}
     #
  8: $t8 := vector::length<u64>($t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t8
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t9}
     #
  9: $t7 := infer($t8)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t9}
     #
 10: $t11 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t11
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t11=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t9}
     #
 11: $t10 := infer($t11)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t7,$t9,$t10,$t17}
     #
 12: label L0
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t7,$t9,$t10,$t17}
     #
 13: $t12 := <($t5, $t7)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10, $t12
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 14: if ($t12) goto 15 else goto 24
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 15: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 16: $t14 := vector::borrow_mut<u64>($t10, $t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10, $t14
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[call(true) -> @1000],@1000=derived[]}
     # locals: {$t0=@700,$t10=@A01,$t14=@1000}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 17: $t13 := infer($t14)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10, $t13
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[call(true) -> @1000],@1000=derived[]}
     # locals: {$t0=@700,$t10=@A01,$t13=@1000}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 18: $t15 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10, $t13, $t15
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[call(true) -> @1000],@1000=derived[]}
     # locals: {$t0=@700,$t10=@A01,$t13=@1000}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 19: write_ref($t13, $t15)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 20: $t17 := 1
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10, $t17
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 21: $t16 := +($t5, $t17)
     # abort state: {returns,aborts}
     # live vars: $t0, $t7, $t10, $t16
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 22: $t5 := infer($t16)
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t7,$t9,$t10,$t17}
     #
 23: goto 26
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 24: label L3
     # abort state: {returns,aborts}
     # live vars: $t0
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 25: goto 28
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t7,$t9,$t10,$t17}
     #
 26: label L4
     # abort state: {returns,aborts}
     # live vars: $t0, $t5, $t7, $t10
     # graph: {@700=local($t0)[borrow(true) -> @A01],@A01=derived[]}
     # locals: {$t0=@700,$t10=@A01}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t7,$t9,$t10,$t17}
     #
 27: goto 12
     # abort state: {returns,aborts}
     # live vars: $t0
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 28: label L1
     # abort state: {returns,aborts}
     # live vars: $t0
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 29: $t20 := 2
     # abort state: {returns,aborts}
     # live vars: $t0, $t20
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 30: $t21 := 3
     # abort state: {returns,aborts}
     # live vars: $t0, $t20, $t21
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 31: $t22 := 4
     # abort state: {returns,aborts}
     # live vars: $t0, $t20, $t21, $t22
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17}
     #
 32: $t19 := vector($t20, $t21, $t22)
     # abort state: {returns,aborts}
     # live vars: $t0, $t19
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t20,$t21,$t22}
     #
 33: $t18 := ==($t0, $t19)
     # abort state: {returns,aborts}
     # live vars: $t18
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 34: if ($t18) goto 35 else goto 37
     # abort state: {returns}
     # live vars:
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 35: label L5
     # abort state: {returns}
     # live vars:
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 36: goto 40
     # abort state: {aborts}
     # live vars:
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 37: label L6
     # abort state: {aborts}
     # live vars:
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 38: $t23 := 0
     # abort state: {aborts}
     # live vars: $t23
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 39: abort($t23)
     # abort state: {returns}
     # live vars:
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 40: label L7
     # abort state: {returns}
     # live vars:
     # graph: {@700=local($t0)[]}
     # locals: {$t0=@700}
     # globals: {}
     # moved: {$t0,$t2,$t3,$t4,$t5,$t7,$t9,$t10,$t17,$t19,$t20,$t21,$t22}
     #
 41: return ()
}

============ after AbilityProcessor: ================

[variant baseline]
fun m::test_for_each_mut() {
     var $t0: vector<u64>
     var $t1: vector<u64>
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: &vector<u64>
     var $t10: &mut vector<u64>
     var $t11: &mut vector<u64>
     var $t12: bool
     var $t13: &mut u64
     var $t14: &mut u64
     var $t15: u64
     var $t16: u64
     var $t17: u64
     var $t18: bool
     var $t19: vector<u64>
     var $t20: u64
     var $t21: u64
     var $t22: u64
     var $t23: u64
     var $t24: &mut vector<u64>
  0: $t2 := 1
  1: $t3 := 2
  2: $t4 := 3
  3: $t1 := vector($t2, $t3, $t4)
  4: $t0 := move($t1)
  5: $t6 := 0
  6: $t5 := move($t6)
  7: $t9 := borrow_local($t0)
  8: $t8 := vector::length<u64>($t9)
  9: $t7 := move($t8)
 10: $t11 := borrow_local($t0)
 11: $t10 := move($t11)
 12: label L0
 13: $t12 := <($t5, $t7)
 14: if ($t12) goto 15 else goto 25
 15: label L2
 16: $t24 := copy($t10)
 17: $t14 := vector::borrow_mut<u64>($t24, $t5)
 18: $t13 := move($t14)
 19: $t15 := 2
 20: write_ref($t13, $t15)
 21: $t17 := 1
 22: $t16 := +($t5, $t17)
 23: $t5 := move($t16)
 24: goto 28
 25: label L3
 26: drop($t10)
 27: goto 30
 28: label L4
 29: goto 12
 30: label L1
 31: $t20 := 2
 32: $t21 := 3
 33: $t22 := 4
 34: $t19 := vector($t20, $t21, $t22)
 35: $t18 := ==($t0, $t19)
 36: if ($t18) goto 37 else goto 39
 37: label L5
 38: goto 42
 39: label L6
 40: $t23 := 0
 41: abort($t23)
 42: label L7
 43: return ()
}
