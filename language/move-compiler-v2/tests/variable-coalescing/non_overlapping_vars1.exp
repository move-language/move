============ initial bytecode ================

[variant baseline]
fun m::test() {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
  0: $t1 := 1
  1: $t0 := infer($t1)
  2: $t3 := 1
  3: $t2 := +($t0, $t3)
  4: $t0 := infer($t2)
  5: $t5 := 2
  6: $t4 := infer($t5)
  7: $t7 := 1
  8: $t6 := +($t4, $t7)
  9: $t4 := infer($t6)
 10: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun m::test() {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     # live vars:
  0: $t1 := 1
     # live vars: $t1
  1: $t0 := infer($t1)
     # live vars: $t0
  2: $t3 := 1
     # live vars: $t0, $t3
  3: $t2 := +($t0, $t3)
     # live vars: $t2
  4: $t0 := infer($t2)
     # live vars:
  5: $t5 := 2
     # live vars: $t5
  6: $t4 := infer($t5)
     # live vars: $t4
  7: $t7 := 1
     # live vars: $t4, $t7
  8: $t6 := +($t4, $t7)
     # live vars: $t6
  9: $t4 := infer($t6)
     # live vars:
 10: return ()
}

============ after VariableCoalescing: ================

[variant baseline]
fun m::test() {
     var $t0: u64 [unused]
     var $t1: u64
     var $t2: u64 [unused]
     var $t3: u64
     var $t4: u64 [unused]
     var $t5: u64 [unused]
     var $t6: u64 [unused]
     var $t7: u64 [unused]
  0: $t1 := 1
  1: $t1 := infer($t1)
  2: $t3 := 1
  3: $t1 := +($t1, $t3)
  4: $t1 := infer($t1)
  5: $t1 := 2
  6: $t1 := infer($t1)
  7: $t3 := 1
  8: $t1 := +($t1, $t3)
  9: $t1 := infer($t1)
 10: return ()
}
