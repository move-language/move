
Diagnostics:
warning: Unused local variable `x`. Consider removing or prefixing with an underscore: `_x`
  ┌─ tests/variable-coalescing/cant_coalesce_1.move:3:13
  │
3 │         let x = a + a;
  │             ^

============ initial bytecode ================

[variant baseline]
public fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
  0: $t2 := +($t0, $t0)
  1: $t1 := 2
  2: return $t1
}

============ after VariableCoalescingAnnotator: ================

[variant baseline]
public fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     # live vars: $t0
     # events: b:$t0, e:$t0, e:$t2, b:$t2
  0: $t2 := +($t0, $t0)
     # live vars:
     # events: b:$t1
  1: $t1 := 2
     # live vars: $t1
     # events: e:$t1
  2: return $t1
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
public fun m::test($t0: u64): u64 {
     var $t1: u64 [unused]
     var $t2: u64
  0: $t0 := +($t0, $t0)
  1: $t2 := 2
  2: return $t2
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {


public test(Arg0: u64): u64 /* def_idx: 0 */ {
L1:	loc0: u64
B0:
	0: CopyLoc[0](Arg0: u64)
	1: MoveLoc[0](Arg0: u64)
	2: Add
	3: LdU64(2)
	4: StLoc[1](loc0: u64)
	5: Pop
	6: MoveLoc[1](loc0: u64)
	7: Ret
}
}
============ bytecode verification succeeded ========
