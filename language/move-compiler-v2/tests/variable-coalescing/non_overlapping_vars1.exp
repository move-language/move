============ initial bytecode ================

[variant baseline]
fun m::test() {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
  0: $t0 := 1
  1: $t2 := 1
  2: $t1 := +($t0, $t2)
  3: $t0 := infer($t1)
  4: $t3 := 2
  5: $t5 := 1
  6: $t4 := +($t3, $t5)
  7: $t3 := infer($t4)
  8: return ()
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test() {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
  0: $t0 := 1
  1: $t2 := 1
  2: $t1 := +($t0, $t2)
  3: $t3 := 2
  4: $t5 := 1
  5: $t4 := +($t3, $t5)
  6: return ()
}

============ after VariableCoalescingAnnotator: ================

[variant baseline]
fun m::test() {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     # live vars:
     # events: b:$t0
  0: $t0 := 1
     # live vars: $t0
     # events: b:$t2
  1: $t2 := 1
     # live vars: $t0, $t2
     # events: e:$t0, e:$t1, e:$t2, b:$t1
  2: $t1 := +($t0, $t2)
     # live vars:
     # events: b:$t3
  3: $t3 := 2
     # live vars: $t3
     # events: b:$t5
  4: $t5 := 1
     # live vars: $t3, $t5
     # events: e:$t3, e:$t4, e:$t5, b:$t4
  5: $t4 := +($t3, $t5)
     # live vars:
  6: return ()
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
fun m::test() {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64 [unused]
     var $t4: u64 [unused]
     var $t5: u64 [unused]
  0: $t0 := 1
  1: $t2 := 1
  2: $t0 := +($t0, $t2)
  3: $t1 := 2
  4: $t2 := 1
  5: $t1 := +($t1, $t2)
  6: return ()
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test() {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64 [unused]
     var $t4: u64 [unused]
     var $t5: u64 [unused]
  0: $t0 := 1
  1: $t2 := 1
  2: $t0 := +($t0, $t2)
  3: $t1 := 2
  4: $t2 := 1
  5: $t1 := +($t1, $t2)
  6: return ()
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {


test() /* def_idx: 0 */ {
B0:
	0: LdU64(1)
	1: LdU64(1)
	2: Add
	3: LdU64(2)
	4: LdU64(1)
	5: Add
	6: Pop
	7: Pop
	8: Ret
}
}
============ bytecode verification succeeded ========
