============ initial bytecode ================

[variant baseline]
fun m::test($t0: m::S): u64 {
     var $t1: u64
     var $t2: m::S
     var $t3: m::S
     var $t4: &mut u64
     var $t5: &mut u64
     var $t6: &mut m::S
     var $t7: u64
     var $t8: &m::S
     var $t9: &u64
  0: $t2 := infer($t0)
  1: $t3 := infer($t2)
  2: $t6 := borrow_local($t2)
  3: $t5 := borrow_field<m::S>.a($t6)
  4: $t4 := infer($t5)
  5: $t7 := 0
  6: write_ref($t4, $t7)
  7: $t8 := borrow_local($t3)
  8: $t9 := borrow_field<m::S>.a($t8)
  9: $t1 := read_ref($t9)
 10: return $t1
}

============ after AvailableCopiesAnalysisProcessor: ================

[variant baseline]
fun m::test($t0: m::S): u64 {
     var $t1: u64
     var $t2: m::S
     var $t3: m::S
     var $t4: &mut u64
     var $t5: &mut u64
     var $t6: &mut m::S
     var $t7: u64
     var $t8: &m::S
     var $t9: &u64
     # before: {}, after: {}
  0: $t2 := infer($t0)
     # before: {}, after: {}
  1: $t3 := infer($t2)
     # before: {}, after: {}
  2: $t6 := borrow_local($t2)
     # before: {}, after: {}
  3: $t5 := borrow_field<m::S>.a($t6)
     # before: {}, after: {$t4 := $t5}
  4: $t4 := infer($t5)
     # before: {$t4 := $t5}, after: {$t4 := $t5}
  5: $t7 := 0
     # before: {$t4 := $t5}, after: {$t4 := $t5}
  6: write_ref($t4, $t7)
     # before: {$t4 := $t5}, after: {$t4 := $t5}
  7: $t8 := borrow_local($t3)
     # before: {$t4 := $t5}, after: {$t4 := $t5}
  8: $t9 := borrow_field<m::S>.a($t8)
     # before: {$t4 := $t5}, after: {$t4 := $t5}
  9: $t1 := read_ref($t9)
     # before: {$t4 := $t5}, after: {$t4 := $t5}
 10: return $t1
}

============ after CopyPropagation: ================

[variant baseline]
fun m::test($t0: m::S): u64 {
     var $t1: u64
     var $t2: m::S
     var $t3: m::S
     var $t4: &mut u64
     var $t5: &mut u64
     var $t6: &mut m::S
     var $t7: u64
     var $t8: &m::S
     var $t9: &u64
  0: $t2 := infer($t0)
  1: $t3 := infer($t2)
  2: $t6 := borrow_local($t2)
  3: $t5 := borrow_field<m::S>.a($t6)
  4: $t4 := infer($t5)
  5: $t7 := 0
  6: write_ref($t5, $t7)
  7: $t8 := borrow_local($t3)
  8: $t9 := borrow_field<m::S>.a($t8)
  9: $t1 := read_ref($t9)
 10: return $t1
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test($t0: m::S): u64 {
     var $t1: u64
     var $t2: m::S
     var $t3: m::S
     var $t4: &mut u64
     var $t5: &mut u64
     var $t6: &mut m::S
     var $t7: u64
     var $t8: &m::S
     var $t9: &u64
  0: $t2 := infer($t0)
  1: $t3 := infer($t2)
  2: $t6 := borrow_local($t2)
  3: $t5 := borrow_field<m::S>.a($t6)
  4: $t7 := 0
  5: write_ref($t5, $t7)
  6: $t8 := borrow_local($t3)
  7: $t9 := borrow_field<m::S>.a($t8)
  8: $t1 := read_ref($t9)
  9: return $t1
}
