//# publish
module 0x42.A {
  struct A has store,drop {
        f: u64,
  }
  struct K has key, store,drop {
        a: Self.A,
  }
  public entry make_save_k(sender: signer){
  label b0:
    move_to<K>(&sender, K { a: A { f: 100 } });
    return;
  }
}

//# run 0x42::A::make_save_k --signers 0x42

//# publish --skip-check-struct-and-pub-function-linking
module 0x42.A {
  struct A has store,drop {
        f: u64,
  }
}

//# publish --verbose
module 0x42.A {
  struct A has store,drop {
        f: u64,
  }
  struct B has store,drop {
        f: u64,
  }
  struct K has key, store,drop {
        a: Self.B,
  }
  public entry take_check_k() acquires K {
    let a: Self.B;
    let f: u64;
  label b0:
    K { a } = move_from<K>(0x42);
    B { f } = move(a);
    assert(move(f) == 100, 42);
    return;
  }
}

//# run 0x42::A::take_check_k
