============ initial bytecode ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: bool
     var $t6: u64
     var $t7: u64
     var $t8: u64
  0: $t2 := infer($t0)
  1: $t4 := 0
  2: $t3 := infer($t4)
  3: label L0
  4: $t6 := 10
  5: $t5 := <($t3, $t6)
  6: if ($t5) goto 7 else goto 13
  7: label L2
  8: $t2 := infer($t0)
  9: $t8 := 1
 10: $t7 := +($t3, $t8)
 11: $t3 := infer($t7)
 12: goto 15
 13: label L3
 14: goto 17
 15: label L4
 16: goto 3
 17: label L1
 18: $t1 := infer($t2)
 19: return $t1
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: bool
     var $t6: u64
     var $t7: u64
     var $t8: u64
  0: $t2 := copy($t0)
  1: $t4 := 0
  2: $t3 := move($t4)
  3: label L0
  4: $t6 := 10
  5: $t5 := <($t3, $t6)
  6: if ($t5) goto 7 else goto 13
  7: label L2
  8: $t2 := copy($t0)
  9: $t8 := 1
 10: $t7 := +($t3, $t8)
 11: $t3 := move($t7)
 12: goto 15
 13: label L3
 14: goto 17
 15: label L4
 16: goto 3
 17: label L1
 18: $t1 := move($t2)
 19: return $t1
}
