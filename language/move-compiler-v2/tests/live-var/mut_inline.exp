============ initial bytecode ================

[variant baseline]
fun m::foo(): u64 {
     var $t0: u64
     var $t1: vector<u64>
     var $t2: vector<u64>
     var $t3: &mut vector<u64>
     var $t4: &mut vector<u64>
     var $t5: u64
     var $t6: &mut vector<u64>
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: &vector<u64>
     var $t12: bool
     var $t13: bool
     var $t14: bool
     var $t15: &u64
     var $t16: &u64
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: u64
     var $t23: u64
     var $t24: u64
     var $t25: bool
     var $t26: bool
     var $t27: &u64
     var $t28: &u64
     var $t29: &vector<u64>
     var $t30: u64
     var $t31: u64
     var $t32: u64
     var $t33: u64
     var $t34: u64
     var $t35: u64
     var $t36: &u64
     var $t37: &vector<u64>
     var $t38: u64
  0: $t2 := ["1", "2", "3"]
  1: $t1 := infer($t2)
  2: $t4 := borrow_local($t1)
  3: $t3 := infer($t4)
  4: $t6 := infer($t3)
  5: $t8 := 0
  6: $t7 := infer($t8)
  7: $t11 := freeze_ref($t6)
  8: $t10 := vector::length<u64>($t11)
  9: $t9 := infer($t10)
 10: label L0
 11: $t12 := <($t7, $t9)
 12: if ($t12) goto 13 else goto 31
 13: label L2
 14: $t17 := freeze_ref($t6)
 15: $t16 := vector::borrow<u64>($t17, $t7)
 16: $t15 := infer($t16)
 17: $t18 := read_ref($t15)
 18: $t19 := 1
 19: $t14 := >($t18, $t19)
 20: $t13 := !($t14)
 21: if ($t13) goto 22 else goto 25
 22: label L5
 23: goto 35
 24: goto 26
 25: label L6
 26: label L7
 27: $t21 := 1
 28: $t20 := +($t7, $t21)
 29: $t7 := infer($t20)
 30: goto 33
 31: label L3
 32: goto 35
 33: label L4
 34: goto 10
 35: label L1
 36: $t22 := infer($t7)
 37: $t24 := 1
 38: $t23 := +($t7, $t24)
 39: $t7 := infer($t23)
 40: label L8
 41: $t25 := <($t7, $t9)
 42: if ($t25) goto 43 else goto 63
 43: label L10
 44: $t29 := freeze_ref($t6)
 45: $t28 := vector::borrow<u64>($t29, $t7)
 46: $t27 := infer($t28)
 47: $t30 := read_ref($t27)
 48: $t31 := 1
 49: $t26 := >($t30, $t31)
 50: if ($t26) goto 51 else goto 57
 51: label L13
 52: vector::swap<u64>($t6, $t22, $t7)
 53: $t33 := 1
 54: $t32 := +($t22, $t33)
 55: $t22 := infer($t32)
 56: goto 58
 57: label L14
 58: label L15
 59: $t35 := 1
 60: $t34 := +($t7, $t35)
 61: $t7 := infer($t34)
 62: goto 65
 63: label L11
 64: goto 67
 65: label L12
 66: goto 40
 67: label L9
 68: $t5 := infer($t22)
 69: $t37 := freeze_ref($t3)
 70: $t38 := 0
 71: $t36 := vector::borrow<u64>($t37, $t38)
 72: $t0 := read_ref($t36)
 73: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun m::foo(): u64 {
     var $t0: u64
     var $t1: vector<u64>
     var $t2: vector<u64>
     var $t3: &mut vector<u64>
     var $t4: &mut vector<u64>
     var $t5: u64
     var $t6: &mut vector<u64>
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: &vector<u64>
     var $t12: bool
     var $t13: bool
     var $t14: bool
     var $t15: &u64
     var $t16: &u64
     var $t17: &vector<u64>
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: u64
     var $t22: u64
     var $t23: u64
     var $t24: u64
     var $t25: bool
     var $t26: bool
     var $t27: &u64
     var $t28: &u64
     var $t29: &vector<u64>
     var $t30: u64
     var $t31: u64
     var $t32: u64
     var $t33: u64
     var $t34: u64
     var $t35: u64
     var $t36: &u64
     var $t37: &vector<u64>
     var $t38: u64
     # live vars:
  0: $t2 := ["1", "2", "3"]
     # live vars: $t2
  1: $t1 := infer($t2)
     # live vars: $t1
  2: $t4 := borrow_local($t1)
     # live vars: $t4
  3: $t3 := infer($t4)
     # live vars: $t3
  4: $t6 := infer($t3)
     # live vars: $t3, $t6
  5: $t8 := 0
     # live vars: $t3, $t6, $t8
  6: $t7 := infer($t8)
     # live vars: $t3, $t6, $t7
  7: $t11 := freeze_ref($t6)
     # live vars: $t3, $t6, $t7, $t11
  8: $t10 := vector::length<u64>($t11)
     # live vars: $t3, $t6, $t7, $t10
  9: $t9 := infer($t10)
     # live vars: $t3, $t6, $t7, $t9
 10: label L0
     # live vars: $t3, $t6, $t7, $t9
 11: $t12 := <($t7, $t9)
     # live vars: $t3, $t6, $t7, $t9, $t12
 12: if ($t12) goto 13 else goto 31
     # live vars: $t3, $t6, $t7, $t9
 13: label L2
     # live vars: $t3, $t6, $t7, $t9
 14: $t17 := freeze_ref($t6)
     # live vars: $t3, $t6, $t7, $t9, $t17
 15: $t16 := vector::borrow<u64>($t17, $t7)
     # live vars: $t3, $t6, $t7, $t9, $t16
 16: $t15 := infer($t16)
     # live vars: $t3, $t6, $t7, $t9, $t15
 17: $t18 := read_ref($t15)
     # live vars: $t3, $t6, $t7, $t9, $t18
 18: $t19 := 1
     # live vars: $t3, $t6, $t7, $t9, $t18, $t19
 19: $t14 := >($t18, $t19)
     # live vars: $t3, $t6, $t7, $t9, $t14
 20: $t13 := !($t14)
     # live vars: $t3, $t6, $t7, $t9, $t13
 21: if ($t13) goto 22 else goto 25
     # live vars: $t3, $t6, $t7, $t9
 22: label L5
     # live vars: $t3, $t6, $t7, $t9
 23: goto 35
     # live vars: $t3, $t6, $t7, $t9
 24: goto 26
     # live vars: $t3, $t6, $t7, $t9
 25: label L6
     # live vars: $t3, $t6, $t7, $t9
 26: label L7
     # live vars: $t3, $t6, $t7, $t9
 27: $t21 := 1
     # live vars: $t3, $t6, $t7, $t9, $t21
 28: $t20 := +($t7, $t21)
     # live vars: $t3, $t6, $t9, $t20
 29: $t7 := infer($t20)
     # live vars: $t3, $t6, $t7, $t9
 30: goto 33
     # live vars: $t3, $t6, $t7, $t9
 31: label L3
     # live vars: $t3, $t6, $t7, $t9
 32: goto 35
     # live vars: $t3, $t6, $t7, $t9
 33: label L4
     # live vars: $t3, $t6, $t7, $t9
 34: goto 10
     # live vars: $t3, $t6, $t7, $t9
 35: label L1
     # live vars: $t3, $t6, $t7, $t9
 36: $t22 := infer($t7)
     # live vars: $t3, $t6, $t7, $t9, $t22
 37: $t24 := 1
     # live vars: $t3, $t6, $t7, $t9, $t22, $t24
 38: $t23 := +($t7, $t24)
     # live vars: $t3, $t6, $t9, $t22, $t23
 39: $t7 := infer($t23)
     # live vars: $t3, $t6, $t7, $t9, $t22
 40: label L8
     # live vars: $t3, $t6, $t7, $t9, $t22
 41: $t25 := <($t7, $t9)
     # live vars: $t3, $t6, $t7, $t9, $t22, $t25
 42: if ($t25) goto 43 else goto 63
     # live vars: $t3, $t6, $t7, $t9, $t22
 43: label L10
     # live vars: $t3, $t6, $t7, $t9, $t22
 44: $t29 := freeze_ref($t6)
     # live vars: $t3, $t6, $t7, $t9, $t22, $t29
 45: $t28 := vector::borrow<u64>($t29, $t7)
     # live vars: $t3, $t6, $t7, $t9, $t22, $t28
 46: $t27 := infer($t28)
     # live vars: $t3, $t6, $t7, $t9, $t22, $t27
 47: $t30 := read_ref($t27)
     # live vars: $t3, $t6, $t7, $t9, $t22, $t30
 48: $t31 := 1
     # live vars: $t3, $t6, $t7, $t9, $t22, $t30, $t31
 49: $t26 := >($t30, $t31)
     # live vars: $t3, $t6, $t7, $t9, $t22, $t26
 50: if ($t26) goto 51 else goto 57
     # live vars: $t3, $t6, $t7, $t9, $t22
 51: label L13
     # live vars: $t3, $t6, $t7, $t9, $t22
 52: vector::swap<u64>($t6, $t22, $t7)
     # live vars: $t3, $t6, $t7, $t9, $t22
 53: $t33 := 1
     # live vars: $t3, $t6, $t7, $t9, $t22, $t33
 54: $t32 := +($t22, $t33)
     # live vars: $t3, $t6, $t7, $t9, $t32
 55: $t22 := infer($t32)
     # live vars: $t3, $t6, $t7, $t9, $t22
 56: goto 58
     # live vars: $t3, $t6, $t7, $t9, $t22
 57: label L14
     # live vars: $t3, $t6, $t7, $t9, $t22
 58: label L15
     # live vars: $t3, $t6, $t7, $t9, $t22
 59: $t35 := 1
     # live vars: $t3, $t6, $t7, $t9, $t22, $t35
 60: $t34 := +($t7, $t35)
     # live vars: $t3, $t6, $t9, $t22, $t34
 61: $t7 := infer($t34)
     # live vars: $t3, $t6, $t7, $t9, $t22
 62: goto 65
     # live vars: $t3, $t6, $t7, $t9, $t22
 63: label L11
     # live vars: $t3, $t22
 64: goto 67
     # live vars: $t3, $t6, $t7, $t9, $t22
 65: label L12
     # live vars: $t3, $t6, $t7, $t9, $t22
 66: goto 40
     # live vars: $t3, $t22
 67: label L9
     # live vars: $t3, $t22
 68: $t5 := infer($t22)
     # live vars: $t3
 69: $t37 := freeze_ref($t3)
     # live vars: $t37
 70: $t38 := 0
     # live vars: $t37, $t38
 71: $t36 := vector::borrow<u64>($t37, $t38)
     # live vars: $t36
 72: $t0 := read_ref($t36)
     # live vars: $t0
 73: return $t0
}
