// -- Model dump before bytecode pipeline
module 0x42::reference_conversion {
    private fun deref(r: &u64): u64 {
        Deref(r)
    }
    private fun use_it(): u64 {
        {
          let x: u64 = 42;
          {
            let r: &mut u64 = Borrow(Mutable)(x);
            r = 43;
            reference_conversion::deref(Freeze(false)(r))
          }
        }
    }
} // end 0x42::reference_conversion

============ initial bytecode ================

[variant baseline]
fun reference_conversion::deref($t0: &u64): u64 {
     var $t1: u64
  0: $t1 := read_ref($t0)
  1: return $t1
}


[variant baseline]
fun reference_conversion::use_it(): u64 {
     var $t0: u64
     var $t1: u64
     var $t2: &mut u64
     var $t3: u64
     var $t4: &u64
  0: $t1 := 42
  1: $t2 := borrow_local($t1)
  2: $t3 := 43
  3: write_ref($t2, $t3)
  4: $t4 := freeze_ref(implicit)($t2)
  5: $t0 := reference_conversion::deref($t4)
  6: return $t0
}


============ bytecode verification succeeded ========
