============ initial bytecode ================

[variant baseline]
fun m::sequential($t0: m::Foo): m::Foo {
     var $t1: m::Foo
     var $t2: m::Foo
     var $t3: m::Foo
     var $t4: m::Foo
     var $t5: m::Foo
     var $t6: m::Foo
  0: $t2 := infer($t0)
  1: $t3 := infer($t2)
  2: $t4 := infer($t3)
  3: $t5 := infer($t4)
  4: $t6 := infer($t5)
  5: $t1 := infer($t6)
  6: return $t1
}

============ after AvailableCopiesAnalysisProcessor: ================

[variant baseline]
fun m::sequential($t0: m::Foo): m::Foo {
     var $t1: m::Foo
     var $t2: m::Foo
     var $t3: m::Foo
     var $t4: m::Foo
     var $t5: m::Foo
     var $t6: m::Foo
     # before: {}, after: {$t2 := $t0}
  0: $t2 := infer($t0)
     # before: {$t2 := $t0}, after: {$t2 := $t0, $t3 := $t2}
  1: $t3 := infer($t2)
     # before: {$t2 := $t0, $t3 := $t2}, after: {$t2 := $t0, $t3 := $t2, $t4 := $t3}
  2: $t4 := infer($t3)
     # before: {$t2 := $t0, $t3 := $t2, $t4 := $t3}, after: {$t2 := $t0, $t3 := $t2, $t4 := $t3, $t5 := $t4}
  3: $t5 := infer($t4)
     # before: {$t2 := $t0, $t3 := $t2, $t4 := $t3, $t5 := $t4}, after: {$t2 := $t0, $t3 := $t2, $t4 := $t3, $t5 := $t4, $t6 := $t5}
  4: $t6 := infer($t5)
     # before: {$t2 := $t0, $t3 := $t2, $t4 := $t3, $t5 := $t4, $t6 := $t5}, after: {$t1 := $t6, $t2 := $t0, $t3 := $t2, $t4 := $t3, $t5 := $t4, $t6 := $t5}
  5: $t1 := infer($t6)
     # before: {$t1 := $t6, $t2 := $t0, $t3 := $t2, $t4 := $t3, $t5 := $t4, $t6 := $t5}, after: {$t1 := $t6, $t2 := $t0, $t3 := $t2, $t4 := $t3, $t5 := $t4, $t6 := $t5}
  6: return $t1
}

============ after CopyPropagation: ================

[variant baseline]
fun m::sequential($t0: m::Foo): m::Foo {
     var $t1: m::Foo
     var $t2: m::Foo
     var $t3: m::Foo
     var $t4: m::Foo
     var $t5: m::Foo
     var $t6: m::Foo
  0: $t2 := infer($t0)
  1: $t3 := infer($t0)
  2: $t4 := infer($t0)
  3: $t5 := infer($t0)
  4: $t6 := infer($t0)
  5: $t1 := infer($t0)
  6: return $t0
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::sequential($t0: m::Foo): m::Foo {
     var $t1: m::Foo
     var $t2: m::Foo
     var $t3: m::Foo
     var $t4: m::Foo
     var $t5: m::Foo
     var $t6: m::Foo
  0: return $t0
}
