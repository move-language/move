============ initial bytecode ================

[variant baseline]
fun m::test($t0: bool, $t1: u64): u64 {
     var $t2: u64
     var $t3: u64
  0: if ($t0) goto 1 else goto 4
  1: label L0
  2: $t3 := infer($t1)
  3: goto 6
  4: label L1
  5: $t3 := infer($t1)
  6: label L2
  7: $t2 := infer($t3)
  8: return $t2
}

============ after AvailableCopiesAnalysisProcessor: ================

[variant baseline]
fun m::test($t0: bool, $t1: u64): u64 {
     var $t2: u64
     var $t3: u64
     # before: {}, after: {}
  0: if ($t0) goto 1 else goto 4
     # before: {}, after: {}
  1: label L0
     # before: {}, after: {$t3 := $t1}
  2: $t3 := infer($t1)
     # before: {$t3 := $t1}, after: {$t3 := $t1}
  3: goto 6
     # before: {}, after: {}
  4: label L1
     # before: {}, after: {$t3 := $t1}
  5: $t3 := infer($t1)
     # before: {$t3 := $t1}, after: {$t3 := $t1}
  6: label L2
     # before: {$t3 := $t1}, after: {$t2 := $t3, $t3 := $t1}
  7: $t2 := infer($t3)
     # before: {$t2 := $t3, $t3 := $t1}, after: {$t2 := $t3, $t3 := $t1}
  8: return $t2
}

============ after CopyPropagation: ================

[variant baseline]
fun m::test($t0: bool, $t1: u64): u64 {
     var $t2: u64
     var $t3: u64
  0: if ($t0) goto 1 else goto 4
  1: label L0
  2: $t3 := infer($t1)
  3: goto 6
  4: label L1
  5: $t3 := infer($t1)
  6: label L2
  7: $t2 := infer($t1)
  8: return $t1
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test($t0: bool, $t1: u64): u64 {
     var $t2: u64
     var $t3: u64
  0: if ($t0) goto 1 else goto 3
  1: label L0
  2: goto 4
  3: label L1
  4: label L2
  5: return $t1
}
