============ initial bytecode ================

[variant baseline]
fun m::test() {
     var $t0: &u64
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
     var $t4: u64
     var $t5: bool
     var $t6: u64
     var $t7: u64
  0: $t1 := 5
  1: $t0 := borrow_local($t1)
  2: $t2 := infer($t0)
  3: $t4 := 5
  4: $t3 := borrow_local($t4)
  5: $t0 := infer($t3)
  6: $t6 := read_ref($t0)
  7: $t7 := 5
  8: $t5 := ==($t6, $t7)
  9: return ()
}

============ after VariableCoalescingAnnotator: ================

[variant baseline]
fun m::test() {
     var $t0: &u64
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
     var $t4: u64
     var $t5: bool
     var $t6: u64
     var $t7: u64
     # live vars:
  0: $t1 := 5
     # live vars: $t1
     # events: b:$t0
  1: $t0 := borrow_local($t1)
     # live vars: $t0
     # events: b:$t2
  2: $t2 := move($t0)
     # live vars: $t2
     # events: e:$t2
  3: drop($t2)
     # live vars:
  4: $t4 := 5
     # live vars: $t4
     # events: b:$t3
  5: $t3 := borrow_local($t4)
     # live vars: $t3
     # events: e:$t3
  6: $t0 := move($t3)
     # live vars: $t0
     # events: e:$t0, b:$t6
  7: $t6 := read_ref($t0)
     # live vars: $t6
     # events: b:$t7
  8: $t7 := 5
     # live vars: $t6, $t7
     # events: e:$t5, e:$t6, e:$t7, b:$t5
  9: $t5 := ==($t6, $t7)
     # live vars:
 10: return ()
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
fun m::test() {
     var $t0: &u64
     var $t1: u64
     var $t2: &u64
     var $t3: &u64 [unused]
     var $t4: u64
     var $t5: bool
     var $t6: u64
     var $t7: u64
  0: $t1 := 5
  1: $t0 := borrow_local($t1)
  2: $t2 := move($t0)
  3: drop($t2)
  4: $t4 := 5
  5: $t2 := borrow_local($t4)
  6: $t0 := move($t2)
  7: $t6 := read_ref($t0)
  8: $t7 := 5
  9: $t5 := ==($t6, $t7)
 10: return ()
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {


test() /* def_idx: 0 */ {
L0:	loc0: u64
L1:	loc1: &u64
L2:	loc2: u64
L3:	loc3: &u64
B0:
	0: LdU64(5)
	1: StLoc[0](loc0: u64)
	2: ImmBorrowLoc[0](loc0: u64)
	3: StLoc[1](loc1: &u64)
	4: MoveLoc[1](loc1: &u64)
	5: Pop
	6: LdU64(5)
	7: StLoc[2](loc2: u64)
	8: ImmBorrowLoc[2](loc2: u64)
	9: StLoc[1](loc1: &u64)
	10: MoveLoc[1](loc1: &u64)
	11: StLoc[3](loc3: &u64)
	12: MoveLoc[3](loc3: &u64)
	13: ReadRef
	14: LdU64(5)
	15: Eq
	16: Pop
	17: Ret
}
}
============ bytecode verification succeeded ========
