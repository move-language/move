
Diagnostics:
error: mutable reference in local `c` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:15:9
   │
14 │         let f1 = &inner.f1;
   │                  --------- previous field borrow
15 │         *c;
   │         ^^ requirement enforced here
16 │         *inner;
17 │         *f1;
   │         --- conflicting reference `f1` used here

error: mutable reference in local `inner` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:16:9
   │
14 │         let f1 = &inner.f1;
   │                  --------- previous field borrow
15 │         *c;
16 │         *inner;
   │         ^^^^^^ requirement enforced here
17 │         *f1;
   │         --- conflicting reference `f1` used here

error: mutable reference in local `inner` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:18:9
   │
18 │         *inner;
   │         ^^^^^^ requirement enforced here
19 │         *c;
   │         -- conflicting reference `c` used here

error: cannot immutably borrow since mutable references exist
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:23:18
   │
22 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
23 │         let f1 = &inner.f1;
   │                  ^^^^^^^^^ immutable borrow attempted here
24 │         *c;
   │         -- requirement enforced here
   ·
28 │         *c;
   │         -- conflicting reference `c` used here

error: cannot immutably borrow local `inner` since mutable references exist
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:23:18
   │
22 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
23 │         let f1 = &inner.f1;
   │                  ^^^^^^^^^ immutable borrow attempted here
24 │         *c;
25 │         *inner;
   │         ------ requirement enforced here
   ·
28 │         *c;
   │         -- conflicting reference `c` used here

error: cannot immutably borrow since mutable references exist
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:23:18
   │
22 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
23 │         let f1 = &inner.f1;
   │                  ^^^^^^^^^ immutable borrow attempted here
   ·
26 │         *f1;
   │         --- requirement enforced here
27 │         *inner;
28 │         *c;
   │         -- conflicting reference `c` used here

error: mutable reference in local `inner` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:25:9
   │
22 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
23 │         let f1 = &inner.f1;
   │                  --------- previous field borrow
24 │         *c;
25 │         *inner;
   │         ^^^^^^ requirement enforced here
26 │         *f1;
   │         --- conflicting reference `f1` used here
27 │         *inner;
28 │         *c;
   │         -- conflicting reference `c` used here

error: mutable reference in local `inner` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:27:9
   │
22 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
   ·
27 │         *inner;
   │         ^^^^^^ requirement enforced here
28 │         *c;
   │         -- conflicting reference `c` used here

error: mutable reference in local `c` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:33:9
   │
32 │         let f1 = &mut inner.f1;
   │                  ------------- previous mutable field borrow
33 │         *c;
   │         ^^ requirement enforced here
34 │         *inner;
35 │         *f1;
   │         --- conflicting reference `f1` used here

error: mutable reference in local `inner` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:34:9
   │
32 │         let f1 = &mut inner.f1;
   │                  ------------- previous mutable field borrow
33 │         *c;
34 │         *inner;
   │         ^^^^^^ requirement enforced here
35 │         *f1;
   │         --- conflicting reference `f1` used here

error: mutable reference in local `f1` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:35:9
   │
35 │         *f1;
   │         ^^^ requirement enforced here
36 │         *inner;
37 │         *c;
   │         -- conflicting reference `c` used here

error: mutable reference in local `inner` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:36:9
   │
36 │         *inner;
   │         ^^^^^^ requirement enforced here
37 │         *c;
   │         -- conflicting reference `c` used here

error: cannot mutably borrow since mutable references exist
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:41:18
   │
40 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
41 │         let f1 = &mut inner.f1;
   │                  ^^^^^^^^^^^^^ mutable borrow attempted here
42 │         *c;
   │         -- requirement enforced here
   ·
46 │         *c;
   │         -- conflicting reference `c` used here

error: cannot mutably borrow local `inner` since mutable references exist
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:41:18
   │
40 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
41 │         let f1 = &mut inner.f1;
   │                  ^^^^^^^^^^^^^ mutable borrow attempted here
42 │         *c;
43 │         *inner;
   │         ------ requirement enforced here
   ·
46 │         *c;
   │         -- conflicting reference `c` used here

error: cannot mutably borrow since mutable references exist
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:41:18
   │
40 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
41 │         let f1 = &mut inner.f1;
   │                  ^^^^^^^^^^^^^ mutable borrow attempted here
   ·
44 │         *f1;
   │         --- requirement enforced here
45 │         *inner;
46 │         *c;
   │         -- conflicting reference `c` used here

error: mutable reference in local `inner` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:43:9
   │
40 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
41 │         let f1 = &mut inner.f1;
   │                  ------------- previous mutable field borrow
42 │         *c;
43 │         *inner;
   │         ^^^^^^ requirement enforced here
44 │         *f1;
   │         --- conflicting reference `f1` used here
45 │         *inner;
46 │         *c;
   │         -- conflicting reference `c` used here

error: mutable reference in local `inner` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:45:9
   │
40 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
   ·
45 │         *inner;
   │         ^^^^^^ requirement enforced here
46 │         *c;
   │         -- conflicting reference `c` used here
