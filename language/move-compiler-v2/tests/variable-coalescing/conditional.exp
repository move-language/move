============ initial bytecode ================

[variant baseline]
fun m::test($t0: bool): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
  0: $t3 := 2
  1: $t2 := infer($t3)
  2: if ($t0) goto 3 else goto 8
  3: label L0
  4: $t5 := 3
  5: $t4 := infer($t5)
  6: $t1 := infer($t4)
  7: goto 13
  8: label L1
  9: $t8 := 1
 10: $t7 := +($t2, $t8)
 11: $t6 := infer($t7)
 12: $t1 := infer($t6)
 13: label L2
 14: return $t1
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun m::test($t0: bool): u64 {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     # live vars: $t0
  0: $t3 := 2
     # live vars: $t0, $t3
  1: $t2 := infer($t3)
     # live vars: $t0, $t2
  2: if ($t0) goto 3 else goto 8
     # live vars: $t2
  3: label L0
     # live vars:
  4: $t5 := 3
     # live vars: $t5
  5: $t4 := infer($t5)
     # live vars: $t4
  6: $t1 := infer($t4)
     # live vars: $t1
  7: goto 13
     # live vars: $t2
  8: label L1
     # live vars: $t2
  9: $t8 := 1
     # live vars: $t2, $t8
 10: $t7 := +($t2, $t8)
     # live vars: $t7
 11: $t6 := infer($t7)
     # live vars: $t6
 12: $t1 := infer($t6)
     # live vars: $t1
 13: label L2
     # live vars: $t1
 14: return $t1
}

============ after VariableCoalescing: ================

[variant baseline]
fun m::test($t0: bool): u64 {
     var $t1: u64 [unused]
     var $t2: u64 [unused]
     var $t3: u64
     var $t4: u64 [unused]
     var $t5: u64
     var $t6: u64 [unused]
     var $t7: u64 [unused]
     var $t8: u64
  0: $t3 := 2
  1: $t3 := infer($t3)
  2: if ($t0) goto 3 else goto 8
  3: label L0
  4: $t5 := 3
  5: $t5 := infer($t5)
  6: $t5 := infer($t5)
  7: goto 13
  8: label L1
  9: $t8 := 1
 10: $t3 := +($t3, $t8)
 11: $t3 := infer($t3)
 12: $t5 := infer($t3)
 13: label L2
 14: return $t5
}
