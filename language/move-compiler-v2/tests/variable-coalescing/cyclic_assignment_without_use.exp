============ initial bytecode ================

[variant baseline]
public fun m::test($t0: u64) {
     var $t1: u64
     var $t2: u64
     var $t3: u64
  0: $t1 := infer($t0)
  1: $t2 := infer($t1)
  2: $t3 := infer($t2)
  3: $t1 := infer($t3)
  4: return ()
}

============ after VariableCoalescingAnnotator: ================

[variant baseline]
public fun m::test($t0: u64) {
     var $t1: u64
     var $t2: u64
     var $t3: u64
     # live vars: $t0
     # events: b:$t0, e:$t0, b:$t1
  0: $t1 := move($t0)
     # live vars: $t1
     # events: e:$t1, b:$t2
  1: $t2 := move($t1)
     # live vars: $t2
     # events: e:$t2, b:$t3
  2: $t3 := move($t2)
     # live vars: $t3
     # events: e:$t3
  3: $t1 := move($t3)
     # live vars:
  4: return ()
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
public fun m::test($t0: u64) {
     var $t1: u64 [unused]
     var $t2: u64 [unused]
     var $t3: u64 [unused]
  0: $t0 := move($t0)
  1: $t0 := move($t0)
  2: $t0 := move($t0)
  3: $t0 := move($t0)
  4: return ()
}

============ after DeadStoreElimination: ================

[variant baseline]
public fun m::test($t0: u64) {
     var $t1: u64 [unused]
     var $t2: u64 [unused]
     var $t3: u64 [unused]
  0: return ()
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {


public test(Arg0: u64) /* def_idx: 0 */ {
B0:
	0: Ret
}
}
