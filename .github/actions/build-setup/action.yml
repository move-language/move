name: "CI Environment Setup"
description: |
  Setup a common environment for CI jobs.
  This should in general be a no-op as it should be run inside a docker container which already has all the components installed.
  Importantly the installation script checks the versions of tools and will install newer versions if specified for most tools.
runs:
  using: "composite"
  steps:
    - name: CPUInfo
      shell: bash
      run: |
        if [[ "$(uname -s)" == "Linux" ]]; then
          cat /proc/cpuinfo | grep "model name" | head -1
          cat /proc/cpuinfo | grep "cpu cores" | head -1
        fi
        if [[ "$(uname -s)" == "Darwin" ]]; then
          sysctl -n machdep.cpu.brand_string
          sysctl -n hw.ncpu
        fi
    - name: MemInfo
      shell: bash
      run: |
        if [[ "$(uname -s)" == "Linux" ]]; then
          cat /proc/meminfo | grep MemTotal
        fi
        if [[ "$(uname -s)" == "Darwin" ]]; then
          echo $(( $(sysctl hw.memsize | sed 's/hw.memsize: //') / 1073741824 )) gb
        fi
    - name: reconfigure container for gha runner
      shell: bash
      run: |
        if [[ "$(uname -s)" == "Darwin" ]]; then
          sudo dscl . append /Groups/wheel GroupMembership $USER
          sudo mkdir -p /opt/cargo || true
          sudo mkdir -p /opt/git || true
          sudo chmod -R g+rw /opt/
          sudo chgrp -R wheel /opt/
          mv /Users/runner/work/diem/diem /opt/git/diem
          ln -s /opt/git/diem /Users/runner/work/diem/diem
          cd /opt/git/diem
        fi

        # prepare move lang prover tooling.
        # By setting these values the dev-setup.sh script can detect already installed executables (and check versions).
        echo 'CARGO_HOME=/opt/cargo' | tee -a $GITHUB_ENV
        echo 'RUSTUP_HOME=/opt/rustup' | tee -a $GITHUB_ENV
        echo 'Z3_EXE='/opt/bin/z3 | tee -a $GITHUB_ENV
        echo 'CVC5_EXE='/opt/bin/cvc5 | tee -a $GITHUB_ENV
        echo 'DOTNET_ROOT='/opt/dotnet/ | tee -a $GITHUB_ENV
        echo 'BOOGIE_EXE='/opt/dotnet/tools/boogie | tee -a $GITHUB_ENV
        echo 'MVP_TEST_ON_CI'='1' | tee -a $GITHUB_ENV
        echo 'SOLC_EXE='/opt/bin/solc | tee -a $GITHUB_ENV
        echo "/opt/bin" | tee -a $GITHUB_PATH
        echo "/opt/dotnet" | tee -a $GITHUB_PATH
        echo "/opt/dotnet/tools" | tee -a $GITHUB_PATH
        echo "/opt/cargo/bin" | tee -a $GITHUB_PATH
        echo '/usr/lib/golang/bin' | tee -a $GITHUB_PATH
    - name: install common dependencies (should be ~ 10 seconds in a linux build, on mac it's a beast.)
      shell: bash
      run: scripts/dev_setup.sh -t -b -p -y -d -n
    - id: rust-environment
      shell: bash
      run: |
        echo 'DIEM_DUMP_LOGS=1' | tee -a $GITHUB_ENV
        echo 'CARGO_INCREMENTAL=0' | tee -a $GITHUB_ENV
