//# publish
module 0x1.A {
    import 0x1.signer;
    struct T has key {v: u64}

    public A0(account: &signer) acquires T {
        let sender: address;
        let t_ref: &mut Self.T;
    label b0:
        sender = signer.address_of(move(account));
        t_ref = borrow_global_mut<T>(copy(sender));
        // cannot acquire T, still borrowed
        t_ref = borrow_global_mut<T>(move(sender));
        _ = move(t_ref);
        return;
    }
}
