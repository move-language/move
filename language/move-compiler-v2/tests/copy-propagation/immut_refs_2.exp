
Diagnostics:
warning: Unused local variable `a`. Consider removing or prefixing with an underscore: `_a`
  ┌─ tests/copy-propagation/immut_refs_2.move:4:13
  │
4 │         let a = &p;
  │             ^

============ initial bytecode ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
  0: $t3 := borrow_local($t0)
  1: $t2 := infer($t3)
  2: $t4 := infer($t0)
  3: $t5 := infer($t4)
  4: $t6 := infer($t5)
  5: $t1 := infer($t6)
  6: return $t1
}

============ after AvailableCopiesAnalysisProcessor: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     # before: {}, after: {}
  0: $t3 := borrow_local($t0)
     # before: {}, after: {$t2 := $t3}
  1: $t2 := move($t3)
     # before: {$t2 := $t3}, after: {$t2 := $t3}
  2: drop($t2)
     # before: {$t2 := $t3}, after: {$t2 := $t3}
  3: $t4 := move($t0)
     # before: {$t2 := $t3}, after: {$t2 := $t3, $t5 := $t4}
  4: $t5 := move($t4)
     # before: {$t2 := $t3, $t5 := $t4}, after: {$t2 := $t3, $t5 := $t4, $t6 := $t5}
  5: $t6 := move($t5)
     # before: {$t2 := $t3, $t5 := $t4, $t6 := $t5}, after: {$t1 := $t6, $t2 := $t3, $t5 := $t4, $t6 := $t5}
  6: $t1 := move($t6)
     # before: {$t1 := $t6, $t2 := $t3, $t5 := $t4, $t6 := $t5}, after: {$t1 := $t6, $t2 := $t3, $t5 := $t4, $t6 := $t5}
  7: return $t1
}

============ after CopyPropagation: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: &u64
     var $t3: &u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
  0: $t3 := borrow_local($t0)
  1: $t2 := move($t3)
  2: drop($t3)
  3: $t4 := move($t0)
  4: $t5 := move($t4)
  5: $t6 := move($t4)
  6: $t1 := move($t4)
  7: return $t4
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64 [unused]
     var $t2: &u64 [unused]
     var $t3: &u64
     var $t4: u64
     var $t5: u64 [unused]
     var $t6: u64 [unused]
  0: $t3 := borrow_local($t0)
  1: drop($t3)
  2: $t4 := move($t0)
  3: return $t4
}
