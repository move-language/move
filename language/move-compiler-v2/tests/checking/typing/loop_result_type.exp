// ---- Model Dump
module 0x2::X {
    struct R {
        dummy_field: bool,
    }
} // end 0x2::X
module 0x2::M {
    use 0x2::X; // resolved as: 0x2::X
    private fun foo(_x: u64) {
        Tuple()
    }
    private fun t0(): X::R {
        loop {
          Tuple()
        }
    }
    private fun t1(): u64 {
        loop {
          {
            let x: u64 = 0;
            x;
            Tuple()
          }
        }
    }
    private fun t2() {
        M::foo(loop {
          Tuple()
        })
    }
    private fun t3(): X::R {
        {
          let x: X::R = loop {
            0;
            Tuple()
          };
          x
        }
    }
    private fun t4() {
        {
          let () = loop {
            break
          };
          {
            let () = loop {
              if false {
                break
              } else {
                Tuple()
              }
            };
            Tuple()
          }
        }
    }
    spec fun $foo(_x: u64) {
        Tuple()
    }
    spec fun $t0(): X::R {
        loop {
          Tuple()
        }
    }
    spec fun $t1(): u64;
    spec fun $t2() {
        M::$foo(loop {
          Tuple()
        })
    }
    spec fun $t3(): X::R;
    spec fun $t4() {
        {
          let () = loop {
            break
          };
          {
            let () = loop {
              if false {
                break
              } else {
                Tuple()
              }
            };
            Tuple()
          }
        }
    }
} // end 0x2::M
