/* =======================================
 * Generated by Move-To-Yul compiler v0.0
 * ======================================= */


object "A2_M" {
    code {
        codecopy(0, dataoffset("A2_M_deployed"), datasize("A2_M_deployed"))
        return(0, datasize("A2_M_deployed"))
    }
    object "A2_M_deployed" {
        code {
            mstore(0, memoryguard(160))
            if iszero(lt(calldatasize(), 4))
            {
                let selector := $Shr(calldataload(0), 224)
                switch selector
                default {}
            }
            $Abort(97)
            function $Abort(code) {
                mstore(0, code)
                revert(24, 8) // TODO: store code as a string?
            }
            function $Shr(x, y) -> r {
                r := shr(y, x)
            }
        }
    }
}


!! Succeeded compiling Yul


!! Move-To-Yul Diagnostics:
 error: decode function must only has one argument of type bytes
  ┌─ tests/TestABINativeError.move:8:5
  │
8 │     public native fun decode_wrong_input_type(input: vector<u64>): (u8, u8);
  │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: decode function must only has one argument of type bytes
   ┌─ tests/TestABINativeError.move:11:5
   │
11 │     public native fun decode_wrong_input_type_sig(input: vector<u64>): (u8, u8);
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: encode function must only has one return value of type bytes
   ┌─ tests/TestABINativeError.move:14:5
   │
14 │     public native fun encode_wrong_input_type(input: vector<u64>): vector<u64>;
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: encode function must only has one return value of type bytes
   ┌─ tests/TestABINativeError.move:20:5
   │
20 │     public native fun encode_wrong_input_type_packed(input: vector<u64>): vector<u64>;
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: encode function must only has one return value of type bytes
   ┌─ tests/TestABINativeError.move:23:5
   │
23 │     public native fun encode_wrong_input_type_packed_sig(input: vector<u64>): vector<u64>;
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: encode function must only has one return value of type bytes
   ┌─ tests/TestABINativeError.move:17:5
   │
17 │     public native fun encode_wrong_input_type_sig(input: vector<u64>): vector<u64>;
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
