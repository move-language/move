============ initial bytecode ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
  0: $t2 := 1
  1: $t1 := infer($t2)
  2: $t4 := 2
  3: $t3 := infer($t4)
  4: $t5 := 9
  5: $t1 := infer($t5)
  6: $t0 := +($t1, $t3)
  7: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t1 := infer($t2)
     # live vars:
  2: $t4 := 2
     # live vars: $t4
  3: $t3 := infer($t4)
     # live vars: $t3
  4: $t5 := 9
     # live vars: $t3, $t5
  5: $t1 := infer($t5)
     # live vars: $t1, $t3
  6: $t0 := +($t1, $t3)
     # live vars: $t0
  7: return $t0
}

============ after VariableCoalescing: ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64 [unused]
     var $t1: u64 [unused]
     var $t2: u64
     var $t3: u64 [unused]
     var $t4: u64 [unused]
     var $t5: u64
  0: $t2 := 1
  1: $t5 := infer($t2)
  2: $t2 := 2
  3: $t2 := infer($t2)
  4: $t5 := 9
  5: $t5 := infer($t5)
  6: $t2 := +($t5, $t2)
  7: return $t2
}
