============ initial bytecode ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
  0: $t2 := 42
  1: $t1 := borrow_local($t2)
  2: $t0 := read_ref($t1)
  3: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
     # live vars:
  0: $t2 := 42
     # live vars: $t2
  1: $t1 := borrow_local($t2)
     # live vars: $t1
  2: $t0 := read_ref($t1)
     # live vars: $t0
  3: return $t0
}

============ after ReferenceSafetyProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
     # live vars:
     # graph: {}
     # locals: {}
     # globals: {}
     #
  0: $t2 := 42
     # live vars: $t2
     # graph: {}
     # locals: {}
     # globals: {}
     #
  1: $t1 := borrow_local($t2)
     # live vars: $t1
     # graph: {@100=local($t2)[borrow(false) -> @101],@101=derived[]}
     # locals: {$t1=@101,$t2=@100}
     # globals: {}
     #
  2: $t0 := read_ref($t1)
     # live vars: $t0
     # graph: {@100=local($t2)[]}
     # locals: {$t2=@100}
     # globals: {}
     #
  3: return $t0
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
     # abort state: {returns}
     # live vars:
     # graph: {}
     # locals: {}
     # globals: {}
     #
  0: $t2 := 42
     # abort state: {returns}
     # live vars: $t2
     # graph: {}
     # locals: {}
     # globals: {}
     #
  1: $t1 := borrow_local($t2)
     # abort state: {returns}
     # live vars: $t1
     # graph: {@100=local($t2)[borrow(false) -> @101],@101=derived[]}
     # locals: {$t1=@101,$t2=@100}
     # globals: {}
     #
  2: $t0 := read_ref($t1)
     # abort state: {returns}
     # live vars: $t0
     # graph: {@100=local($t2)[]}
     # locals: {$t2=@100}
     # globals: {}
     #
  3: return $t0
}

============ after AbilityProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: u8
  0: $t2 := 42
  1: $t1 := borrow_local($t2)
  2: $t0 := read_ref($t1)
  3: return $t0
}
