============ initial bytecode ================

[variant baseline]
fun m::test($t0: u64): bool {
     var $t1: bool
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
  0: $t2 := infer($t0)
  1: $t3 := infer($t2)
  2: $t4 := infer($t3)
  3: $t6 := 1
  4: $t5 := +($t0, $t6)
  5: $t3 := infer($t5)
  6: $t1 := ==($t2, $t4)
  7: return $t1
}

============ after AvailableCopiesAnalysisProcessor: ================

[variant baseline]
fun m::test($t0: u64): bool {
     var $t1: bool
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     # before: {}, after: {$t2 := $t0}
  0: $t2 := infer($t0)
     # before: {$t2 := $t0}, after: {$t2 := $t0, $t3 := $t2}
  1: $t3 := infer($t2)
     # before: {$t2 := $t0, $t3 := $t2}, after: {$t2 := $t0, $t3 := $t2, $t4 := $t3}
  2: $t4 := infer($t3)
     # before: {$t2 := $t0, $t3 := $t2, $t4 := $t3}, after: {$t2 := $t0, $t3 := $t2, $t4 := $t3}
  3: $t6 := 1
     # before: {$t2 := $t0, $t3 := $t2, $t4 := $t3}, after: {$t2 := $t0, $t3 := $t2, $t4 := $t3}
  4: $t5 := +($t0, $t6)
     # before: {$t2 := $t0, $t3 := $t2, $t4 := $t3}, after: {$t2 := $t0, $t3 := $t5}
  5: $t3 := infer($t5)
     # before: {$t2 := $t0, $t3 := $t5}, after: {$t2 := $t0, $t3 := $t5}
  6: $t1 := ==($t2, $t4)
     # before: {$t2 := $t0, $t3 := $t5}, after: {$t2 := $t0, $t3 := $t5}
  7: return $t1
}

============ after CopyPropagation: ================

[variant baseline]
fun m::test($t0: u64): bool {
     var $t1: bool
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
  0: $t2 := infer($t0)
  1: $t3 := infer($t0)
  2: $t4 := infer($t0)
  3: $t6 := 1
  4: $t5 := +($t0, $t6)
  5: $t3 := infer($t5)
  6: $t1 := ==($t0, $t4)
  7: return $t1
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test($t0: u64): bool {
     var $t1: bool
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
  0: $t4 := infer($t0)
  1: $t6 := 1
  2: $t5 := +($t0, $t6)
  3: $t1 := ==($t0, $t4)
  4: return $t1
}
