============ initial bytecode ================

[variant baseline]
public fun M::test_resource($t0: &signer) {
     var $t1: M::R
     var $t2: u64
     var $t3: bool
     var $t4: u64
     var $t5: &M::R
     var $t6: address
     var $t7: &u64
     var $t8: u64
     var $t9: u64
  0: $t2 := 1
  1: $t1 := pack M::R($t2)
  2: move_to<M::R>($t0, $t1)
  3: $t6 := 0x42
  4: $t5 := borrow_global<M::R>($t6)
  5: $t7 := borrow_field<M::R>.f($t5)
  6: $t4 := read_ref($t7)
  7: $t8 := 1
  8: $t3 := ==($t4, $t8)
  9: if ($t3) goto 10 else goto 12
 10: label L0
 11: goto 15
 12: label L1
 13: $t9 := 1
 14: abort($t9)
 15: label L2
 16: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun M::test_resource($t0: &signer) {
     var $t1: M::R
     var $t2: u64
     var $t3: bool
     var $t4: u64
     var $t5: &M::R
     var $t6: address
     var $t7: &u64
     var $t8: u64
     var $t9: u64
     # live vars: $t0
  0: $t2 := 1
     # live vars: $t0, $t2
  1: $t1 := pack M::R($t2)
     # live vars: $t0, $t1
  2: move_to<M::R>($t0, $t1)
     # live vars:
  3: $t6 := 0x42
     # live vars: $t6
  4: $t5 := borrow_global<M::R>($t6)
     # live vars: $t5
  5: $t7 := borrow_field<M::R>.f($t5)
     # live vars: $t7
  6: $t4 := read_ref($t7)
     # live vars: $t4
  7: $t8 := 1
     # live vars: $t4, $t8
  8: $t3 := ==($t4, $t8)
     # live vars: $t3
  9: if ($t3) goto 10 else goto 12
     # live vars:
 10: label L0
     # live vars:
 11: goto 15
     # live vars:
 12: label L1
     # live vars:
 13: $t9 := 1
     # live vars: $t9
 14: abort($t9)
     # live vars:
 15: label L2
     # live vars:
 16: return ()
}

============ after MemorySafetyProcessor: ================

[variant baseline]
public fun M::test_resource($t0: &signer) {
     var $t1: M::R
     var $t2: u64
     var $t3: bool
     var $t4: u64
     var $t5: &M::R
     var $t6: address
     var $t7: &u64
     var $t8: u64
     var $t9: u64
     # live vars: $t0
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: $t2 := 1
     # live vars: $t0, $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  1: $t1 := pack M::R($t2)
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t2}
     #
  2: move_to<M::R>($t0, $t1)
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t2}
     #
  3: $t6 := 0x42
     # live vars: $t6
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t2}
     #
  4: $t5 := borrow_global<M::R>($t6)
     # live vars: $t5
     # graph: {L1024=global<M::R>[borrow_global(false) -> L1025],L1025=local($t5)[]}
     # local_to_label: {$t5=L1025}
     # global_to_label: {M::R=L1024}
     # moved: {$t0,$t1,$t2}
     #
  5: $t7 := borrow_field<M::R>.f($t5)
     # live vars: $t7
     # graph: {L1024=global<M::R>[borrow_global(false) -> L1025],L1025=local($t5)[borrow_field(false) -> L1281],L1281=local($t7)[]}
     # local_to_label: {$t5=L1025,$t7=L1281}
     # global_to_label: {M::R=L1024}
     # moved: {$t0,$t1,$t2}
     #
  6: $t4 := read_ref($t7)
     # live vars: $t4
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t2}
     #
  7: $t8 := 1
     # live vars: $t4, $t8
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t2}
     #
  8: $t3 := ==($t4, $t8)
     # live vars: $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t2,$t4,$t8}
     #
  9: if ($t3) goto 10 else goto 12
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t2,$t4,$t8}
     #
 10: label L0
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t2,$t4,$t8}
     #
 11: goto 15
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t2,$t4,$t8}
     #
 12: label L1
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t2,$t4,$t8}
     #
 13: $t9 := 1
     # live vars: $t9
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t2,$t4,$t8}
     #
 14: abort($t9)
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t2,$t4,$t8}
     #
 15: label L2
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t2,$t4,$t8}
     #
 16: return ()
}

============ after ExplicitDrop: ================

[variant baseline]
public fun M::test_resource($t0: &signer) {
     var $t1: M::R
     var $t2: u64
     var $t3: bool
     var $t4: u64
     var $t5: &M::R
     var $t6: address
     var $t7: &u64
     var $t8: u64
     var $t9: u64
  0: $t2 := 1
  1: $t1 := pack M::R($t2)
  2: move_to<M::R>($t0, $t1)
  3: $t6 := 0x42
  4: $t5 := borrow_global<M::R>($t6)
  5: $t7 := borrow_field<M::R>.f($t5)
  6: drop($t5)
  7: $t4 := read_ref($t7)
  8: drop($t7)
  9: $t8 := 1
 10: $t3 := ==($t4, $t8)
 11: if ($t3) goto 12 else goto 14
 12: label L0
 13: goto 17
 14: label L1
 15: $t9 := 1
 16: abort($t9)
 17: label L2
 18: return ()
}
