// -- Model dump before env processor pipeline:
module 0xcafe::m {
    private fun map1(x: u64,f: |u64|u64): u64 {
        (f)(x)
    }
    private fun map2(x: u8,f: |u8|u8): u8 {
        (f)(x)
    }
    private fun nested(x: u64,c: u64): u64 {
        m::map1(x, |y: u64| Cast<u64>(m::map2(Cast<u8>(Sub<u64>(y, c)), |y: u8| Add<u8>(y, Cast<u8>(c)))))
    }
} // end 0xcafe::m


// -- Model dump after env processor lambda-lifting:
module 0xcafe::m {
    private fun map1(x: u64,f: |u64|u64): u64 {
        (f)(x)
    }
    private fun map2(x: u8,f: |u8|u8): u8 {
        (f)(x)
    }
    private fun nested(x: u64,c: u64): u64 {
        m::map1(x, closure m::nested$lambda$2(c))
    }
    private fun nested$lambda$1(c: u64,y: u8): u8 {
        Add<u8>(y, Cast<u8>(c))
    }
    private fun nested$lambda$2(c: u64,y: u64): u64 {
        Cast<u64>(m::map2(Cast<u8>(Sub<u64>(y, c)), closure m::nested$lambda$1(c)))
    }
} // end 0xcafe::m
