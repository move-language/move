// ---- Model Dump
module 0x42::M {
    struct Cup {
        f1: #0,
    }
    struct R {
        dummy_field: bool,
    }
    struct S {
        dummy_field: bool,
    }
    public fun eat(r: M::R) {
        M::R{ dummy_field: _ } = r
    }
    spec fun $eat(r: M::R);
} // end 0x42::M
module <SELF> {
    use 0x42::M::{S, R, Cup}; // resolved as: 0x42::M
    private fun main<T>(_s: &signer,_a0: #0,_a1: vector<#0>,_a2: vector<vector<#0>>,_a3: M::S,_a4: M::R,_a5: M::Cup<u8>,_a6: M::Cup<#0>,_a7: vector<M::S>) {
        Abort(0)
    }
    spec fun $main<T>(_s: signer,_a0: #0,_a1: vector<#0>,_a2: vector<vector<#0>>,_a3: M::S,_a4: M::R,_a5: M::Cup<u8>,_a6: M::Cup<#0>,_a7: vector<M::S>) {
        Abort(0)
    }
} // end <SELF>
