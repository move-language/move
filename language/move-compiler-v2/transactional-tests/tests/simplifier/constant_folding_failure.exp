processed 2 tasks

task 0 'publish'. lines 1-141:



task 1 'run'. lines 143-143:
Error: Function execution failed with VMError: {
    major_status: ARITHMETIC_ERROR,
    sub_status: None,
    location: 0xcafe::ConstantFailure,
    indices: redacted,
    offsets: redacted,
}

==> Compiler v2 delivered same results!

>>> V1 Compiler {
== BEGIN Bytecode ==
// Move bytecode v6
module cafe.ConstantFailure {


main() /* def_idx: 0 */ {
L0:	loc0: vector<u128>
L1:	loc1: vector<u16>
L2:	loc2: vector<u256>
L3:	loc3: vector<u32>
L4:	loc4: vector<u64>
L5:	loc5: vector<u8>
L6:	loc6: u128
L7:	loc7: u16
L8:	loc8: u256
L9:	loc9: u32
L10:	loc10: u64
L11:	loc11: u8
B0:
	0: LdU8(1)
	1: LdU8(8)
	2: Shl
	3: LdU8(0)
	4: LdU8(8)
	5: Shr
	6: LdU8(1)
	7: LdU8(0)
	8: Div
	9: LdU8(1)
	10: LdU8(0)
	11: Mod
	12: LdU8(255)
	13: LdU8(255)
	14: Add
	15: LdU8(0)
	16: LdU8(1)
	17: Sub
	18: LdU64(256)
	19: CastU8
	20: VecPack(12, 7)
	21: StLoc[5](loc5: vector<u8>)
	22: LdU16(1)
	23: LdU8(16)
	24: Shl
	25: LdU16(0)
	26: LdU8(16)
	27: Shr
	28: LdU16(1)
	29: LdU16(0)
	30: Div
	31: LdU16(1)
	32: LdU16(0)
	33: Mod
	34: LdU16(65535)
	35: LdU16(65535)
	36: Add
	37: LdU16(0)
	38: LdU16(1)
	39: Sub
	40: LdU64(65536)
	41: CastU16
	42: VecPack(4, 7)
	43: StLoc[1](loc1: vector<u16>)
	44: LdU32(1)
	45: LdU8(32)
	46: Shl
	47: LdU8(1)
	48: LdU8(8)
	49: Shl
	50: CastU32
	51: LdU16(1)
	52: LdU8(16)
	53: Shl
	54: CastU32
	55: LdU32(0)
	56: LdU8(32)
	57: Shr
	58: LdU8(0)
	59: LdU8(8)
	60: Shr
	61: CastU32
	62: LdU16(0)
	63: LdU8(16)
	64: Shr
	65: CastU32
	66: LdU32(1)
	67: LdU32(0)
	68: Div
	69: LdU32(1)
	70: LdU32(0)
	71: Mod
	72: LdU32(4294967295)
	73: LdU32(4294967295)
	74: Add
	75: LdU16(65535)
	76: LdU16(65535)
	77: Add
	78: CastU32
	79: LdU16(65535)
	80: LdU16(65535)
	81: Add
	82: CastU32
	83: LdU16(65535)
	84: LdU16(65535)
	85: Add
	86: CastU32
	87: LdU32(0)
	88: LdU32(1)
	89: Sub
	90: LdU128(4294967296)
	91: CastU32
	92: VecPack(8, 14)
	93: StLoc[3](loc3: vector<u32>)
	94: LdU64(1)
	95: LdU8(64)
	96: Shl
	97: LdU32(1)
	98: LdU8(32)
	99: Shl
	100: CastU64
	101: LdU64(0)
	102: LdU8(64)
	103: Shr
	104: LdU32(0)
	105: LdU8(32)
	106: Shr
	107: CastU64
	108: LdU64(1)
	109: LdU64(0)
	110: Div
	111: LdU64(1)
	112: LdU64(0)
	113: Mod
	114: LdU64(18446744073709551615)
	115: LdU64(18446744073709551615)
	116: Add
	117: LdU8(255)
	118: LdU8(255)
	119: Add
	120: CastU64
	121: LdU8(255)
	122: LdU8(255)
	123: Add
	124: CastU64
	125: LdU8(255)
	126: LdU8(255)
	127: Add
	128: CastU64
	129: LdU32(4294967295)
	130: LdU32(4294967295)
	131: Add
	132: CastU64
	133: LdU32(4294967295)
	134: LdU32(4294967295)
	135: Add
	136: CastU64
	137: LdU32(4294967295)
	138: LdU32(4294967295)
	139: Add
	140: CastU64
	141: LdU64(0)
	142: LdU64(1)
	143: Sub
	144: LdU128(340282366920938463463374607431768211450)
	145: CastU64
	146: VecPack(10, 15)
	147: StLoc[4](loc4: vector<u64>)
	148: LdU128(1)
	149: LdU8(128)
	150: Shl
	151: LdU64(1)
	152: LdU8(64)
	153: Shl
	154: CastU128
	155: LdU128(0)
	156: LdU8(128)
	157: Shr
	158: LdU64(0)
	159: LdU8(64)
	160: Shr
	161: CastU128
	162: LdU128(1)
	163: LdU128(0)
	164: Div
	165: LdU128(1)
	166: LdU128(0)
	167: Mod
	168: LdU128(340282366920938463463374607431768211450)
	169: LdU128(340282366920938463463374607431768211450)
	170: Add
	171: LdU64(18446744073709551615)
	172: LdU64(18446744073709551615)
	173: Add
	174: CastU128
	175: LdU64(18446744073709551615)
	176: LdU64(18446744073709551615)
	177: Add
	178: CastU128
	179: LdU64(18446744073709551615)
	180: LdU64(18446744073709551615)
	181: Add
	182: CastU128
	183: LdU128(0)
	184: LdU128(1)
	185: Sub
	186: LdU256(340282366920938463463374607431768211456)
	187: CastU128
	188: VecPack(2, 12)
	189: StLoc[0](loc0: vector<u128>)
	190: LdU128(1)
	191: LdU8(128)
	192: Shl
	193: CastU256
	194: LdU128(0)
	195: LdU8(128)
	196: Shr
	197: CastU256
	198: LdU256(1)
	199: LdU256(0)
	200: Div
	201: LdU256(1)
	202: LdU256(0)
	203: Mod
	204: LdU256(115792089237316195423570985008687907853269984665640564039457584007913129639935)
	205: LdU256(115792089237316195423570985008687907853269984665640564039457584007913129639935)
	206: Add
	207: LdU128(340282366920938463463374607431768211450)
	208: LdU128(340282366920938463463374607431768211450)
	209: Add
	210: CastU256
	211: LdU128(340282366920938463463374607431768211450)
	212: LdU128(340282366920938463463374607431768211450)
	213: Add
	214: CastU256
	215: LdU128(340282366920938463463374607431768211450)
	216: LdU128(340282366920938463463374607431768211450)
	217: Add
	218: CastU256
	219: LdU256(0)
	220: LdU256(1)
	221: Sub
	222: VecPack(6, 9)
	223: StLoc[2](loc2: vector<u256>)
	224: ImmBorrowLoc[5](loc5: vector<u8>)
	225: Call sum_u8(&vector<u8>): u8
	226: StLoc[11](loc11: u8)
	227: ImmBorrowLoc[1](loc1: vector<u16>)
	228: Call sum_u16(&vector<u16>): u16
	229: StLoc[7](loc7: u16)
	230: ImmBorrowLoc[3](loc3: vector<u32>)
	231: Call sum_u32(&vector<u32>): u32
	232: StLoc[9](loc9: u32)
	233: ImmBorrowLoc[4](loc4: vector<u64>)
	234: Call sum_u64(&vector<u64>): u64
	235: StLoc[10](loc10: u64)
	236: ImmBorrowLoc[0](loc0: vector<u128>)
	237: Call sum_u128(&vector<u128>): u128
	238: StLoc[6](loc6: u128)
	239: ImmBorrowLoc[2](loc2: vector<u256>)
	240: Call sum_u256(&vector<u256>): u256
	241: StLoc[8](loc8: u256)
	242: MoveLoc[11](loc11: u8)
	243: LdU8(0)
	244: Neq
	245: BrFalse(247)
B1:
	246: Branch(249)
B2:
	247: LdU64(1)
	248: Abort
B3:
	249: MoveLoc[7](loc7: u16)
	250: LdU16(0)
	251: Neq
	252: BrFalse(254)
B4:
	253: Branch(256)
B5:
	254: LdU64(1)
	255: Abort
B6:
	256: MoveLoc[9](loc9: u32)
	257: LdU32(0)
	258: Neq
	259: BrFalse(261)
B7:
	260: Branch(263)
B8:
	261: LdU64(1)
	262: Abort
B9:
	263: MoveLoc[10](loc10: u64)
	264: LdU64(0)
	265: Neq
	266: BrFalse(268)
B10:
	267: Branch(270)
B11:
	268: LdU64(1)
	269: Abort
B12:
	270: MoveLoc[6](loc6: u128)
	271: LdU128(0)
	272: Neq
	273: BrFalse(275)
B13:
	274: Branch(277)
B14:
	275: LdU64(1)
	276: Abort
B15:
	277: MoveLoc[8](loc8: u256)
	278: LdU256(0)
	279: Neq
	280: BrFalse(282)
B16:
	281: Branch(284)
B17:
	282: LdU64(1)
	283: Abort
B18:
	284: Ret
}
sum_u128(Arg0: &vector<u128>): u128 /* def_idx: 1 */ {
L0:	loc1: u64
L1:	loc2: u128
L2:	loc3: &vector<u128>
B0:
	0: LdU128(0)
	1: StLoc[3](loc2: u128)
	2: MoveLoc[0](Arg0: &vector<u128>)
	3: StLoc[4](loc3: &vector<u128>)
	4: LdU64(0)
	5: StLoc[2](loc1: u64)
B1:
	6: CopyLoc[2](loc1: u64)
	7: CopyLoc[4](loc3: &vector<u128>)
	8: VecLen(2)
	9: Lt
	10: BrFalse(26)
B2:
	11: Branch(12)
B3:
	12: CopyLoc[4](loc3: &vector<u128>)
	13: CopyLoc[2](loc1: u64)
	14: VecImmBorrow(2)
	15: StLoc[1](loc0: &u128)
	16: MoveLoc[3](loc2: u128)
	17: MoveLoc[1](loc0: &u128)
	18: ReadRef
	19: Add
	20: StLoc[3](loc2: u128)
	21: MoveLoc[2](loc1: u64)
	22: LdU64(1)
	23: Add
	24: StLoc[2](loc1: u64)
	25: Branch(6)
B4:
	26: MoveLoc[4](loc3: &vector<u128>)
	27: Pop
	28: MoveLoc[3](loc2: u128)
	29: Ret
}
sum_u16(Arg0: &vector<u16>): u16 /* def_idx: 2 */ {
L0:	loc1: u64
L1:	loc2: u16
L2:	loc3: &vector<u16>
B0:
	0: LdU16(0)
	1: StLoc[3](loc2: u16)
	2: MoveLoc[0](Arg0: &vector<u16>)
	3: StLoc[4](loc3: &vector<u16>)
	4: LdU64(0)
	5: StLoc[2](loc1: u64)
B1:
	6: CopyLoc[2](loc1: u64)
	7: CopyLoc[4](loc3: &vector<u16>)
	8: VecLen(4)
	9: Lt
	10: BrFalse(26)
B2:
	11: Branch(12)
B3:
	12: CopyLoc[4](loc3: &vector<u16>)
	13: CopyLoc[2](loc1: u64)
	14: VecImmBorrow(4)
	15: StLoc[1](loc0: &u16)
	16: MoveLoc[3](loc2: u16)
	17: MoveLoc[1](loc0: &u16)
	18: ReadRef
	19: Add
	20: StLoc[3](loc2: u16)
	21: MoveLoc[2](loc1: u64)
	22: LdU64(1)
	23: Add
	24: StLoc[2](loc1: u64)
	25: Branch(6)
B4:
	26: MoveLoc[4](loc3: &vector<u16>)
	27: Pop
	28: MoveLoc[3](loc2: u16)
	29: Ret
}
sum_u256(Arg0: &vector<u256>): u256 /* def_idx: 3 */ {
L0:	loc1: u64
L1:	loc2: u256
L2:	loc3: &vector<u256>
B0:
	0: LdU256(0)
	1: StLoc[3](loc2: u256)
	2: MoveLoc[0](Arg0: &vector<u256>)
	3: StLoc[4](loc3: &vector<u256>)
	4: LdU64(0)
	5: StLoc[2](loc1: u64)
B1:
	6: CopyLoc[2](loc1: u64)
	7: CopyLoc[4](loc3: &vector<u256>)
	8: VecLen(6)
	9: Lt
	10: BrFalse(26)
B2:
	11: Branch(12)
B3:
	12: CopyLoc[4](loc3: &vector<u256>)
	13: CopyLoc[2](loc1: u64)
	14: VecImmBorrow(6)
	15: StLoc[1](loc0: &u256)
	16: MoveLoc[3](loc2: u256)
	17: MoveLoc[1](loc0: &u256)
	18: ReadRef
	19: Add
	20: StLoc[3](loc2: u256)
	21: MoveLoc[2](loc1: u64)
	22: LdU64(1)
	23: Add
	24: StLoc[2](loc1: u64)
	25: Branch(6)
B4:
	26: MoveLoc[4](loc3: &vector<u256>)
	27: Pop
	28: MoveLoc[3](loc2: u256)
	29: Ret
}
sum_u32(Arg0: &vector<u32>): u32 /* def_idx: 4 */ {
L0:	loc1: u64
L1:	loc2: u32
L2:	loc3: &vector<u32>
B0:
	0: LdU32(0)
	1: StLoc[3](loc2: u32)
	2: MoveLoc[0](Arg0: &vector<u32>)
	3: StLoc[4](loc3: &vector<u32>)
	4: LdU64(0)
	5: StLoc[2](loc1: u64)
B1:
	6: CopyLoc[2](loc1: u64)
	7: CopyLoc[4](loc3: &vector<u32>)
	8: VecLen(8)
	9: Lt
	10: BrFalse(26)
B2:
	11: Branch(12)
B3:
	12: CopyLoc[4](loc3: &vector<u32>)
	13: CopyLoc[2](loc1: u64)
	14: VecImmBorrow(8)
	15: StLoc[1](loc0: &u32)
	16: MoveLoc[3](loc2: u32)
	17: MoveLoc[1](loc0: &u32)
	18: ReadRef
	19: Add
	20: StLoc[3](loc2: u32)
	21: MoveLoc[2](loc1: u64)
	22: LdU64(1)
	23: Add
	24: StLoc[2](loc1: u64)
	25: Branch(6)
B4:
	26: MoveLoc[4](loc3: &vector<u32>)
	27: Pop
	28: MoveLoc[3](loc2: u32)
	29: Ret
}
sum_u64(Arg0: &vector<u64>): u64 /* def_idx: 5 */ {
L0:	loc1: u64
L1:	loc2: u64
L2:	loc3: &vector<u64>
B0:
	0: LdU64(0)
	1: StLoc[3](loc2: u64)
	2: MoveLoc[0](Arg0: &vector<u64>)
	3: StLoc[4](loc3: &vector<u64>)
	4: LdU64(0)
	5: StLoc[2](loc1: u64)
B1:
	6: CopyLoc[2](loc1: u64)
	7: CopyLoc[4](loc3: &vector<u64>)
	8: VecLen(10)
	9: Lt
	10: BrFalse(26)
B2:
	11: Branch(12)
B3:
	12: CopyLoc[4](loc3: &vector<u64>)
	13: CopyLoc[2](loc1: u64)
	14: VecImmBorrow(10)
	15: StLoc[1](loc0: &u64)
	16: MoveLoc[3](loc2: u64)
	17: MoveLoc[1](loc0: &u64)
	18: ReadRef
	19: Add
	20: StLoc[3](loc2: u64)
	21: MoveLoc[2](loc1: u64)
	22: LdU64(1)
	23: Add
	24: StLoc[2](loc1: u64)
	25: Branch(6)
B4:
	26: MoveLoc[4](loc3: &vector<u64>)
	27: Pop
	28: MoveLoc[3](loc2: u64)
	29: Ret
}
sum_u8(Arg0: &vector<u8>): u8 /* def_idx: 6 */ {
L0:	loc1: u64
L1:	loc2: u8
L2:	loc3: &vector<u8>
B0:
	0: LdU8(0)
	1: StLoc[3](loc2: u8)
	2: MoveLoc[0](Arg0: &vector<u8>)
	3: StLoc[4](loc3: &vector<u8>)
	4: LdU64(0)
	5: StLoc[2](loc1: u64)
B1:
	6: CopyLoc[2](loc1: u64)
	7: CopyLoc[4](loc3: &vector<u8>)
	8: VecLen(12)
	9: Lt
	10: BrFalse(26)
B2:
	11: Branch(12)
B3:
	12: CopyLoc[4](loc3: &vector<u8>)
	13: CopyLoc[2](loc1: u64)
	14: VecImmBorrow(12)
	15: StLoc[1](loc0: &u8)
	16: MoveLoc[3](loc2: u8)
	17: MoveLoc[1](loc0: &u8)
	18: ReadRef
	19: Add
	20: StLoc[3](loc2: u8)
	21: MoveLoc[2](loc1: u64)
	22: LdU64(1)
	23: Add
	24: StLoc[2](loc1: u64)
	25: Branch(6)
B4:
	26: MoveLoc[4](loc3: &vector<u8>)
	27: Pop
	28: MoveLoc[3](loc2: u8)
	29: Ret
}
}
== END Bytecode ==
}

>>> V2 Compiler {
== BEGIN Bytecode ==
// Move bytecode v7
module cafe.ConstantFailure {


main() /* def_idx: 0 */ {
L0:	loc0: u8
L1:	loc1: u8
L2:	loc2: u8
L3:	loc3: u8
L4:	loc4: u8
L5:	loc5: u8
L6:	loc6: u8
L7:	loc7: vector<u8>
L8:	loc8: u16
L9:	loc9: u16
L10:	loc10: u16
L11:	loc11: u16
L12:	loc12: u16
L13:	loc13: u16
L14:	loc14: u16
L15:	loc15: vector<u16>
L16:	loc16: u32
L17:	loc17: u32
L18:	loc18: u32
L19:	loc19: u32
L20:	loc20: u32
L21:	loc21: u32
L22:	loc22: u32
L23:	loc23: u32
L24:	loc24: vector<u32>
L25:	loc25: u64
L26:	loc26: u64
L27:	loc27: u64
L28:	loc28: u64
L29:	loc29: u64
L30:	loc30: u64
L31:	loc31: u32
L32:	loc32: u64
L33:	loc33: u64
L34:	loc34: vector<u64>
L35:	loc35: u128
L36:	loc36: u128
L37:	loc37: u128
L38:	loc38: u128
L39:	loc39: u128
L40:	loc40: u128
L41:	loc41: u64
L42:	loc42: u128
L43:	loc43: u128
L44:	loc44: vector<u128>
L45:	loc45: u256
L46:	loc46: u256
L47:	loc47: u256
L48:	loc48: u256
L49:	loc49: u128
L50:	loc50: u256
L51:	loc51: u256
L52:	loc52: vector<u256>
L53:	loc53: u256
L54:	loc54: u256
B0:
	0: LdU8(1)
	1: LdU8(8)
	2: StLoc[0](loc0: u8)
	3: StLoc[1](loc1: u8)
	4: CopyLoc[1](loc1: u8)
	5: MoveLoc[0](loc0: u8)
	6: Shl
	7: LdU8(0)
	8: LdU8(8)
	9: StLoc[2](loc2: u8)
	10: StLoc[0](loc0: u8)
	11: CopyLoc[0](loc0: u8)
	12: MoveLoc[2](loc2: u8)
	13: Shr
	14: LdU8(1)
	15: LdU8(0)
	16: StLoc[3](loc3: u8)
	17: StLoc[2](loc2: u8)
	18: CopyLoc[2](loc2: u8)
	19: MoveLoc[3](loc3: u8)
	20: Div
	21: LdU8(1)
	22: LdU8(0)
	23: StLoc[4](loc4: u8)
	24: StLoc[3](loc3: u8)
	25: CopyLoc[3](loc3: u8)
	26: MoveLoc[4](loc4: u8)
	27: Mod
	28: LdU8(255)
	29: LdU8(255)
	30: StLoc[5](loc5: u8)
	31: StLoc[4](loc4: u8)
	32: CopyLoc[4](loc4: u8)
	33: MoveLoc[5](loc5: u8)
	34: Add
	35: LdU8(0)
	36: LdU8(1)
	37: StLoc[6](loc6: u8)
	38: StLoc[5](loc5: u8)
	39: CopyLoc[5](loc5: u8)
	40: MoveLoc[6](loc6: u8)
	41: Sub
	42: LdU64(256)
	43: CastU8
	44: VecPack(1, 7)
	45: StLoc[7](loc7: vector<u8>)
	46: LdU16(1)
	47: LdU8(16)
	48: StLoc[1](loc1: u8)
	49: StLoc[8](loc8: u16)
	50: CopyLoc[8](loc8: u16)
	51: MoveLoc[1](loc1: u8)
	52: Shl
	53: LdU16(0)
	54: LdU8(16)
	55: StLoc[1](loc1: u8)
	56: StLoc[9](loc9: u16)
	57: CopyLoc[9](loc9: u16)
	58: MoveLoc[1](loc1: u8)
	59: Shr
	60: LdU16(1)
	61: LdU16(0)
	62: StLoc[10](loc10: u16)
	63: StLoc[11](loc11: u16)
	64: CopyLoc[11](loc11: u16)
	65: MoveLoc[10](loc10: u16)
	66: Div
	67: LdU16(1)
	68: LdU16(0)
	69: StLoc[12](loc12: u16)
	70: StLoc[10](loc10: u16)
	71: CopyLoc[10](loc10: u16)
	72: MoveLoc[12](loc12: u16)
	73: Mod
	74: LdU16(65535)
	75: LdU16(65535)
	76: StLoc[13](loc13: u16)
	77: StLoc[12](loc12: u16)
	78: CopyLoc[12](loc12: u16)
	79: MoveLoc[13](loc13: u16)
	80: Add
	81: LdU16(0)
	82: LdU16(1)
	83: StLoc[14](loc14: u16)
	84: StLoc[13](loc13: u16)
	85: CopyLoc[13](loc13: u16)
	86: MoveLoc[14](loc14: u16)
	87: Sub
	88: LdU64(65536)
	89: CastU16
	90: VecPack(2, 7)
	91: StLoc[15](loc15: vector<u16>)
	92: LdU32(1)
	93: LdU8(32)
	94: StLoc[1](loc1: u8)
	95: StLoc[16](loc16: u32)
	96: CopyLoc[16](loc16: u32)
	97: MoveLoc[1](loc1: u8)
	98: Shl
	99: LdU8(1)
	100: LdU8(8)
	101: StLoc[0](loc0: u8)
	102: StLoc[1](loc1: u8)
	103: CopyLoc[1](loc1: u8)
	104: MoveLoc[0](loc0: u8)
	105: Shl
	106: CastU32
	107: LdU16(1)
	108: LdU8(16)
	109: StLoc[1](loc1: u8)
	110: StLoc[8](loc8: u16)
	111: CopyLoc[8](loc8: u16)
	112: MoveLoc[1](loc1: u8)
	113: Shl
	114: CastU32
	115: LdU32(0)
	116: LdU8(32)
	117: StLoc[1](loc1: u8)
	118: StLoc[17](loc17: u32)
	119: CopyLoc[17](loc17: u32)
	120: MoveLoc[1](loc1: u8)
	121: Shr
	122: LdU8(0)
	123: LdU8(8)
	124: StLoc[0](loc0: u8)
	125: StLoc[1](loc1: u8)
	126: CopyLoc[1](loc1: u8)
	127: MoveLoc[0](loc0: u8)
	128: Shr
	129: CastU32
	130: LdU16(0)
	131: LdU8(16)
	132: StLoc[1](loc1: u8)
	133: StLoc[8](loc8: u16)
	134: CopyLoc[8](loc8: u16)
	135: MoveLoc[1](loc1: u8)
	136: Shr
	137: CastU32
	138: LdU32(1)
	139: LdU32(0)
	140: StLoc[18](loc18: u32)
	141: StLoc[19](loc19: u32)
	142: CopyLoc[19](loc19: u32)
	143: MoveLoc[18](loc18: u32)
	144: Div
	145: LdU32(1)
	146: LdU32(0)
	147: StLoc[20](loc20: u32)
	148: StLoc[18](loc18: u32)
	149: CopyLoc[18](loc18: u32)
	150: MoveLoc[20](loc20: u32)
	151: Mod
	152: LdU32(4294967295)
	153: LdU32(4294967295)
	154: StLoc[21](loc21: u32)
	155: StLoc[20](loc20: u32)
	156: CopyLoc[20](loc20: u32)
	157: MoveLoc[21](loc21: u32)
	158: Add
	159: LdU16(65535)
	160: LdU16(65535)
	161: StLoc[9](loc9: u16)
	162: StLoc[8](loc8: u16)
	163: CopyLoc[8](loc8: u16)
	164: MoveLoc[9](loc9: u16)
	165: Add
	166: CastU32
	167: LdU16(65535)
	168: LdU16(65535)
	169: StLoc[9](loc9: u16)
	170: StLoc[8](loc8: u16)
	171: CopyLoc[8](loc8: u16)
	172: MoveLoc[9](loc9: u16)
	173: Add
	174: CastU32
	175: LdU16(65535)
	176: LdU16(65535)
	177: StLoc[9](loc9: u16)
	178: StLoc[8](loc8: u16)
	179: CopyLoc[8](loc8: u16)
	180: MoveLoc[9](loc9: u16)
	181: Add
	182: CastU32
	183: LdU32(0)
	184: LdU32(1)
	185: StLoc[22](loc22: u32)
	186: StLoc[23](loc23: u32)
	187: CopyLoc[23](loc23: u32)
	188: MoveLoc[22](loc22: u32)
	189: Sub
	190: LdU128(4294967296)
	191: CastU32
	192: VecPack(3, 14)
	193: StLoc[24](loc24: vector<u32>)
	194: LdU64(1)
	195: LdU8(64)
	196: StLoc[1](loc1: u8)
	197: StLoc[25](loc25: u64)
	198: CopyLoc[25](loc25: u64)
	199: MoveLoc[1](loc1: u8)
	200: Shl
	201: LdU32(1)
	202: LdU8(32)
	203: StLoc[1](loc1: u8)
	204: StLoc[16](loc16: u32)
	205: CopyLoc[16](loc16: u32)
	206: MoveLoc[1](loc1: u8)
	207: Shl
	208: CastU64
	209: LdU64(0)
	210: LdU8(64)
	211: StLoc[1](loc1: u8)
	212: StLoc[26](loc26: u64)
	213: CopyLoc[26](loc26: u64)
	214: MoveLoc[1](loc1: u8)
	215: Shr
	216: LdU32(0)
	217: LdU8(32)
	218: StLoc[1](loc1: u8)
	219: StLoc[16](loc16: u32)
	220: CopyLoc[16](loc16: u32)
	221: MoveLoc[1](loc1: u8)
	222: Shr
	223: CastU64
	224: LdU64(1)
	225: LdU64(0)
	226: StLoc[27](loc27: u64)
	227: StLoc[28](loc28: u64)
	228: CopyLoc[28](loc28: u64)
	229: MoveLoc[27](loc27: u64)
	230: Div
	231: LdU64(1)
	232: LdU64(0)
	233: StLoc[29](loc29: u64)
	234: StLoc[27](loc27: u64)
	235: CopyLoc[27](loc27: u64)
	236: MoveLoc[29](loc29: u64)
	237: Mod
	238: LdU64(18446744073709551615)
	239: LdU64(18446744073709551615)
	240: StLoc[30](loc30: u64)
	241: StLoc[29](loc29: u64)
	242: CopyLoc[29](loc29: u64)
	243: MoveLoc[30](loc30: u64)
	244: Add
	245: LdU8(255)
	246: LdU8(255)
	247: StLoc[0](loc0: u8)
	248: StLoc[1](loc1: u8)
	249: CopyLoc[1](loc1: u8)
	250: MoveLoc[0](loc0: u8)
	251: Add
	252: CastU64
	253: LdU8(255)
	254: LdU8(255)
	255: StLoc[0](loc0: u8)
	256: StLoc[1](loc1: u8)
	257: CopyLoc[1](loc1: u8)
	258: MoveLoc[0](loc0: u8)
	259: Add
	260: CastU64
	261: LdU8(255)
	262: LdU8(255)
	263: StLoc[0](loc0: u8)
	264: StLoc[1](loc1: u8)
	265: CopyLoc[1](loc1: u8)
	266: MoveLoc[0](loc0: u8)
	267: Add
	268: CastU64
	269: LdU32(4294967295)
	270: LdU32(4294967295)
	271: StLoc[31](loc31: u32)
	272: StLoc[16](loc16: u32)
	273: CopyLoc[16](loc16: u32)
	274: MoveLoc[31](loc31: u32)
	275: Add
	276: CastU64
	277: LdU32(4294967295)
	278: LdU32(4294967295)
	279: StLoc[31](loc31: u32)
	280: StLoc[16](loc16: u32)
	281: CopyLoc[16](loc16: u32)
	282: MoveLoc[31](loc31: u32)
	283: Add
	284: CastU64
	285: LdU32(4294967295)
	286: LdU32(4294967295)
	287: StLoc[31](loc31: u32)
	288: StLoc[16](loc16: u32)
	289: CopyLoc[16](loc16: u32)
	290: MoveLoc[31](loc31: u32)
	291: Add
	292: CastU64
	293: LdU64(0)
	294: LdU64(1)
	295: StLoc[32](loc32: u64)
	296: StLoc[33](loc33: u64)
	297: CopyLoc[33](loc33: u64)
	298: MoveLoc[32](loc32: u64)
	299: Sub
	300: LdU128(340282366920938463463374607431768211450)
	301: CastU64
	302: VecPack(4, 15)
	303: StLoc[34](loc34: vector<u64>)
	304: LdU128(1)
	305: LdU8(128)
	306: StLoc[1](loc1: u8)
	307: StLoc[35](loc35: u128)
	308: CopyLoc[35](loc35: u128)
	309: MoveLoc[1](loc1: u8)
	310: Shl
	311: LdU64(1)
	312: LdU8(64)
	313: StLoc[1](loc1: u8)
	314: StLoc[25](loc25: u64)
	315: CopyLoc[25](loc25: u64)
	316: MoveLoc[1](loc1: u8)
	317: Shl
	318: CastU128
	319: LdU128(0)
	320: LdU8(128)
	321: StLoc[1](loc1: u8)
	322: StLoc[36](loc36: u128)
	323: CopyLoc[36](loc36: u128)
	324: MoveLoc[1](loc1: u8)
	325: Shr
	326: LdU64(0)
	327: LdU8(64)
	328: StLoc[1](loc1: u8)
	329: StLoc[25](loc25: u64)
	330: CopyLoc[25](loc25: u64)
	331: MoveLoc[1](loc1: u8)
	332: Shr
	333: CastU128
	334: LdU128(1)
	335: LdU128(0)
	336: StLoc[37](loc37: u128)
	337: StLoc[38](loc38: u128)
	338: CopyLoc[38](loc38: u128)
	339: MoveLoc[37](loc37: u128)
	340: Div
	341: LdU128(1)
	342: LdU128(0)
	343: StLoc[39](loc39: u128)
	344: StLoc[37](loc37: u128)
	345: CopyLoc[37](loc37: u128)
	346: MoveLoc[39](loc39: u128)
	347: Mod
	348: LdU128(340282366920938463463374607431768211450)
	349: LdU128(340282366920938463463374607431768211450)
	350: StLoc[40](loc40: u128)
	351: StLoc[39](loc39: u128)
	352: CopyLoc[39](loc39: u128)
	353: MoveLoc[40](loc40: u128)
	354: Add
	355: LdU64(18446744073709551615)
	356: LdU64(18446744073709551615)
	357: StLoc[41](loc41: u64)
	358: StLoc[25](loc25: u64)
	359: CopyLoc[25](loc25: u64)
	360: MoveLoc[41](loc41: u64)
	361: Add
	362: CastU128
	363: LdU64(18446744073709551615)
	364: LdU64(18446744073709551615)
	365: StLoc[41](loc41: u64)
	366: StLoc[25](loc25: u64)
	367: CopyLoc[25](loc25: u64)
	368: MoveLoc[41](loc41: u64)
	369: Add
	370: CastU128
	371: LdU64(18446744073709551615)
	372: LdU64(18446744073709551615)
	373: StLoc[41](loc41: u64)
	374: StLoc[25](loc25: u64)
	375: CopyLoc[25](loc25: u64)
	376: MoveLoc[41](loc41: u64)
	377: Add
	378: CastU128
	379: LdU128(0)
	380: LdU128(1)
	381: StLoc[42](loc42: u128)
	382: StLoc[43](loc43: u128)
	383: CopyLoc[43](loc43: u128)
	384: MoveLoc[42](loc42: u128)
	385: Sub
	386: LdU256(340282366920938463463374607431768211456)
	387: CastU128
	388: VecPack(5, 12)
	389: StLoc[44](loc44: vector<u128>)
	390: LdU128(1)
	391: LdU8(128)
	392: StLoc[1](loc1: u8)
	393: StLoc[35](loc35: u128)
	394: CopyLoc[35](loc35: u128)
	395: MoveLoc[1](loc1: u8)
	396: Shl
	397: CastU256
	398: LdU128(0)
	399: LdU8(128)
	400: StLoc[1](loc1: u8)
	401: StLoc[35](loc35: u128)
	402: CopyLoc[35](loc35: u128)
	403: MoveLoc[1](loc1: u8)
	404: Shr
	405: CastU256
	406: LdU256(1)
	407: LdU256(0)
	408: StLoc[45](loc45: u256)
	409: StLoc[46](loc46: u256)
	410: CopyLoc[46](loc46: u256)
	411: MoveLoc[45](loc45: u256)
	412: Div
	413: LdU256(1)
	414: LdU256(0)
	415: StLoc[47](loc47: u256)
	416: StLoc[45](loc45: u256)
	417: CopyLoc[45](loc45: u256)
	418: MoveLoc[47](loc47: u256)
	419: Mod
	420: LdU256(115792089237316195423570985008687907853269984665640564039457584007913129639935)
	421: LdU256(115792089237316195423570985008687907853269984665640564039457584007913129639935)
	422: StLoc[48](loc48: u256)
	423: StLoc[47](loc47: u256)
	424: CopyLoc[47](loc47: u256)
	425: MoveLoc[48](loc48: u256)
	426: Add
	427: LdU128(340282366920938463463374607431768211450)
	428: LdU128(340282366920938463463374607431768211450)
	429: StLoc[49](loc49: u128)
	430: StLoc[35](loc35: u128)
	431: CopyLoc[35](loc35: u128)
	432: MoveLoc[49](loc49: u128)
	433: Add
	434: CastU256
	435: LdU128(340282366920938463463374607431768211450)
	436: LdU128(340282366920938463463374607431768211450)
	437: StLoc[49](loc49: u128)
	438: StLoc[35](loc35: u128)
	439: CopyLoc[35](loc35: u128)
	440: MoveLoc[49](loc49: u128)
	441: Add
	442: CastU256
	443: LdU128(340282366920938463463374607431768211450)
	444: LdU128(340282366920938463463374607431768211450)
	445: StLoc[49](loc49: u128)
	446: StLoc[35](loc35: u128)
	447: CopyLoc[35](loc35: u128)
	448: MoveLoc[49](loc49: u128)
	449: Add
	450: CastU256
	451: LdU256(0)
	452: LdU256(1)
	453: StLoc[50](loc50: u256)
	454: StLoc[51](loc51: u256)
	455: CopyLoc[51](loc51: u256)
	456: MoveLoc[50](loc50: u256)
	457: Sub
	458: VecPack(6, 9)
	459: StLoc[52](loc52: vector<u256>)
	460: ImmBorrowLoc[7](loc7: vector<u8>)
	461: Call sum_u8(&vector<u8>): u8
	462: ImmBorrowLoc[15](loc15: vector<u16>)
	463: Call sum_u16(&vector<u16>): u16
	464: ImmBorrowLoc[24](loc24: vector<u32>)
	465: Call sum_u32(&vector<u32>): u32
	466: ImmBorrowLoc[34](loc34: vector<u64>)
	467: Call sum_u64(&vector<u64>): u64
	468: ImmBorrowLoc[44](loc44: vector<u128>)
	469: Call sum_u128(&vector<u128>): u128
	470: ImmBorrowLoc[52](loc52: vector<u256>)
	471: Call sum_u256(&vector<u256>): u256
	472: LdU8(0)
	473: StLoc[0](loc0: u8)
	474: StLoc[53](loc53: u256)
	475: StLoc[35](loc35: u128)
	476: StLoc[25](loc25: u64)
	477: StLoc[16](loc16: u32)
	478: StLoc[8](loc8: u16)
	479: StLoc[1](loc1: u8)
	480: MoveLoc[1](loc1: u8)
	481: MoveLoc[0](loc0: u8)
	482: Neq
	483: BrFalse(485)
B1:
	484: Branch(487)
B2:
	485: LdU64(1)
	486: Abort
B3:
	487: LdU16(0)
	488: StLoc[9](loc9: u16)
	489: MoveLoc[8](loc8: u16)
	490: MoveLoc[9](loc9: u16)
	491: Neq
	492: BrFalse(494)
B4:
	493: Branch(496)
B5:
	494: LdU64(1)
	495: Abort
B6:
	496: LdU32(0)
	497: StLoc[31](loc31: u32)
	498: MoveLoc[16](loc16: u32)
	499: MoveLoc[31](loc31: u32)
	500: Neq
	501: BrFalse(503)
B7:
	502: Branch(505)
B8:
	503: LdU64(1)
	504: Abort
B9:
	505: LdU64(0)
	506: StLoc[41](loc41: u64)
	507: MoveLoc[25](loc25: u64)
	508: MoveLoc[41](loc41: u64)
	509: Neq
	510: BrFalse(512)
B10:
	511: Branch(514)
B11:
	512: LdU64(1)
	513: Abort
B12:
	514: LdU128(0)
	515: StLoc[49](loc49: u128)
	516: MoveLoc[35](loc35: u128)
	517: MoveLoc[49](loc49: u128)
	518: Neq
	519: BrFalse(521)
B13:
	520: Branch(523)
B14:
	521: LdU64(1)
	522: Abort
B15:
	523: LdU256(0)
	524: StLoc[54](loc54: u256)
	525: MoveLoc[53](loc53: u256)
	526: MoveLoc[54](loc54: u256)
	527: Neq
	528: BrFalse(530)
B16:
	529: Branch(532)
B17:
	530: LdU64(1)
	531: Abort
B18:
	532: Ret
}
sum_u128(Arg0: &vector<u128>): u128 /* def_idx: 1 */ {
L0:	loc1: u128
L1:	loc2: &vector<u128>
L2:	loc3: u64
L3:	loc4: u128
B0:
	0: LdU128(0)
	1: LdU64(0)
	2: StLoc[1](loc0: u64)
	3: StLoc[2](loc1: u128)
B1:
	4: CopyLoc[0](Arg0: &vector<u128>)
	5: StLoc[3](loc2: &vector<u128>)
	6: MoveLoc[3](loc2: &vector<u128>)
	7: VecLen(5)
	8: StLoc[4](loc3: u64)
	9: CopyLoc[1](loc0: u64)
	10: MoveLoc[4](loc3: u64)
	11: Lt
	12: BrFalse(31)
B2:
	13: CopyLoc[0](Arg0: &vector<u128>)
	14: StLoc[3](loc2: &vector<u128>)
	15: MoveLoc[3](loc2: &vector<u128>)
	16: CopyLoc[1](loc0: u64)
	17: VecImmBorrow(5)
	18: ReadRef
	19: StLoc[5](loc4: u128)
	20: MoveLoc[2](loc1: u128)
	21: CopyLoc[5](loc4: u128)
	22: Add
	23: StLoc[2](loc1: u128)
	24: LdU64(1)
	25: StLoc[4](loc3: u64)
	26: MoveLoc[1](loc0: u64)
	27: CopyLoc[4](loc3: u64)
	28: Add
	29: StLoc[1](loc0: u64)
	30: Branch(34)
B3:
	31: MoveLoc[0](Arg0: &vector<u128>)
	32: Pop
	33: Branch(35)
B4:
	34: Branch(4)
B5:
	35: MoveLoc[2](loc1: u128)
	36: Ret
}
sum_u16(Arg0: &vector<u16>): u16 /* def_idx: 2 */ {
L0:	loc1: u16
L1:	loc2: &vector<u16>
L2:	loc3: u64
L3:	loc4: u16
B0:
	0: LdU16(0)
	1: LdU64(0)
	2: StLoc[1](loc0: u64)
	3: StLoc[2](loc1: u16)
B1:
	4: CopyLoc[0](Arg0: &vector<u16>)
	5: StLoc[3](loc2: &vector<u16>)
	6: MoveLoc[3](loc2: &vector<u16>)
	7: VecLen(2)
	8: StLoc[4](loc3: u64)
	9: CopyLoc[1](loc0: u64)
	10: MoveLoc[4](loc3: u64)
	11: Lt
	12: BrFalse(31)
B2:
	13: CopyLoc[0](Arg0: &vector<u16>)
	14: StLoc[3](loc2: &vector<u16>)
	15: MoveLoc[3](loc2: &vector<u16>)
	16: CopyLoc[1](loc0: u64)
	17: VecImmBorrow(2)
	18: ReadRef
	19: StLoc[5](loc4: u16)
	20: MoveLoc[2](loc1: u16)
	21: CopyLoc[5](loc4: u16)
	22: Add
	23: StLoc[2](loc1: u16)
	24: LdU64(1)
	25: StLoc[4](loc3: u64)
	26: MoveLoc[1](loc0: u64)
	27: CopyLoc[4](loc3: u64)
	28: Add
	29: StLoc[1](loc0: u64)
	30: Branch(34)
B3:
	31: MoveLoc[0](Arg0: &vector<u16>)
	32: Pop
	33: Branch(35)
B4:
	34: Branch(4)
B5:
	35: MoveLoc[2](loc1: u16)
	36: Ret
}
sum_u256(Arg0: &vector<u256>): u256 /* def_idx: 3 */ {
L0:	loc1: u256
L1:	loc2: &vector<u256>
L2:	loc3: u64
L3:	loc4: u256
B0:
	0: LdU256(0)
	1: LdU64(0)
	2: StLoc[1](loc0: u64)
	3: StLoc[2](loc1: u256)
B1:
	4: CopyLoc[0](Arg0: &vector<u256>)
	5: StLoc[3](loc2: &vector<u256>)
	6: MoveLoc[3](loc2: &vector<u256>)
	7: VecLen(6)
	8: StLoc[4](loc3: u64)
	9: CopyLoc[1](loc0: u64)
	10: MoveLoc[4](loc3: u64)
	11: Lt
	12: BrFalse(31)
B2:
	13: CopyLoc[0](Arg0: &vector<u256>)
	14: StLoc[3](loc2: &vector<u256>)
	15: MoveLoc[3](loc2: &vector<u256>)
	16: CopyLoc[1](loc0: u64)
	17: VecImmBorrow(6)
	18: ReadRef
	19: StLoc[5](loc4: u256)
	20: MoveLoc[2](loc1: u256)
	21: CopyLoc[5](loc4: u256)
	22: Add
	23: StLoc[2](loc1: u256)
	24: LdU64(1)
	25: StLoc[4](loc3: u64)
	26: MoveLoc[1](loc0: u64)
	27: CopyLoc[4](loc3: u64)
	28: Add
	29: StLoc[1](loc0: u64)
	30: Branch(34)
B3:
	31: MoveLoc[0](Arg0: &vector<u256>)
	32: Pop
	33: Branch(35)
B4:
	34: Branch(4)
B5:
	35: MoveLoc[2](loc1: u256)
	36: Ret
}
sum_u32(Arg0: &vector<u32>): u32 /* def_idx: 4 */ {
L0:	loc1: u32
L1:	loc2: &vector<u32>
L2:	loc3: u64
L3:	loc4: u32
B0:
	0: LdU32(0)
	1: LdU64(0)
	2: StLoc[1](loc0: u64)
	3: StLoc[2](loc1: u32)
B1:
	4: CopyLoc[0](Arg0: &vector<u32>)
	5: StLoc[3](loc2: &vector<u32>)
	6: MoveLoc[3](loc2: &vector<u32>)
	7: VecLen(3)
	8: StLoc[4](loc3: u64)
	9: CopyLoc[1](loc0: u64)
	10: MoveLoc[4](loc3: u64)
	11: Lt
	12: BrFalse(31)
B2:
	13: CopyLoc[0](Arg0: &vector<u32>)
	14: StLoc[3](loc2: &vector<u32>)
	15: MoveLoc[3](loc2: &vector<u32>)
	16: CopyLoc[1](loc0: u64)
	17: VecImmBorrow(3)
	18: ReadRef
	19: StLoc[5](loc4: u32)
	20: MoveLoc[2](loc1: u32)
	21: CopyLoc[5](loc4: u32)
	22: Add
	23: StLoc[2](loc1: u32)
	24: LdU64(1)
	25: StLoc[4](loc3: u64)
	26: MoveLoc[1](loc0: u64)
	27: CopyLoc[4](loc3: u64)
	28: Add
	29: StLoc[1](loc0: u64)
	30: Branch(34)
B3:
	31: MoveLoc[0](Arg0: &vector<u32>)
	32: Pop
	33: Branch(35)
B4:
	34: Branch(4)
B5:
	35: MoveLoc[2](loc1: u32)
	36: Ret
}
sum_u64(Arg0: &vector<u64>): u64 /* def_idx: 5 */ {
L0:	loc1: u64
L1:	loc2: &vector<u64>
L2:	loc3: u64
B0:
	0: LdU64(0)
	1: LdU64(0)
	2: StLoc[1](loc0: u64)
	3: StLoc[2](loc1: u64)
B1:
	4: CopyLoc[0](Arg0: &vector<u64>)
	5: StLoc[3](loc2: &vector<u64>)
	6: MoveLoc[3](loc2: &vector<u64>)
	7: VecLen(4)
	8: StLoc[4](loc3: u64)
	9: CopyLoc[1](loc0: u64)
	10: MoveLoc[4](loc3: u64)
	11: Lt
	12: BrFalse(31)
B2:
	13: CopyLoc[0](Arg0: &vector<u64>)
	14: StLoc[3](loc2: &vector<u64>)
	15: MoveLoc[3](loc2: &vector<u64>)
	16: CopyLoc[1](loc0: u64)
	17: VecImmBorrow(4)
	18: ReadRef
	19: StLoc[4](loc3: u64)
	20: MoveLoc[2](loc1: u64)
	21: CopyLoc[4](loc3: u64)
	22: Add
	23: StLoc[2](loc1: u64)
	24: LdU64(1)
	25: StLoc[4](loc3: u64)
	26: MoveLoc[1](loc0: u64)
	27: CopyLoc[4](loc3: u64)
	28: Add
	29: StLoc[1](loc0: u64)
	30: Branch(34)
B3:
	31: MoveLoc[0](Arg0: &vector<u64>)
	32: Pop
	33: Branch(35)
B4:
	34: Branch(4)
B5:
	35: MoveLoc[2](loc1: u64)
	36: Ret
}
sum_u8(Arg0: &vector<u8>): u8 /* def_idx: 6 */ {
L0:	loc1: u8
L1:	loc2: &vector<u8>
L2:	loc3: u64
L3:	loc4: u8
B0:
	0: LdU8(0)
	1: LdU64(0)
	2: StLoc[1](loc0: u64)
	3: StLoc[2](loc1: u8)
B1:
	4: CopyLoc[0](Arg0: &vector<u8>)
	5: StLoc[3](loc2: &vector<u8>)
	6: MoveLoc[3](loc2: &vector<u8>)
	7: VecLen(1)
	8: StLoc[4](loc3: u64)
	9: CopyLoc[1](loc0: u64)
	10: MoveLoc[4](loc3: u64)
	11: Lt
	12: BrFalse(31)
B2:
	13: CopyLoc[0](Arg0: &vector<u8>)
	14: StLoc[3](loc2: &vector<u8>)
	15: MoveLoc[3](loc2: &vector<u8>)
	16: CopyLoc[1](loc0: u64)
	17: VecImmBorrow(1)
	18: ReadRef
	19: StLoc[5](loc4: u8)
	20: MoveLoc[2](loc1: u8)
	21: CopyLoc[5](loc4: u8)
	22: Add
	23: StLoc[2](loc1: u8)
	24: LdU64(1)
	25: StLoc[4](loc3: u64)
	26: MoveLoc[1](loc0: u64)
	27: CopyLoc[4](loc3: u64)
	28: Add
	29: StLoc[1](loc0: u64)
	30: Branch(34)
B3:
	31: MoveLoc[0](Arg0: &vector<u8>)
	32: Pop
	33: Branch(35)
B4:
	34: Branch(4)
B5:
	35: MoveLoc[2](loc1: u8)
	36: Ret
}
}
== END Bytecode ==
}
