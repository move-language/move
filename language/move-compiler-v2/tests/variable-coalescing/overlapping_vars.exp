============ initial bytecode ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
  0: $t2 := 1
  1: $t1 := infer($t2)
  2: $t4 := 2
  3: $t3 := infer($t4)
  4: $t6 := 3
  5: $t5 := infer($t6)
  6: $t7 := +($t1, $t3)
  7: $t0 := +($t7, $t5)
  8: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     # live vars:
  0: $t2 := 1
     # live vars: $t2
  1: $t1 := infer($t2)
     # live vars: $t1
  2: $t4 := 2
     # live vars: $t1, $t4
  3: $t3 := infer($t4)
     # live vars: $t1, $t3
  4: $t6 := 3
     # live vars: $t1, $t3, $t6
  5: $t5 := infer($t6)
     # live vars: $t1, $t3, $t5
  6: $t7 := +($t1, $t3)
     # live vars: $t5, $t7
  7: $t0 := +($t7, $t5)
     # live vars: $t0
  8: return $t0
}

============ after VariableCoalescing: ================

[variant baseline]
fun m::test(): u64 {
     var $t0: u64 [unused]
     var $t1: u64 [unused]
     var $t2: u64
     var $t3: u64 [unused]
     var $t4: u64
     var $t5: u64 [unused]
     var $t6: u64
     var $t7: u64 [unused]
  0: $t2 := 1
  1: $t2 := infer($t2)
  2: $t4 := 2
  3: $t4 := infer($t4)
  4: $t6 := 3
  5: $t6 := infer($t6)
  6: $t2 := +($t2, $t4)
  7: $t2 := +($t2, $t6)
  8: return $t2
}
