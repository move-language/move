============ initial bytecode ================

[variant baseline]
fun constant::test_constans() {
     var $t0: bool
     var $t1: bool
     var $t2: bool
     var $t3: bool
     var $t4: u8
     var $t5: u8
     var $t6: u16
     var $t7: u16
     var $t8: u32
     var $t9: u32
     var $t10: u64
     var $t11: u64
     var $t12: u128
     var $t13: u128
     var $t14: u256
     var $t15: u256
     var $t16: address
     var $t17: address
     var $t18: vector<u64>
     var $t19: vector<u64>
     var $t20: u64
     var $t21: u64
     var $t22: u64
     var $t23: vector<u8>
     var $t24: vector<u8>
  0: $t1 := true
  1: $t0 := infer($t1)
  2: $t3 := false
  3: $t2 := infer($t3)
  4: $t5 := 1
  5: $t4 := infer($t5)
  6: $t7 := 7086
  7: $t6 := infer($t7)
  8: $t9 := 14593408
  9: $t8 := infer($t9)
 10: $t11 := 51966
 11: $t10 := infer($t11)
 12: $t13 := 3735928559
 13: $t12 := infer($t13)
 14: $t15 := 301490978409967
 15: $t14 := infer($t15)
 16: $t17 := 0x42
 17: $t16 := infer($t17)
 18: $t20 := 1
 19: $t21 := 2
 20: $t22 := 3
 21: $t19 := vector($t20, $t21, $t22)
 22: $t18 := infer($t19)
 23: $t24 := [72, 101, 108, 108, 111, 33, 10]
 24: $t23 := infer($t24)
 25: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun constant::test_constans() {
     var $t0: bool
     var $t1: bool
     var $t2: bool
     var $t3: bool
     var $t4: u8
     var $t5: u8
     var $t6: u16
     var $t7: u16
     var $t8: u32
     var $t9: u32
     var $t10: u64
     var $t11: u64
     var $t12: u128
     var $t13: u128
     var $t14: u256
     var $t15: u256
     var $t16: address
     var $t17: address
     var $t18: vector<u64>
     var $t19: vector<u64>
     var $t20: u64
     var $t21: u64
     var $t22: u64
     var $t23: vector<u8>
     var $t24: vector<u8>
     # live vars:
  0: $t1 := true
     # live vars:
  1: $t0 := copy($t1)
     # live vars:
  2: $t3 := false
     # live vars:
  3: $t2 := copy($t3)
     # live vars:
  4: $t5 := 1
     # live vars:
  5: $t4 := copy($t5)
     # live vars:
  6: $t7 := 7086
     # live vars:
  7: $t6 := copy($t7)
     # live vars:
  8: $t9 := 14593408
     # live vars:
  9: $t8 := copy($t9)
     # live vars:
 10: $t11 := 51966
     # live vars:
 11: $t10 := copy($t11)
     # live vars:
 12: $t13 := 3735928559
     # live vars:
 13: $t12 := copy($t13)
     # live vars:
 14: $t15 := 301490978409967
     # live vars:
 15: $t14 := copy($t15)
     # live vars:
 16: $t17 := 0x42
     # live vars:
 17: $t16 := copy($t17)
     # live vars:
 18: $t20 := 1
     # live vars: $t20
 19: $t21 := 2
     # live vars: $t20, $t21
 20: $t22 := 3
     # live vars: $t20, $t21, $t22
 21: $t19 := vector($t20, $t21, $t22)
     # live vars:
 22: $t18 := copy($t19)
     # live vars:
 23: $t24 := [72, 101, 108, 108, 111, 33, 10]
     # live vars:
 24: $t23 := copy($t24)
     # live vars:
 25: return ()
}


============ disassembled file-format ==================
// Move bytecode v7
module 42.constant {


test_constans() {
L0:	loc0: bool
L1:	loc1: bool
L2:	loc2: u8
L3:	loc3: u16
L4:	loc4: u32
L5:	loc5: u64
L6:	loc6: u128
L7:	loc7: u256
L8:	loc8: address
L9:	loc9: vector<u64>
L10:	loc10: vector<u8>
B0:
	0: LdTrue
	1: StLoc[0](loc0: bool)
	2: LdFalse
	3: StLoc[1](loc1: bool)
	4: LdU8(1)
	5: StLoc[2](loc2: u8)
	6: LdU16(7086)
	7: StLoc[3](loc3: u16)
	8: LdU32(14593408)
	9: StLoc[4](loc4: u32)
	10: LdU64(51966)
	11: StLoc[5](loc5: u64)
	12: LdU128(3735928559)
	13: StLoc[6](loc6: u128)
	14: LdU256(301490978409967)
	15: StLoc[7](loc7: u256)
	16: LdConst[0](Address: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66])
	17: StLoc[8](loc8: address)
	18: LdU64(1)
	19: LdU64(2)
	20: LdU64(3)
	21: VecPack(1, 3)
	22: StLoc[9](loc9: vector<u64>)
	23: LdConst[1](Vector(U8): [7, 72, 101, 108, 108, 111, 33, 10])
	24: StLoc[10](loc10: vector<u8>)
	25: Ret
}
}
