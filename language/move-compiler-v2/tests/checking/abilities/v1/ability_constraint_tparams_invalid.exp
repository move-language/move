
Diagnostics:
error: type `TnoC` is missing required ability `copy`
   ┌─ tests/checking/abilities/v1/ability_constraint_tparams_invalid.move:21:11
   │
 7 │     fun c<T: copy>() {}
   │           - declaration of type parameter `T`
   ·
21 │         c<TnoC>();
   │           ^^^^
   │
   = required by instantiating type parameter `T:copy` of function `c`

error: type `Cup<TnoK>` is missing required ability `copy`
   ┌─ tests/checking/abilities/v1/ability_constraint_tparams_invalid.move:22:11
   │
 7 │     fun c<T: copy>() {}
   │           - declaration of type parameter `T`
   ·
22 │         c<Cup<TnoK>>();
   │           ^^^^^^^^^
   │
   = required by instantiating type parameter `T:copy` of function `c`

error: type `TnoC` is missing required ability `copy`
   ┌─ tests/checking/abilities/v1/ability_constraint_tparams_invalid.move:23:11
   │
 7 │     fun c<T: copy>() {}
   │           - declaration of type parameter `T`
   ·
23 │         c<Box<TnoC>>();
   │           ^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `Box`
   = required by instantiating type parameter `T:copy` of function `c`

error: type `TnoK` is missing required ability `key`
   ┌─ tests/checking/abilities/v1/ability_constraint_tparams_invalid.move:24:11
   │
 8 │     fun k<T: key>() {}
   │           - declaration of type parameter `T`
   ·
24 │         k<TnoK>();
   │           ^^^^
   │
   = required by instantiating type parameter `T:key` of function `k`

error: type `Cup<TnoC>` is missing required ability `key`
   ┌─ tests/checking/abilities/v1/ability_constraint_tparams_invalid.move:25:11
   │
 8 │     fun k<T: key>() {}
   │           - declaration of type parameter `T`
   ·
25 │         k<Cup<TnoC>>();
   │           ^^^^^^^^^
   │
   = required by instantiating type parameter `T:key` of function `k`

error: type `Cup<TnoC>` is missing required ability `store`
   ┌─ tests/checking/abilities/v1/ability_constraint_tparams_invalid.move:26:11
   │
 8 │     fun k<T: key>() {}
   │           - declaration of type parameter `T`
   ·
26 │         k<Box<Cup<TnoC>>>();
   │           ^^^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `Box`
   = required by instantiating type parameter `T:key` of function `k`

error: type `TnoC` is missing required ability `copy`
   ┌─ tests/checking/abilities/v1/ability_constraint_tparams_invalid.move:27:13
   │
 9 │     fun cds<T: copy + drop + store>() {}
   │             - declaration of type parameter `T`
   ·
27 │         cds<TnoC>();
   │             ^^^^
   │
   = required by instantiating type parameter `T:copy + drop + store` of function `cds`

error: type `Cup<TnoC>` is missing required abilities `copy + drop + store`
   ┌─ tests/checking/abilities/v1/ability_constraint_tparams_invalid.move:28:13
   │
 9 │     fun cds<T: copy + drop + store>() {}
   │             - declaration of type parameter `T`
   ·
28 │         cds<Cup<TnoC>>();
   │             ^^^^^^^^^
   │
   = required by instantiating type parameter `T:copy + drop + store` of function `cds`

error: type `Cup<TnoK>` is missing required abilities `copy + drop + store`
   ┌─ tests/checking/abilities/v1/ability_constraint_tparams_invalid.move:29:13
   │
 9 │     fun cds<T: copy + drop + store>() {}
   │             - declaration of type parameter `T`
   ·
29 │         cds<Cup<TnoK>>();
   │             ^^^^^^^^^
   │
   = required by instantiating type parameter `T:copy + drop + store` of function `cds`

error: type `TnoC` is missing required ability `copy`
   ┌─ tests/checking/abilities/v1/ability_constraint_tparams_invalid.move:30:13
   │
 9 │     fun cds<T: copy + drop + store>() {}
   │             - declaration of type parameter `T`
   ·
30 │         cds<Pair<u64, TnoC>>();
   │             ^^^^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T2` of struct `Pair`
   = required by instantiating type parameter `T:copy + drop + store` of function `cds`
