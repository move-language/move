============ initial bytecode ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: &mut u64
     var $t3: &mut u64
     var $t4: &mut u64
     var $t5: &mut u64
     var $t6: u64
  0: $t3 := borrow_local($t0)
  1: $t2 := infer($t3)
  2: $t4 := infer($t2)
  3: $t5 := infer($t4)
  4: $t6 := 0
  5: write_ref($t2, $t6)
  6: $t1 := read_ref($t5)
  7: return $t1
}

============ after AvailableCopiesAnalysisProcessor: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: &mut u64
     var $t3: &mut u64
     var $t4: &mut u64
     var $t5: &mut u64
     var $t6: u64
     # before: {}, after: {}
  0: $t3 := borrow_local($t0)
     # before: {}, after: {$t2 := $t3}
  1: $t2 := infer($t3)
     # before: {$t2 := $t3}, after: {$t2 := $t3, $t4 := $t2}
  2: $t4 := infer($t2)
     # before: {$t2 := $t3, $t4 := $t2}, after: {$t2 := $t3, $t4 := $t2, $t5 := $t4}
  3: $t5 := infer($t4)
     # before: {$t2 := $t3, $t4 := $t2, $t5 := $t4}, after: {$t2 := $t3, $t4 := $t2, $t5 := $t4}
  4: $t6 := 0
     # before: {$t2 := $t3, $t4 := $t2, $t5 := $t4}, after: {$t2 := $t3, $t4 := $t2, $t5 := $t4}
  5: write_ref($t2, $t6)
     # before: {$t2 := $t3, $t4 := $t2, $t5 := $t4}, after: {$t2 := $t3, $t4 := $t2, $t5 := $t4}
  6: $t1 := read_ref($t5)
     # before: {$t2 := $t3, $t4 := $t2, $t5 := $t4}, after: {$t2 := $t3, $t4 := $t2, $t5 := $t4}
  7: return $t1
}

============ after CopyPropagation: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: &mut u64
     var $t3: &mut u64
     var $t4: &mut u64
     var $t5: &mut u64
     var $t6: u64
  0: $t3 := borrow_local($t0)
  1: $t2 := infer($t3)
  2: $t4 := infer($t3)
  3: $t5 := infer($t3)
  4: $t6 := 0
  5: write_ref($t3, $t6)
  6: $t1 := read_ref($t3)
  7: return $t1
}

============ after DeadStoreElimination: ================

[variant baseline]
fun m::test($t0: u64): u64 {
     var $t1: u64
     var $t2: &mut u64
     var $t3: &mut u64
     var $t4: &mut u64
     var $t5: &mut u64
     var $t6: u64
  0: $t3 := borrow_local($t0)
  1: $t6 := 0
  2: write_ref($t3, $t6)
  3: $t1 := read_ref($t3)
  4: return $t1
}
