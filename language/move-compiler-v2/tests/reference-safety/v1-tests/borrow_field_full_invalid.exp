
Diagnostics:
error: cannot copy mutable reference in local `c` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:15:9
   │
14 │         let f1 = &inner.f1;
   │                  --------- previous field borrow
15 │         *c;
   │         ^^ copied here

error: cannot copy mutable reference in local `inner` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:16:9
   │
14 │         let f1 = &inner.f1;
   │                  --------- previous field borrow
15 │         *c;
16 │         *inner;
   │         ^^^^^^ copied here

error: cannot copy mutable reference in local `inner` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:23:18
   │
22 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
23 │         let f1 = &inner.f1;
   │                  ^^^^^^^^^ copied here

error: cannot immutable borrow local since other mutable references exist
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:23:18
   │
22 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
23 │         let f1 = &inner.f1;
   │                  ^^^^^^^^^ immutable borrow attempted here

error: cannot copy mutable reference in local `inner` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:25:9
   │
22 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
23 │         let f1 = &inner.f1;
   │                  --------- previous field borrow
24 │         *c;
25 │         *inner;
   │         ^^^^^^ copied here

error: cannot dereference local which is still mutable borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:25:9
   │
22 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
   ·
25 │         *inner;
   │         ^^^^^^ dereferenced here

error: cannot dereference local `inner` which is still mutable borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:27:9
   │
22 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
   ·
27 │         *inner;
   │         ^^^^^^ dereferenced here

error: cannot copy mutable reference in local `c` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:33:9
   │
32 │         let f1 = &mut inner.f1;
   │                  ------------- previous mutable field borrow
33 │         *c;
   │         ^^ copied here

error: cannot dereference local which is still mutable borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:33:9
   │
32 │         let f1 = &mut inner.f1;
   │                  ------------- previous mutable field borrow
33 │         *c;
   │         ^^ dereferenced here

error: cannot copy mutable reference in local `inner` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:34:9
   │
32 │         let f1 = &mut inner.f1;
   │                  ------------- previous mutable field borrow
33 │         *c;
34 │         *inner;
   │         ^^^^^^ copied here

error: cannot dereference local which is still mutable borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:34:9
   │
32 │         let f1 = &mut inner.f1;
   │                  ------------- previous mutable field borrow
33 │         *c;
34 │         *inner;
   │         ^^^^^^ dereferenced here

error: cannot copy mutable reference in local `inner` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:41:18
   │
40 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
41 │         let f1 = &mut inner.f1;
   │                  ^^^^^^^^^^^^^ copied here

error: cannot mutable borrow local since other references exists
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:41:18
   │
40 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
41 │         let f1 = &mut inner.f1;
   │                  ^^^^^^^^^^^^^ mutable borrow attempted here

error: cannot copy mutable reference in local `inner` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:43:9
   │
40 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
41 │         let f1 = &mut inner.f1;
   │                  ------------- previous mutable field borrow
42 │         *c;
43 │         *inner;
   │         ^^^^^^ copied here

error: cannot dereference local which is still mutable borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:43:9
   │
40 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
41 │         let f1 = &mut inner.f1;
   │                  ------------- previous mutable field borrow
42 │         *c;
43 │         *inner;
   │         ^^^^^^ dereferenced here

error: cannot dereference local `inner` which is still mutable borrowed
   ┌─ tests/reference-safety/v1-tests/borrow_field_full_invalid.move:45:9
   │
40 │         let c = id_mut(inner);
   │                 ------------- previous mutable call result
   ·
45 │         *inner;
   │         ^^^^^^ dereferenced here
