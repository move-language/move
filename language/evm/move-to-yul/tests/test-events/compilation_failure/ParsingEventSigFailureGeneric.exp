/* =======================================
 * Generated by Move-To-Yul compiler v0.0
 * ======================================= */


object "A2_M" {
    code {
        codecopy(0, dataoffset("A2_M_deployed"), datasize("A2_M_deployed"))
        return(0, datasize("A2_M_deployed"))
    }
    object "A2_M_deployed" {
        code {
            mstore(0, memoryguard(160))
            if iszero(lt(calldatasize(), 4))
            {
                let selector := $Shr(calldataload(0), 224)
                switch selector
                default {}
            }
            $Abort(97)
            function $Abort(code) {
                mstore(0, code)
                revert(24, 8) // TODO: store code as a string?
            }
            function $Shr(x, y) -> r {
                r := shr(y, x)
            }
        }
    }
}


!! Move-To-Yul Diagnostics:
 error: #[event] structs cannot be generic
   ┌─ tests/test-events/compilation_failure/ParsingEventSigFailureGeneric.move:21:5
   │
21 │ ╭     struct Bar<T1, T2>{
22 │ │         x: T1,
23 │ │         y: vector<T2>,
24 │ │     }
   │ ╰─────^
