============ initial bytecode ================

[variant baseline]
fun m::test() {
     var $t0: &u64
     var $t1: &u64
     var $t2: u64
     var $t3: &u64
     var $t4: &u64
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: u64
  0: $t2 := 5
  1: $t1 := borrow_local($t2)
  2: $t0 := infer($t1)
  3: $t3 := infer($t0)
  4: $t5 := 5
  5: $t4 := borrow_local($t5)
  6: $t0 := infer($t4)
  7: $t7 := read_ref($t0)
  8: $t8 := 5
  9: $t6 := ==($t7, $t8)
 10: return ()
}

============ after VariableCoalescingAnnotator: ================

[variant baseline]
fun m::test() {
     var $t0: &u64
     var $t1: &u64
     var $t2: u64
     var $t3: &u64
     var $t4: &u64
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: u64
     # live vars:
  0: $t2 := 5
     # live vars: $t2
     # events: b:$t1
  1: $t1 := borrow_local($t2)
     # live vars: $t1
     # events: e:$t1, b:$t0
  2: $t0 := move($t1)
     # live vars: $t0
     # events: b:$t3
  3: $t3 := move($t0)
     # live vars: $t3
     # events: e:$t3
  4: drop($t3)
     # live vars:
  5: $t5 := 5
     # live vars: $t5
     # events: b:$t4
  6: $t4 := borrow_local($t5)
     # live vars: $t4
     # events: e:$t4
  7: $t0 := move($t4)
     # live vars: $t0
     # events: e:$t0, b:$t7
  8: $t7 := read_ref($t0)
     # live vars: $t7
     # events: b:$t8
  9: $t8 := 5
     # live vars: $t7, $t8
     # events: e:$t6, e:$t7, e:$t8, b:$t6
 10: $t6 := ==($t7, $t8)
     # live vars:
 11: return ()
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
fun m::test() {
     var $t0: &u64 [unused]
     var $t1: &u64
     var $t2: u64
     var $t3: &u64
     var $t4: &u64 [unused]
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: u64
  0: $t2 := 5
  1: $t1 := borrow_local($t2)
  2: $t1 := move($t1)
  3: $t3 := move($t1)
  4: drop($t3)
  5: $t5 := 5
  6: $t3 := borrow_local($t5)
  7: $t1 := move($t3)
  8: $t7 := read_ref($t1)
  9: $t8 := 5
 10: $t6 := ==($t7, $t8)
 11: return ()
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {


test() /* def_idx: 0 */ {
L0:	loc0: u64
L1:	loc1: &u64
L2:	loc2: u64
L3:	loc3: &u64
B0:
	0: LdU64(5)
	1: StLoc[0](loc0: u64)
	2: ImmBorrowLoc[0](loc0: u64)
	3: StLoc[1](loc1: &u64)
	4: MoveLoc[1](loc1: &u64)
	5: Pop
	6: LdU64(5)
	7: StLoc[2](loc2: u64)
	8: ImmBorrowLoc[2](loc2: u64)
	9: StLoc[1](loc1: &u64)
	10: MoveLoc[1](loc1: &u64)
	11: StLoc[3](loc3: &u64)
	12: MoveLoc[3](loc3: &u64)
	13: ReadRef
	14: LdU64(5)
	15: Eq
	16: Pop
	17: Ret
}
}
============ bytecode verification succeeded ========
