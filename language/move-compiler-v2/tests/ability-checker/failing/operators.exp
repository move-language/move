============ initial bytecode ================

[variant baseline]
fun operators::arithm($t0: u64, $t1: u64): u64 {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
  0: $t6 := -($t0, $t1)
  1: $t5 := /($t1, $t6)
  2: $t4 := *($t5, $t1)
  3: $t3 := %($t4, $t0)
  4: $t2 := +($t0, $t3)
  5: return $t2
}


[variant baseline]
fun operators::bits($t0: u64, $t1: u8): u64 {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
  0: $t4 := <<($t0, $t1)
  1: $t3 := &($t4, $t0)
  2: $t6 := >>($t0, $t1)
  3: $t5 := ^($t6, $t0)
  4: $t2 := |($t3, $t5)
  5: return $t2
}


[variant baseline]
fun operators::bools($t0: bool, $t1: bool): bool {
     var $t2: bool
     var $t3: bool
     var $t4: bool
     var $t5: bool
     var $t6: bool
     var $t7: bool
  0: if ($t0) goto 1 else goto 4
  1: label L0
  2: $t5 := infer($t1)
  3: goto 6
  4: label L1
  5: $t5 := false
  6: label L2
  7: if ($t5) goto 8 else goto 11
  8: label L3
  9: $t4 := true
 10: goto 19
 11: label L4
 12: if ($t0) goto 13 else goto 16
 13: label L6
 14: $t4 := !($t1)
 15: goto 18
 16: label L7
 17: $t4 := false
 18: label L8
 19: label L5
 20: if ($t4) goto 21 else goto 24
 21: label L9
 22: $t3 := true
 23: goto 33
 24: label L10
 25: $t6 := !($t0)
 26: if ($t6) goto 27 else goto 30
 27: label L12
 28: $t3 := infer($t1)
 29: goto 32
 30: label L13
 31: $t3 := false
 32: label L14
 33: label L11
 34: if ($t3) goto 35 else goto 38
 35: label L15
 36: $t2 := true
 37: goto 47
 38: label L16
 39: $t7 := !($t0)
 40: if ($t7) goto 41 else goto 44
 41: label L18
 42: $t2 := !($t1)
 43: goto 46
 44: label L19
 45: $t2 := false
 46: label L20
 47: label L17
 48: return $t2
}


[variant baseline]
fun operators::equality<#0>($t0: #0, $t1: #0): bool {
     var $t2: bool
  0: $t2 := ==($t0, $t1)
  1: return $t2
}


[variant baseline]
fun operators::inequality<#0>($t0: #0, $t1: #0): bool {
     var $t2: bool
  0: $t2 := !=($t0, $t1)
  1: return $t2
}


[variant baseline]
fun operators::order($t0: u64, $t1: u64): bool {
     var $t2: bool
     var $t3: bool
     var $t4: bool
     var $t5: bool
     var $t6: bool
     var $t7: bool
  0: $t5 := <($t0, $t1)
  1: if ($t5) goto 2 else goto 5
  2: label L0
  3: $t4 := <=($t0, $t1)
  4: goto 7
  5: label L1
  6: $t4 := false
  7: label L2
  8: if ($t4) goto 9 else goto 13
  9: label L3
 10: $t6 := >($t0, $t1)
 11: $t3 := !($t6)
 12: goto 15
 13: label L4
 14: $t3 := false
 15: label L5
 16: if ($t3) goto 17 else goto 21
 17: label L6
 18: $t7 := >=($t0, $t1)
 19: $t2 := !($t7)
 20: goto 23
 21: label L7
 22: $t2 := false
 23: label L8
 24: return $t2
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun operators::arithm($t0: u64, $t1: u64): u64 {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     # live vars: $t0, $t1
  0: $t6 := -($t0, $t1)
     # live vars: $t0, $t1, $t6
  1: $t5 := /($t1, $t6)
     # live vars: $t0, $t1, $t5
  2: $t4 := *($t5, $t1)
     # live vars: $t0, $t4
  3: $t3 := %($t4, $t0)
     # live vars: $t0, $t3
  4: $t2 := +($t0, $t3)
     # live vars: $t2
  5: return $t2
}


[variant baseline]
fun operators::bits($t0: u64, $t1: u8): u64 {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     # live vars: $t0, $t1
  0: $t4 := <<($t0, $t1)
     # live vars: $t0, $t1, $t4
  1: $t3 := &($t4, $t0)
     # live vars: $t0, $t1, $t3
  2: $t6 := >>($t0, $t1)
     # live vars: $t0, $t3, $t6
  3: $t5 := ^($t6, $t0)
     # live vars: $t3, $t5
  4: $t2 := |($t3, $t5)
     # live vars: $t2
  5: return $t2
}


[variant baseline]
fun operators::bools($t0: bool, $t1: bool): bool {
     var $t2: bool
     var $t3: bool
     var $t4: bool
     var $t5: bool
     var $t6: bool
     var $t7: bool
     # live vars: $t0, $t1
  0: if ($t0) goto 1 else goto 4
     # live vars: $t0, $t1
  1: label L0
     # live vars: $t0, $t1
  2: $t5 := copy($t1)
     # live vars: $t0, $t1, $t5
  3: goto 6
     # live vars: $t0, $t1
  4: label L1
     # live vars: $t0, $t1
  5: $t5 := false
     # live vars: $t0, $t1, $t5
  6: label L2
     # live vars: $t0, $t1, $t5
  7: if ($t5) goto 8 else goto 11
     # live vars: $t0, $t1
  8: label L3
     # live vars: $t0, $t1
  9: $t4 := true
     # live vars: $t0, $t1, $t4
 10: goto 19
     # live vars: $t0, $t1
 11: label L4
     # live vars: $t0, $t1
 12: if ($t0) goto 13 else goto 16
     # live vars: $t0, $t1
 13: label L6
     # live vars: $t0, $t1
 14: $t4 := !($t1)
     # live vars: $t0, $t1, $t4
 15: goto 18
     # live vars: $t0, $t1
 16: label L7
     # live vars: $t0, $t1
 17: $t4 := false
     # live vars: $t0, $t1, $t4
 18: label L8
     # live vars: $t0, $t1, $t4
 19: label L5
     # live vars: $t0, $t1, $t4
 20: if ($t4) goto 21 else goto 24
     # live vars: $t0, $t1
 21: label L9
     # live vars: $t0, $t1
 22: $t3 := true
     # live vars: $t0, $t1, $t3
 23: goto 33
     # live vars: $t0, $t1
 24: label L10
     # live vars: $t0, $t1
 25: $t6 := !($t0)
     # live vars: $t0, $t1, $t6
 26: if ($t6) goto 27 else goto 30
     # live vars: $t0, $t1
 27: label L12
     # live vars: $t0, $t1
 28: $t3 := copy($t1)
     # live vars: $t0, $t1, $t3
 29: goto 32
     # live vars: $t0, $t1
 30: label L13
     # live vars: $t0, $t1
 31: $t3 := false
     # live vars: $t0, $t1, $t3
 32: label L14
     # live vars: $t0, $t1, $t3
 33: label L11
     # live vars: $t0, $t1, $t3
 34: if ($t3) goto 35 else goto 38
     # live vars: $t0, $t1
 35: label L15
     # live vars:
 36: $t2 := true
     # live vars: $t2
 37: goto 47
     # live vars: $t0, $t1
 38: label L16
     # live vars: $t0, $t1
 39: $t7 := !($t0)
     # live vars: $t1, $t7
 40: if ($t7) goto 41 else goto 44
     # live vars: $t1
 41: label L18
     # live vars: $t1
 42: $t2 := !($t1)
     # live vars: $t2
 43: goto 46
     # live vars: $t1
 44: label L19
     # live vars:
 45: $t2 := false
     # live vars: $t2
 46: label L20
     # live vars: $t2
 47: label L17
     # live vars: $t2
 48: return $t2
}


[variant baseline]
fun operators::equality<#0>($t0: #0, $t1: #0): bool {
     var $t2: bool
     # live vars: $t0, $t1
  0: $t2 := ==($t0, $t1)
     # live vars: $t2
  1: return $t2
}


[variant baseline]
fun operators::inequality<#0>($t0: #0, $t1: #0): bool {
     var $t2: bool
     # live vars: $t0, $t1
  0: $t2 := !=($t0, $t1)
     # live vars: $t2
  1: return $t2
}


[variant baseline]
fun operators::order($t0: u64, $t1: u64): bool {
     var $t2: bool
     var $t3: bool
     var $t4: bool
     var $t5: bool
     var $t6: bool
     var $t7: bool
     # live vars: $t0, $t1
  0: $t5 := <($t0, $t1)
     # live vars: $t0, $t1, $t5
  1: if ($t5) goto 2 else goto 5
     # live vars: $t0, $t1
  2: label L0
     # live vars: $t0, $t1
  3: $t4 := <=($t0, $t1)
     # live vars: $t0, $t1, $t4
  4: goto 7
     # live vars: $t0, $t1
  5: label L1
     # live vars: $t0, $t1
  6: $t4 := false
     # live vars: $t0, $t1, $t4
  7: label L2
     # live vars: $t0, $t1, $t4
  8: if ($t4) goto 9 else goto 13
     # live vars: $t0, $t1
  9: label L3
     # live vars: $t0, $t1
 10: $t6 := >($t0, $t1)
     # live vars: $t0, $t1, $t6
 11: $t3 := !($t6)
     # live vars: $t0, $t1, $t3
 12: goto 15
     # live vars: $t0, $t1
 13: label L4
     # live vars: $t0, $t1
 14: $t3 := false
     # live vars: $t0, $t1, $t3
 15: label L5
     # live vars: $t0, $t1, $t3
 16: if ($t3) goto 17 else goto 21
     # live vars: $t0, $t1
 17: label L6
     # live vars: $t0, $t1
 18: $t7 := >=($t0, $t1)
     # live vars: $t7
 19: $t2 := !($t7)
     # live vars: $t2
 20: goto 23
     # live vars: $t0, $t1
 21: label L7
     # live vars:
 22: $t2 := false
     # live vars: $t2
 23: label L8
     # live vars: $t2
 24: return $t2
}

============ after MemorySafetyProcessor: ================

[variant baseline]
fun operators::arithm($t0: u64, $t1: u64): u64 {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: $t6 := -($t0, $t1)
     # live vars: $t0, $t1, $t6
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  1: $t5 := /($t1, $t6)
     # live vars: $t0, $t1, $t5
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t6}
     #
  2: $t4 := *($t5, $t1)
     # live vars: $t0, $t4
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t5,$t6}
     #
  3: $t3 := %($t4, $t0)
     # live vars: $t0, $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t4,$t5,$t6}
     #
  4: $t2 := +($t0, $t3)
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t3,$t4,$t5,$t6}
     #
  5: return $t2
}


[variant baseline]
fun operators::bits($t0: u64, $t1: u8): u64 {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: $t4 := <<($t0, $t1)
     # live vars: $t0, $t1, $t4
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  1: $t3 := &($t4, $t0)
     # live vars: $t0, $t1, $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t4}
     #
  2: $t6 := >>($t0, $t1)
     # live vars: $t0, $t3, $t6
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t4}
     #
  3: $t5 := ^($t6, $t0)
     # live vars: $t3, $t5
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t4,$t6}
     #
  4: $t2 := |($t3, $t5)
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t3,$t4,$t5,$t6}
     #
  5: return $t2
}


[variant baseline]
fun operators::bools($t0: bool, $t1: bool): bool {
     var $t2: bool
     var $t3: bool
     var $t4: bool
     var $t5: bool
     var $t6: bool
     var $t7: bool
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: if ($t0) goto 1 else goto 4
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  1: label L0
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  2: $t5 := copy($t1)
     # live vars: $t0, $t1, $t5
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  3: goto 6
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  4: label L1
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  5: $t5 := false
     # live vars: $t0, $t1, $t5
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  6: label L2
     # live vars: $t0, $t1, $t5
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  7: if ($t5) goto 8 else goto 11
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  8: label L3
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  9: $t4 := true
     # live vars: $t0, $t1, $t4
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
 10: goto 19
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
 11: label L4
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
 12: if ($t0) goto 13 else goto 16
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
 13: label L6
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
 14: $t4 := !($t1)
     # live vars: $t0, $t1, $t4
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t1}
     #
 15: goto 18
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
 16: label L7
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
 17: $t4 := false
     # live vars: $t0, $t1, $t4
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t1}
     #
 18: label L8
     # live vars: $t0, $t1, $t4
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t1}
     #
 19: label L5
     # live vars: $t0, $t1, $t4
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t1}
     #
 20: if ($t4) goto 21 else goto 24
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t1}
     #
 21: label L9
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t1}
     #
 22: $t3 := true
     # live vars: $t0, $t1, $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t1}
     #
 23: goto 33
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t1}
     #
 24: label L10
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t1}
     #
 25: $t6 := !($t0)
     # live vars: $t0, $t1, $t6
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 26: if ($t6) goto 27 else goto 30
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 27: label L12
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 28: $t3 := copy($t1)
     # live vars: $t0, $t1, $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 29: goto 32
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 30: label L13
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 31: $t3 := false
     # live vars: $t0, $t1, $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 32: label L14
     # live vars: $t0, $t1, $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 33: label L11
     # live vars: $t0, $t1, $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 34: if ($t3) goto 35 else goto 38
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 35: label L15
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 36: $t2 := true
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 37: goto 47
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 38: label L16
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 39: $t7 := !($t0)
     # live vars: $t1, $t7
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 40: if ($t7) goto 41 else goto 44
     # live vars: $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 41: label L18
     # live vars: $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 42: $t2 := !($t1)
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 43: goto 46
     # live vars: $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 44: label L19
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 45: $t2 := false
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 46: label L20
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 47: label L17
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 48: return $t2
}


[variant baseline]
fun operators::equality<#0>($t0: #0, $t1: #0): bool {
     var $t2: bool
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: $t2 := ==($t0, $t1)
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  1: return $t2
}


[variant baseline]
fun operators::inequality<#0>($t0: #0, $t1: #0): bool {
     var $t2: bool
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: $t2 := !=($t0, $t1)
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  1: return $t2
}


[variant baseline]
fun operators::order($t0: u64, $t1: u64): bool {
     var $t2: bool
     var $t3: bool
     var $t4: bool
     var $t5: bool
     var $t6: bool
     var $t7: bool
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: $t5 := <($t0, $t1)
     # live vars: $t0, $t1, $t5
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  1: if ($t5) goto 2 else goto 5
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  2: label L0
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  3: $t4 := <=($t0, $t1)
     # live vars: $t0, $t1, $t4
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  4: goto 7
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  5: label L1
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  6: $t4 := false
     # live vars: $t0, $t1, $t4
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  7: label L2
     # live vars: $t0, $t1, $t4
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  8: if ($t4) goto 9 else goto 13
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
  9: label L3
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 10: $t6 := >($t0, $t1)
     # live vars: $t0, $t1, $t6
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 11: $t3 := !($t6)
     # live vars: $t0, $t1, $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t6}
     #
 12: goto 15
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 13: label L4
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1}
     #
 14: $t3 := false
     # live vars: $t0, $t1, $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t6}
     #
 15: label L5
     # live vars: $t0, $t1, $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t6}
     #
 16: if ($t3) goto 17 else goto 21
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t6}
     #
 17: label L6
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t6}
     #
 18: $t7 := >=($t0, $t1)
     # live vars: $t7
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t6}
     #
 19: $t2 := !($t7)
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t6,$t7}
     #
 20: goto 23
     # live vars: $t0, $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t6}
     #
 21: label L7
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t6}
     #
 22: $t2 := false
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t6,$t7}
     #
 23: label L8
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t0,$t1,$t6,$t7}
     #
 24: return $t2
}

============ after ExplicitDrop: ================

[variant baseline]
fun operators::arithm($t0: u64, $t1: u64): u64 {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
  0: $t6 := -($t0, $t1)
  1: $t5 := /($t1, $t6)
  2: $t4 := *($t5, $t1)
  3: $t3 := %($t4, $t0)
  4: $t2 := +($t0, $t3)
  5: return $t2
}


[variant baseline]
fun operators::bits($t0: u64, $t1: u8): u64 {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
  0: $t4 := <<($t0, $t1)
  1: $t3 := &($t4, $t0)
  2: $t6 := >>($t0, $t1)
  3: $t5 := ^($t6, $t0)
  4: $t2 := |($t3, $t5)
  5: return $t2
}


[variant baseline]
fun operators::bools($t0: bool, $t1: bool): bool {
     var $t2: bool
     var $t3: bool
     var $t4: bool
     var $t5: bool
     var $t6: bool
     var $t7: bool
  0: if ($t0) goto 1 else goto 4
  1: label L0
  2: $t5 := copy($t1)
  3: goto 6
  4: label L1
  5: $t5 := false
  6: label L2
  7: if ($t5) goto 8 else goto 11
  8: label L3
  9: $t4 := true
 10: goto 19
 11: label L4
 12: if ($t0) goto 13 else goto 16
 13: label L6
 14: $t4 := !($t1)
 15: goto 18
 16: label L7
 17: $t4 := false
 18: label L8
 19: label L5
 20: if ($t4) goto 21 else goto 24
 21: label L9
 22: $t3 := true
 23: goto 33
 24: label L10
 25: $t6 := !($t0)
 26: if ($t6) goto 27 else goto 30
 27: label L12
 28: $t3 := copy($t1)
 29: goto 32
 30: label L13
 31: $t3 := false
 32: label L14
 33: label L11
 34: if ($t3) goto 35 else goto 38
 35: label L15
 36: $t2 := true
 37: goto 47
 38: label L16
 39: $t7 := !($t0)
 40: if ($t7) goto 41 else goto 44
 41: label L18
 42: $t2 := !($t1)
 43: goto 46
 44: label L19
 45: $t2 := false
 46: label L20
 47: label L17
 48: return $t2
}


[variant baseline]
fun operators::equality<#0>($t0: #0, $t1: #0): bool {
     var $t2: bool
  0: $t2 := ==($t0, $t1)
  1: return $t2
}


[variant baseline]
fun operators::inequality<#0>($t0: #0, $t1: #0): bool {
     var $t2: bool
  0: $t2 := !=($t0, $t1)
  1: return $t2
}


[variant baseline]
fun operators::order($t0: u64, $t1: u64): bool {
     var $t2: bool
     var $t3: bool
     var $t4: bool
     var $t5: bool
     var $t6: bool
     var $t7: bool
  0: $t5 := <($t0, $t1)
  1: if ($t5) goto 2 else goto 5
  2: label L0
  3: $t4 := <=($t0, $t1)
  4: goto 7
  5: label L1
  6: $t4 := false
  7: label L2
  8: if ($t4) goto 9 else goto 13
  9: label L3
 10: $t6 := >($t0, $t1)
 11: $t3 := !($t6)
 12: goto 15
 13: label L4
 14: $t3 := false
 15: label L5
 16: if ($t3) goto 17 else goto 21
 17: label L6
 18: $t7 := >=($t0, $t1)
 19: $t2 := !($t7)
 20: goto 23
 21: label L7
 22: $t2 := false
 23: label L8
 24: return $t2
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
fun operators::arithm($t0: u64, $t1: u64): u64 {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     # abort state before: {returns,aborts}
     # abort state after : {returns,aborts}
  0: $t6 := -($t0, $t1)
     # abort state before: {returns,aborts}
     # abort state after : {returns,aborts}
  1: $t5 := /($t1, $t6)
     # abort state before: {returns,aborts}
     # abort state after : {returns,aborts}
  2: $t4 := *($t5, $t1)
     # abort state before: {returns,aborts}
     # abort state after : {returns,aborts}
  3: $t3 := %($t4, $t0)
     # abort state before: {returns,aborts}
     # abort state after : {returns}
  4: $t2 := +($t0, $t3)
     # abort state before: {returns}
     # abort state after : {}
  5: return $t2
}


[variant baseline]
fun operators::bits($t0: u64, $t1: u8): u64 {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     # abort state before: {returns,aborts}
     # abort state after : {returns,aborts}
  0: $t4 := <<($t0, $t1)
     # abort state before: {returns,aborts}
     # abort state after : {returns,aborts}
  1: $t3 := &($t4, $t0)
     # abort state before: {returns,aborts}
     # abort state after : {returns}
  2: $t6 := >>($t0, $t1)
     # abort state before: {returns}
     # abort state after : {returns}
  3: $t5 := ^($t6, $t0)
     # abort state before: {returns}
     # abort state after : {returns}
  4: $t2 := |($t3, $t5)
     # abort state before: {returns}
     # abort state after : {}
  5: return $t2
}


[variant baseline]
fun operators::bools($t0: bool, $t1: bool): bool {
     var $t2: bool
     var $t3: bool
     var $t4: bool
     var $t5: bool
     var $t6: bool
     var $t7: bool
     # abort state before: {returns}
     # abort state after : {returns}
  0: if ($t0) goto 1 else goto 4
     # abort state before: {returns}
     # abort state after : {returns}
  1: label L0
     # abort state before: {returns}
     # abort state after : {returns}
  2: $t5 := copy($t1)
     # abort state before: {returns}
     # abort state after : {returns}
  3: goto 6
     # abort state before: {returns}
     # abort state after : {returns}
  4: label L1
     # abort state before: {returns}
     # abort state after : {returns}
  5: $t5 := false
     # abort state before: {returns}
     # abort state after : {returns}
  6: label L2
     # abort state before: {returns}
     # abort state after : {returns}
  7: if ($t5) goto 8 else goto 11
     # abort state before: {returns}
     # abort state after : {returns}
  8: label L3
     # abort state before: {returns}
     # abort state after : {returns}
  9: $t4 := true
     # abort state before: {returns}
     # abort state after : {returns}
 10: goto 19
     # abort state before: {returns}
     # abort state after : {returns}
 11: label L4
     # abort state before: {returns}
     # abort state after : {returns}
 12: if ($t0) goto 13 else goto 16
     # abort state before: {returns}
     # abort state after : {returns}
 13: label L6
     # abort state before: {returns}
     # abort state after : {returns}
 14: $t4 := !($t1)
     # abort state before: {returns}
     # abort state after : {returns}
 15: goto 18
     # abort state before: {returns}
     # abort state after : {returns}
 16: label L7
     # abort state before: {returns}
     # abort state after : {returns}
 17: $t4 := false
     # abort state before: {returns}
     # abort state after : {returns}
 18: label L8
     # abort state before: {returns}
     # abort state after : {returns}
 19: label L5
     # abort state before: {returns}
     # abort state after : {returns}
 20: if ($t4) goto 21 else goto 24
     # abort state before: {returns}
     # abort state after : {returns}
 21: label L9
     # abort state before: {returns}
     # abort state after : {returns}
 22: $t3 := true
     # abort state before: {returns}
     # abort state after : {returns}
 23: goto 33
     # abort state before: {returns}
     # abort state after : {returns}
 24: label L10
     # abort state before: {returns}
     # abort state after : {returns}
 25: $t6 := !($t0)
     # abort state before: {returns}
     # abort state after : {returns}
 26: if ($t6) goto 27 else goto 30
     # abort state before: {returns}
     # abort state after : {returns}
 27: label L12
     # abort state before: {returns}
     # abort state after : {returns}
 28: $t3 := copy($t1)
     # abort state before: {returns}
     # abort state after : {returns}
 29: goto 32
     # abort state before: {returns}
     # abort state after : {returns}
 30: label L13
     # abort state before: {returns}
     # abort state after : {returns}
 31: $t3 := false
     # abort state before: {returns}
     # abort state after : {returns}
 32: label L14
     # abort state before: {returns}
     # abort state after : {returns}
 33: label L11
     # abort state before: {returns}
     # abort state after : {returns}
 34: if ($t3) goto 35 else goto 38
     # abort state before: {returns}
     # abort state after : {returns}
 35: label L15
     # abort state before: {returns}
     # abort state after : {returns}
 36: $t2 := true
     # abort state before: {returns}
     # abort state after : {returns}
 37: goto 47
     # abort state before: {returns}
     # abort state after : {returns}
 38: label L16
     # abort state before: {returns}
     # abort state after : {returns}
 39: $t7 := !($t0)
     # abort state before: {returns}
     # abort state after : {returns}
 40: if ($t7) goto 41 else goto 44
     # abort state before: {returns}
     # abort state after : {returns}
 41: label L18
     # abort state before: {returns}
     # abort state after : {returns}
 42: $t2 := !($t1)
     # abort state before: {returns}
     # abort state after : {returns}
 43: goto 46
     # abort state before: {returns}
     # abort state after : {returns}
 44: label L19
     # abort state before: {returns}
     # abort state after : {returns}
 45: $t2 := false
     # abort state before: {returns}
     # abort state after : {returns}
 46: label L20
     # abort state before: {returns}
     # abort state after : {returns}
 47: label L17
     # abort state before: {returns}
     # abort state after : {}
 48: return $t2
}


[variant baseline]
fun operators::equality<#0>($t0: #0, $t1: #0): bool {
     var $t2: bool
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t2 := ==($t0, $t1)
     # abort state before: {returns}
     # abort state after : {}
  1: return $t2
}


[variant baseline]
fun operators::inequality<#0>($t0: #0, $t1: #0): bool {
     var $t2: bool
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t2 := !=($t0, $t1)
     # abort state before: {returns}
     # abort state after : {}
  1: return $t2
}


[variant baseline]
fun operators::order($t0: u64, $t1: u64): bool {
     var $t2: bool
     var $t3: bool
     var $t4: bool
     var $t5: bool
     var $t6: bool
     var $t7: bool
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t5 := <($t0, $t1)
     # abort state before: {returns}
     # abort state after : {returns}
  1: if ($t5) goto 2 else goto 5
     # abort state before: {returns}
     # abort state after : {returns}
  2: label L0
     # abort state before: {returns}
     # abort state after : {returns}
  3: $t4 := <=($t0, $t1)
     # abort state before: {returns}
     # abort state after : {returns}
  4: goto 7
     # abort state before: {returns}
     # abort state after : {returns}
  5: label L1
     # abort state before: {returns}
     # abort state after : {returns}
  6: $t4 := false
     # abort state before: {returns}
     # abort state after : {returns}
  7: label L2
     # abort state before: {returns}
     # abort state after : {returns}
  8: if ($t4) goto 9 else goto 13
     # abort state before: {returns}
     # abort state after : {returns}
  9: label L3
     # abort state before: {returns}
     # abort state after : {returns}
 10: $t6 := >($t0, $t1)
     # abort state before: {returns}
     # abort state after : {returns}
 11: $t3 := !($t6)
     # abort state before: {returns}
     # abort state after : {returns}
 12: goto 15
     # abort state before: {returns}
     # abort state after : {returns}
 13: label L4
     # abort state before: {returns}
     # abort state after : {returns}
 14: $t3 := false
     # abort state before: {returns}
     # abort state after : {returns}
 15: label L5
     # abort state before: {returns}
     # abort state after : {returns}
 16: if ($t3) goto 17 else goto 21
     # abort state before: {returns}
     # abort state after : {returns}
 17: label L6
     # abort state before: {returns}
     # abort state after : {returns}
 18: $t7 := >=($t0, $t1)
     # abort state before: {returns}
     # abort state after : {returns}
 19: $t2 := !($t7)
     # abort state before: {returns}
     # abort state after : {returns}
 20: goto 23
     # abort state before: {returns}
     # abort state after : {returns}
 21: label L7
     # abort state before: {returns}
     # abort state after : {returns}
 22: $t2 := false
     # abort state before: {returns}
     # abort state after : {returns}
 23: label L8
     # abort state before: {returns}
     # abort state after : {}
 24: return $t2
}

============ after AbilityChecker: ================

[variant baseline]
fun operators::arithm($t0: u64, $t1: u64): u64 {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     # abort state before: {returns,aborts}
     # abort state after : {returns,aborts}
  0: $t6 := -($t0, $t1)
     # abort state before: {returns,aborts}
     # abort state after : {returns,aborts}
  1: $t5 := /($t1, $t6)
     # abort state before: {returns,aborts}
     # abort state after : {returns,aborts}
  2: $t4 := *($t5, $t1)
     # abort state before: {returns,aborts}
     # abort state after : {returns,aborts}
  3: $t3 := %($t4, $t0)
     # abort state before: {returns,aborts}
     # abort state after : {returns}
  4: $t2 := +($t0, $t3)
     # abort state before: {returns}
     # abort state after : {}
  5: return $t2
}


[variant baseline]
fun operators::bits($t0: u64, $t1: u8): u64 {
     var $t2: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     # abort state before: {returns,aborts}
     # abort state after : {returns,aborts}
  0: $t4 := <<($t0, $t1)
     # abort state before: {returns,aborts}
     # abort state after : {returns,aborts}
  1: $t3 := &($t4, $t0)
     # abort state before: {returns,aborts}
     # abort state after : {returns}
  2: $t6 := >>($t0, $t1)
     # abort state before: {returns}
     # abort state after : {returns}
  3: $t5 := ^($t6, $t0)
     # abort state before: {returns}
     # abort state after : {returns}
  4: $t2 := |($t3, $t5)
     # abort state before: {returns}
     # abort state after : {}
  5: return $t2
}


[variant baseline]
fun operators::bools($t0: bool, $t1: bool): bool {
     var $t2: bool
     var $t3: bool
     var $t4: bool
     var $t5: bool
     var $t6: bool
     var $t7: bool
     # abort state before: {returns}
     # abort state after : {returns}
  0: if ($t0) goto 1 else goto 4
     # abort state before: {returns}
     # abort state after : {returns}
  1: label L0
     # abort state before: {returns}
     # abort state after : {returns}
  2: $t5 := copy($t1)
     # abort state before: {returns}
     # abort state after : {returns}
  3: goto 6
     # abort state before: {returns}
     # abort state after : {returns}
  4: label L1
     # abort state before: {returns}
     # abort state after : {returns}
  5: $t5 := false
     # abort state before: {returns}
     # abort state after : {returns}
  6: label L2
     # abort state before: {returns}
     # abort state after : {returns}
  7: if ($t5) goto 8 else goto 11
     # abort state before: {returns}
     # abort state after : {returns}
  8: label L3
     # abort state before: {returns}
     # abort state after : {returns}
  9: $t4 := true
     # abort state before: {returns}
     # abort state after : {returns}
 10: goto 19
     # abort state before: {returns}
     # abort state after : {returns}
 11: label L4
     # abort state before: {returns}
     # abort state after : {returns}
 12: if ($t0) goto 13 else goto 16
     # abort state before: {returns}
     # abort state after : {returns}
 13: label L6
     # abort state before: {returns}
     # abort state after : {returns}
 14: $t4 := !($t1)
     # abort state before: {returns}
     # abort state after : {returns}
 15: goto 18
     # abort state before: {returns}
     # abort state after : {returns}
 16: label L7
     # abort state before: {returns}
     # abort state after : {returns}
 17: $t4 := false
     # abort state before: {returns}
     # abort state after : {returns}
 18: label L8
     # abort state before: {returns}
     # abort state after : {returns}
 19: label L5
     # abort state before: {returns}
     # abort state after : {returns}
 20: if ($t4) goto 21 else goto 24
     # abort state before: {returns}
     # abort state after : {returns}
 21: label L9
     # abort state before: {returns}
     # abort state after : {returns}
 22: $t3 := true
     # abort state before: {returns}
     # abort state after : {returns}
 23: goto 33
     # abort state before: {returns}
     # abort state after : {returns}
 24: label L10
     # abort state before: {returns}
     # abort state after : {returns}
 25: $t6 := !($t0)
     # abort state before: {returns}
     # abort state after : {returns}
 26: if ($t6) goto 27 else goto 30
     # abort state before: {returns}
     # abort state after : {returns}
 27: label L12
     # abort state before: {returns}
     # abort state after : {returns}
 28: $t3 := copy($t1)
     # abort state before: {returns}
     # abort state after : {returns}
 29: goto 32
     # abort state before: {returns}
     # abort state after : {returns}
 30: label L13
     # abort state before: {returns}
     # abort state after : {returns}
 31: $t3 := false
     # abort state before: {returns}
     # abort state after : {returns}
 32: label L14
     # abort state before: {returns}
     # abort state after : {returns}
 33: label L11
     # abort state before: {returns}
     # abort state after : {returns}
 34: if ($t3) goto 35 else goto 38
     # abort state before: {returns}
     # abort state after : {returns}
 35: label L15
     # abort state before: {returns}
     # abort state after : {returns}
 36: $t2 := true
     # abort state before: {returns}
     # abort state after : {returns}
 37: goto 47
     # abort state before: {returns}
     # abort state after : {returns}
 38: label L16
     # abort state before: {returns}
     # abort state after : {returns}
 39: $t7 := !($t0)
     # abort state before: {returns}
     # abort state after : {returns}
 40: if ($t7) goto 41 else goto 44
     # abort state before: {returns}
     # abort state after : {returns}
 41: label L18
     # abort state before: {returns}
     # abort state after : {returns}
 42: $t2 := !($t1)
     # abort state before: {returns}
     # abort state after : {returns}
 43: goto 46
     # abort state before: {returns}
     # abort state after : {returns}
 44: label L19
     # abort state before: {returns}
     # abort state after : {returns}
 45: $t2 := false
     # abort state before: {returns}
     # abort state after : {returns}
 46: label L20
     # abort state before: {returns}
     # abort state after : {returns}
 47: label L17
     # abort state before: {returns}
     # abort state after : {}
 48: return $t2
}


[variant baseline]
fun operators::equality<#0>($t0: #0, $t1: #0): bool {
     var $t2: bool
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t2 := ==($t0, $t1)
     # abort state before: {returns}
     # abort state after : {}
  1: return $t2
}


[variant baseline]
fun operators::inequality<#0>($t0: #0, $t1: #0): bool {
     var $t2: bool
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t2 := !=($t0, $t1)
     # abort state before: {returns}
     # abort state after : {}
  1: return $t2
}


[variant baseline]
fun operators::order($t0: u64, $t1: u64): bool {
     var $t2: bool
     var $t3: bool
     var $t4: bool
     var $t5: bool
     var $t6: bool
     var $t7: bool
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t5 := <($t0, $t1)
     # abort state before: {returns}
     # abort state after : {returns}
  1: if ($t5) goto 2 else goto 5
     # abort state before: {returns}
     # abort state after : {returns}
  2: label L0
     # abort state before: {returns}
     # abort state after : {returns}
  3: $t4 := <=($t0, $t1)
     # abort state before: {returns}
     # abort state after : {returns}
  4: goto 7
     # abort state before: {returns}
     # abort state after : {returns}
  5: label L1
     # abort state before: {returns}
     # abort state after : {returns}
  6: $t4 := false
     # abort state before: {returns}
     # abort state after : {returns}
  7: label L2
     # abort state before: {returns}
     # abort state after : {returns}
  8: if ($t4) goto 9 else goto 13
     # abort state before: {returns}
     # abort state after : {returns}
  9: label L3
     # abort state before: {returns}
     # abort state after : {returns}
 10: $t6 := >($t0, $t1)
     # abort state before: {returns}
     # abort state after : {returns}
 11: $t3 := !($t6)
     # abort state before: {returns}
     # abort state after : {returns}
 12: goto 15
     # abort state before: {returns}
     # abort state after : {returns}
 13: label L4
     # abort state before: {returns}
     # abort state after : {returns}
 14: $t3 := false
     # abort state before: {returns}
     # abort state after : {returns}
 15: label L5
     # abort state before: {returns}
     # abort state after : {returns}
 16: if ($t3) goto 17 else goto 21
     # abort state before: {returns}
     # abort state after : {returns}
 17: label L6
     # abort state before: {returns}
     # abort state after : {returns}
 18: $t7 := >=($t0, $t1)
     # abort state before: {returns}
     # abort state after : {returns}
 19: $t2 := !($t7)
     # abort state before: {returns}
     # abort state after : {returns}
 20: goto 23
     # abort state before: {returns}
     # abort state after : {returns}
 21: label L7
     # abort state before: {returns}
     # abort state after : {returns}
 22: $t2 := false
     # abort state before: {returns}
     # abort state after : {returns}
 23: label L8
     # abort state before: {returns}
     # abort state after : {}
 24: return $t2
}
