============ initial bytecode ================

[variant baseline]
fun fields::read_ref($t0: &fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &u64
  0: $t2 := borrow_field<fields::S>.g($t0)
  1: $t3 := borrow_field<fields::T>.h($t2)
  2: $t1 := read_ref($t3)
  3: return $t1
}


[variant baseline]
fun fields::read_val($t0: fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &fields::S
     var $t4: &u64
  0: $t3 := borrow_local($t0)
  1: $t2 := borrow_field<fields::S>.g($t3)
  2: $t4 := borrow_field<fields::T>.h($t2)
  3: $t1 := read_ref($t4)
  4: return $t1
}


[variant baseline]
fun fields::write_local_direct(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: fields::T
     var $t5: u64
     var $t6: u64
     var $t7: &mut u64
     var $t8: &mut fields::T
     var $t9: &mut fields::S
  0: $t3 := 0
  1: $t5 := 0
  2: $t4 := pack fields::T($t5)
  3: $t2 := pack fields::S($t3, $t4)
  4: $t1 := infer($t2)
  5: $t6 := 42
  6: $t9 := borrow_local($t1)
  7: $t8 := borrow_field<fields::S>.g($t9)
  8: $t7 := borrow_field<fields::T>.h($t8)
  9: write_ref($t7, $t6)
 10: $t0 := infer($t1)
 11: return $t0
}


[variant baseline]
fun fields::write_local_via_ref(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: fields::T
     var $t5: u64
     var $t6: &mut fields::S
     var $t7: &mut fields::S
     var $t8: u64
     var $t9: &mut u64
     var $t10: &mut fields::T
  0: $t3 := 0
  1: $t5 := 0
  2: $t4 := pack fields::T($t5)
  3: $t2 := pack fields::S($t3, $t4)
  4: $t1 := infer($t2)
  5: $t7 := borrow_local($t1)
  6: $t6 := infer($t7)
  7: $t8 := 42
  8: $t10 := borrow_field<fields::S>.g($t6)
  9: $t9 := borrow_field<fields::T>.h($t10)
 10: write_ref($t9, $t8)
 11: $t0 := infer($t1)
 12: return $t0
}


[variant baseline]
fun fields::write_param($t0: &mut fields::S) {
     var $t1: u64
     var $t2: &mut u64
     var $t3: &mut fields::T
  0: $t1 := 42
  1: $t3 := borrow_field<fields::S>.g($t0)
  2: $t2 := borrow_field<fields::T>.h($t3)
  3: write_ref($t2, $t1)
  4: return ()
}


[variant baseline]
fun fields::write_val($t0: fields::S): fields::S {
     var $t1: fields::S
     var $t2: u64
     var $t3: &mut u64
     var $t4: &mut fields::T
     var $t5: &mut fields::S
  0: $t2 := 42
  1: $t5 := borrow_local($t0)
  2: $t4 := borrow_field<fields::S>.g($t5)
  3: $t3 := borrow_field<fields::T>.h($t4)
  4: write_ref($t3, $t2)
  5: $t1 := infer($t0)
  6: return $t1
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun fields::read_ref($t0: &fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &u64
     # live vars: $t0
  0: $t2 := borrow_field<fields::S>.g($t0)
     # live vars: $t2
  1: $t3 := borrow_field<fields::T>.h($t2)
     # live vars: $t3
  2: $t1 := read_ref($t3)
     # live vars: $t1
  3: return $t1
}


[variant baseline]
fun fields::read_val($t0: fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &fields::S
     var $t4: &u64
     # live vars: $t0
  0: $t3 := borrow_local($t0)
     # live vars: $t3
  1: $t2 := borrow_field<fields::S>.g($t3)
     # live vars: $t2
  2: $t4 := borrow_field<fields::T>.h($t2)
     # live vars: $t4
  3: $t1 := read_ref($t4)
     # live vars: $t1
  4: return $t1
}


[variant baseline]
fun fields::write_local_direct(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: fields::T
     var $t5: u64
     var $t6: u64
     var $t7: &mut u64
     var $t8: &mut fields::T
     var $t9: &mut fields::S
     # live vars:
  0: $t3 := 0
     # live vars: $t3
  1: $t5 := 0
     # live vars: $t3, $t5
  2: $t4 := pack fields::T($t5)
     # live vars: $t3, $t4
  3: $t2 := pack fields::S($t3, $t4)
     # live vars: $t2
  4: $t1 := move($t2)
     # live vars: $t1
  5: $t6 := 42
     # live vars: $t1, $t6
  6: $t9 := borrow_local($t1)
     # live vars: $t1, $t6, $t9
  7: $t8 := borrow_field<fields::S>.g($t9)
     # live vars: $t1, $t6, $t8
  8: $t7 := borrow_field<fields::T>.h($t8)
     # live vars: $t1, $t6, $t7
  9: write_ref($t7, $t6)
     # live vars: $t1
 10: $t0 := move($t1)
     # live vars: $t0
 11: return $t0
}


[variant baseline]
fun fields::write_local_via_ref(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: fields::T
     var $t5: u64
     var $t6: &mut fields::S
     var $t7: &mut fields::S
     var $t8: u64
     var $t9: &mut u64
     var $t10: &mut fields::T
     # live vars:
  0: $t3 := 0
     # live vars: $t3
  1: $t5 := 0
     # live vars: $t3, $t5
  2: $t4 := pack fields::T($t5)
     # live vars: $t3, $t4
  3: $t2 := pack fields::S($t3, $t4)
     # live vars: $t2
  4: $t1 := move($t2)
     # live vars: $t1
  5: $t7 := borrow_local($t1)
     # live vars: $t1, $t7
  6: $t6 := move($t7)
     # live vars: $t1, $t6
  7: $t8 := 42
     # live vars: $t1, $t6, $t8
  8: $t10 := borrow_field<fields::S>.g($t6)
     # live vars: $t1, $t8, $t10
  9: $t9 := borrow_field<fields::T>.h($t10)
     # live vars: $t1, $t8, $t9
 10: write_ref($t9, $t8)
     # live vars: $t1
 11: $t0 := move($t1)
     # live vars: $t0
 12: return $t0
}


[variant baseline]
fun fields::write_param($t0: &mut fields::S) {
     var $t1: u64
     var $t2: &mut u64
     var $t3: &mut fields::T
     # live vars: $t0
  0: $t1 := 42
     # live vars: $t0, $t1
  1: $t3 := borrow_field<fields::S>.g($t0)
     # live vars: $t1, $t3
  2: $t2 := borrow_field<fields::T>.h($t3)
     # live vars: $t1, $t2
  3: write_ref($t2, $t1)
     # live vars:
  4: return ()
}


[variant baseline]
fun fields::write_val($t0: fields::S): fields::S {
     var $t1: fields::S
     var $t2: u64
     var $t3: &mut u64
     var $t4: &mut fields::T
     var $t5: &mut fields::S
     # live vars: $t0
  0: $t2 := 42
     # live vars: $t0, $t2
  1: $t5 := borrow_local($t0)
     # live vars: $t0, $t2, $t5
  2: $t4 := borrow_field<fields::S>.g($t5)
     # live vars: $t0, $t2, $t4
  3: $t3 := borrow_field<fields::T>.h($t4)
     # live vars: $t0, $t2, $t3
  4: write_ref($t3, $t2)
     # live vars: $t0
  5: $t1 := move($t0)
     # live vars: $t1
  6: return $t1
}

============ after ReferenceSafetyProcessor: ================

[variant baseline]
fun fields::read_ref($t0: &fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &u64
     # live vars: $t0
     # graph: {@1000000=external[borrow(false) -> @2000000],@2000000=derived[]}
     # locals: {$t0=@2000000}
     # globals: {}
     # moved: {}
     #
  0: $t2 := borrow_field<fields::S>.g($t0)
     # live vars: $t2
     # graph: {@1=derived[],@1000000=external[borrow(false) -> @2000000],@2000000=derived[borrow_field(false) -> @1]}
     # locals: {$t2=@1}
     # globals: {}
     # moved: {}
     #
  1: $t3 := borrow_field<fields::T>.h($t2)
     # live vars: $t3
     # graph: {@1=derived[borrow_field(false) -> @101],@101=derived[],@1000000=external[borrow(false) -> @2000000],@2000000=derived[borrow_field(false) -> @1]}
     # locals: {$t3=@101}
     # globals: {}
     # moved: {}
     #
  2: $t1 := read_ref($t3)
     # live vars: $t1
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  3: return $t1
}


[variant baseline]
fun fields::read_val($t0: fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &fields::S
     var $t4: &u64
     # live vars: $t0
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  0: $t3 := borrow_local($t0)
     # live vars: $t3
     # graph: {@0=local($t0)[borrow(false) -> @1],@1=derived[]}
     # locals: {$t0=@0,$t3=@1}
     # globals: {}
     # moved: {}
     #
  1: $t2 := borrow_field<fields::S>.g($t3)
     # live vars: $t2
     # graph: {@0=local($t0)[borrow(false) -> @1],@1=derived[borrow_field(false) -> @101],@101=derived[]}
     # locals: {$t0=@0,$t2=@101}
     # globals: {}
     # moved: {}
     #
  2: $t4 := borrow_field<fields::T>.h($t2)
     # live vars: $t4
     # graph: {@0=local($t0)[borrow(false) -> @1],@1=derived[borrow_field(false) -> @101],@101=derived[borrow_field(false) -> @201],@201=derived[]}
     # locals: {$t0=@0,$t4=@201}
     # globals: {}
     # moved: {}
     #
  3: $t1 := read_ref($t4)
     # live vars: $t1
     # graph: {@0=local($t0)[]}
     # locals: {$t0=@0}
     # globals: {}
     # moved: {}
     #
  4: return $t1
}


[variant baseline]
fun fields::write_local_direct(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: fields::T
     var $t5: u64
     var $t6: u64
     var $t7: &mut u64
     var $t8: &mut fields::T
     var $t9: &mut fields::S
     # live vars:
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  0: $t3 := 0
     # live vars: $t3
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  1: $t5 := 0
     # live vars: $t3, $t5
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  2: $t4 := pack fields::T($t5)
     # live vars: $t3, $t4
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t5}
     #
  3: $t2 := pack fields::S($t3, $t4)
     # live vars: $t2
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t3,$t4,$t5}
     #
  4: $t1 := move($t2)
     # live vars: $t1
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5}
     #
  5: $t6 := 42
     # live vars: $t1, $t6
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5}
     #
  6: $t9 := borrow_local($t1)
     # live vars: $t1, $t6, $t9
     # graph: {@600=local($t1)[borrow(true) -> @601],@601=derived[]}
     # locals: {$t1=@600,$t9=@601}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5}
     #
  7: $t8 := borrow_field<fields::S>.g($t9)
     # live vars: $t1, $t6, $t8
     # graph: {@600=local($t1)[borrow(true) -> @601],@601=derived[borrow_field(true) -> @701],@701=derived[]}
     # locals: {$t1=@600,$t8=@701}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5}
     #
  8: $t7 := borrow_field<fields::T>.h($t8)
     # live vars: $t1, $t6, $t7
     # graph: {@600=local($t1)[borrow(true) -> @601],@601=derived[borrow_field(true) -> @701],@701=derived[borrow_field(true) -> @801],@801=derived[]}
     # locals: {$t1=@600,$t7=@801}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5}
     #
  9: write_ref($t7, $t6)
     # live vars: $t1
     # graph: {@600=local($t1)[]}
     # locals: {$t1=@600}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5}
     #
 10: $t0 := move($t1)
     # live vars: $t0
     # graph: {@600=local($t1)[]}
     # locals: {$t1=@600}
     # globals: {}
     # moved: {$t1,$t2,$t3,$t4,$t5}
     #
 11: return $t0
}


[variant baseline]
fun fields::write_local_via_ref(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: fields::T
     var $t5: u64
     var $t6: &mut fields::S
     var $t7: &mut fields::S
     var $t8: u64
     var $t9: &mut u64
     var $t10: &mut fields::T
     # live vars:
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  0: $t3 := 0
     # live vars: $t3
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  1: $t5 := 0
     # live vars: $t3, $t5
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  2: $t4 := pack fields::T($t5)
     # live vars: $t3, $t4
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t5}
     #
  3: $t2 := pack fields::S($t3, $t4)
     # live vars: $t2
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t3,$t4,$t5}
     #
  4: $t1 := move($t2)
     # live vars: $t1
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5}
     #
  5: $t7 := borrow_local($t1)
     # live vars: $t1, $t7
     # graph: {@500=local($t1)[borrow(true) -> @501],@501=derived[]}
     # locals: {$t1=@500,$t7=@501}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5}
     #
  6: $t6 := move($t7)
     # live vars: $t1, $t6
     # graph: {@500=local($t1)[borrow(true) -> @501],@501=derived[]}
     # locals: {$t1=@500,$t6=@501}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7}
     #
  7: $t8 := 42
     # live vars: $t1, $t6, $t8
     # graph: {@500=local($t1)[borrow(true) -> @501],@501=derived[]}
     # locals: {$t1=@500,$t6=@501}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7}
     #
  8: $t10 := borrow_field<fields::S>.g($t6)
     # live vars: $t1, $t8, $t10
     # graph: {@500=local($t1)[borrow(true) -> @501],@501=derived[borrow_field(true) -> @801],@801=derived[]}
     # locals: {$t1=@500,$t10=@801}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7}
     #
  9: $t9 := borrow_field<fields::T>.h($t10)
     # live vars: $t1, $t8, $t9
     # graph: {@500=local($t1)[borrow(true) -> @501],@501=derived[borrow_field(true) -> @801],@801=derived[borrow_field(true) -> @901],@901=derived[]}
     # locals: {$t1=@500,$t9=@901}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7}
     #
 10: write_ref($t9, $t8)
     # live vars: $t1
     # graph: {@500=local($t1)[]}
     # locals: {$t1=@500}
     # globals: {}
     # moved: {$t2,$t3,$t4,$t5,$t7}
     #
 11: $t0 := move($t1)
     # live vars: $t0
     # graph: {@500=local($t1)[]}
     # locals: {$t1=@500}
     # globals: {}
     # moved: {$t1,$t2,$t3,$t4,$t5,$t7}
     #
 12: return $t0
}


[variant baseline]
fun fields::write_param($t0: &mut fields::S) {
     var $t1: u64
     var $t2: &mut u64
     var $t3: &mut fields::T
     # live vars: $t0
     # graph: {@1000000=external[borrow(true) -> @2000000],@2000000=derived[]}
     # locals: {$t0=@2000000}
     # globals: {}
     # moved: {}
     #
  0: $t1 := 42
     # live vars: $t0, $t1
     # graph: {@1000000=external[borrow(true) -> @2000000],@2000000=derived[]}
     # locals: {$t0=@2000000}
     # globals: {}
     # moved: {}
     #
  1: $t3 := borrow_field<fields::S>.g($t0)
     # live vars: $t1, $t3
     # graph: {@101=derived[],@1000000=external[borrow(true) -> @2000000],@2000000=derived[borrow_field(true) -> @101]}
     # locals: {$t3=@101}
     # globals: {}
     # moved: {}
     #
  2: $t2 := borrow_field<fields::T>.h($t3)
     # live vars: $t1, $t2
     # graph: {@101=derived[borrow_field(true) -> @201],@201=derived[],@1000000=external[borrow(true) -> @2000000],@2000000=derived[borrow_field(true) -> @101]}
     # locals: {$t2=@201}
     # globals: {}
     # moved: {}
     #
  3: write_ref($t2, $t1)
     # live vars:
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  4: return ()
}


[variant baseline]
fun fields::write_val($t0: fields::S): fields::S {
     var $t1: fields::S
     var $t2: u64
     var $t3: &mut u64
     var $t4: &mut fields::T
     var $t5: &mut fields::S
     # live vars: $t0
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  0: $t2 := 42
     # live vars: $t0, $t2
     # graph: {}
     # locals: {}
     # globals: {}
     # moved: {}
     #
  1: $t5 := borrow_local($t0)
     # live vars: $t0, $t2, $t5
     # graph: {@100=local($t0)[borrow(true) -> @101],@101=derived[]}
     # locals: {$t0=@100,$t5=@101}
     # globals: {}
     # moved: {}
     #
  2: $t4 := borrow_field<fields::S>.g($t5)
     # live vars: $t0, $t2, $t4
     # graph: {@100=local($t0)[borrow(true) -> @101],@101=derived[borrow_field(true) -> @201],@201=derived[]}
     # locals: {$t0=@100,$t4=@201}
     # globals: {}
     # moved: {}
     #
  3: $t3 := borrow_field<fields::T>.h($t4)
     # live vars: $t0, $t2, $t3
     # graph: {@100=local($t0)[borrow(true) -> @101],@101=derived[borrow_field(true) -> @201],@201=derived[borrow_field(true) -> @301],@301=derived[]}
     # locals: {$t0=@100,$t3=@301}
     # globals: {}
     # moved: {}
     #
  4: write_ref($t3, $t2)
     # live vars: $t0
     # graph: {@100=local($t0)[]}
     # locals: {$t0=@100}
     # globals: {}
     # moved: {}
     #
  5: $t1 := move($t0)
     # live vars: $t1
     # graph: {@100=local($t0)[]}
     # locals: {$t0=@100}
     # globals: {}
     # moved: {$t0}
     #
  6: return $t1
}

============ after ExplicitDrop: ================

[variant baseline]
fun fields::read_ref($t0: &fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &u64
  0: $t2 := borrow_field<fields::S>.g($t0)
  1: drop($t0)
  2: $t3 := borrow_field<fields::T>.h($t2)
  3: drop($t2)
  4: $t1 := read_ref($t3)
  5: drop($t3)
  6: return $t1
}


[variant baseline]
fun fields::read_val($t0: fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &fields::S
     var $t4: &u64
  0: $t3 := borrow_local($t0)
  1: $t2 := borrow_field<fields::S>.g($t3)
  2: drop($t3)
  3: $t4 := borrow_field<fields::T>.h($t2)
  4: drop($t2)
  5: $t1 := read_ref($t4)
  6: drop($t4)
  7: return $t1
}


[variant baseline]
fun fields::write_local_direct(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: fields::T
     var $t5: u64
     var $t6: u64
     var $t7: &mut u64
     var $t8: &mut fields::T
     var $t9: &mut fields::S
  0: $t3 := 0
  1: $t5 := 0
  2: $t4 := pack fields::T($t5)
  3: $t2 := pack fields::S($t3, $t4)
  4: $t1 := move($t2)
  5: $t6 := 42
  6: $t9 := borrow_local($t1)
  7: $t8 := borrow_field<fields::S>.g($t9)
  8: drop($t9)
  9: $t7 := borrow_field<fields::T>.h($t8)
 10: drop($t8)
 11: write_ref($t7, $t6)
 12: drop($t7)
 13: $t0 := move($t1)
 14: return $t0
}


[variant baseline]
fun fields::write_local_via_ref(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: fields::T
     var $t5: u64
     var $t6: &mut fields::S
     var $t7: &mut fields::S
     var $t8: u64
     var $t9: &mut u64
     var $t10: &mut fields::T
  0: $t3 := 0
  1: $t5 := 0
  2: $t4 := pack fields::T($t5)
  3: $t2 := pack fields::S($t3, $t4)
  4: $t1 := move($t2)
  5: $t7 := borrow_local($t1)
  6: $t6 := move($t7)
  7: $t8 := 42
  8: $t10 := borrow_field<fields::S>.g($t6)
  9: drop($t6)
 10: $t9 := borrow_field<fields::T>.h($t10)
 11: drop($t10)
 12: write_ref($t9, $t8)
 13: drop($t9)
 14: $t0 := move($t1)
 15: return $t0
}


[variant baseline]
fun fields::write_param($t0: &mut fields::S) {
     var $t1: u64
     var $t2: &mut u64
     var $t3: &mut fields::T
  0: $t1 := 42
  1: $t3 := borrow_field<fields::S>.g($t0)
  2: drop($t0)
  3: $t2 := borrow_field<fields::T>.h($t3)
  4: drop($t3)
  5: write_ref($t2, $t1)
  6: drop($t2)
  7: return ()
}


[variant baseline]
fun fields::write_val($t0: fields::S): fields::S {
     var $t1: fields::S
     var $t2: u64
     var $t3: &mut u64
     var $t4: &mut fields::T
     var $t5: &mut fields::S
  0: $t2 := 42
  1: $t5 := borrow_local($t0)
  2: $t4 := borrow_field<fields::S>.g($t5)
  3: drop($t5)
  4: $t3 := borrow_field<fields::T>.h($t4)
  5: drop($t4)
  6: write_ref($t3, $t2)
  7: drop($t3)
  8: $t1 := move($t0)
  9: return $t1
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
fun fields::read_ref($t0: &fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &u64
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t2 := borrow_field<fields::S>.g($t0)
     # abort state before: {returns}
     # abort state after : {returns}
  1: drop($t0)
     # abort state before: {returns}
     # abort state after : {returns}
  2: $t3 := borrow_field<fields::T>.h($t2)
     # abort state before: {returns}
     # abort state after : {returns}
  3: drop($t2)
     # abort state before: {returns}
     # abort state after : {returns}
  4: $t1 := read_ref($t3)
     # abort state before: {returns}
     # abort state after : {returns}
  5: drop($t3)
     # abort state before: {returns}
     # abort state after : {}
  6: return $t1
}


[variant baseline]
fun fields::read_val($t0: fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &fields::S
     var $t4: &u64
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t3 := borrow_local($t0)
     # abort state before: {returns}
     # abort state after : {returns}
  1: $t2 := borrow_field<fields::S>.g($t3)
     # abort state before: {returns}
     # abort state after : {returns}
  2: drop($t3)
     # abort state before: {returns}
     # abort state after : {returns}
  3: $t4 := borrow_field<fields::T>.h($t2)
     # abort state before: {returns}
     # abort state after : {returns}
  4: drop($t2)
     # abort state before: {returns}
     # abort state after : {returns}
  5: $t1 := read_ref($t4)
     # abort state before: {returns}
     # abort state after : {returns}
  6: drop($t4)
     # abort state before: {returns}
     # abort state after : {}
  7: return $t1
}


[variant baseline]
fun fields::write_local_direct(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: fields::T
     var $t5: u64
     var $t6: u64
     var $t7: &mut u64
     var $t8: &mut fields::T
     var $t9: &mut fields::S
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t3 := 0
     # abort state before: {returns}
     # abort state after : {returns}
  1: $t5 := 0
     # abort state before: {returns}
     # abort state after : {returns}
  2: $t4 := pack fields::T($t5)
     # abort state before: {returns}
     # abort state after : {returns}
  3: $t2 := pack fields::S($t3, $t4)
     # abort state before: {returns}
     # abort state after : {returns}
  4: $t1 := move($t2)
     # abort state before: {returns}
     # abort state after : {returns}
  5: $t6 := 42
     # abort state before: {returns}
     # abort state after : {returns}
  6: $t9 := borrow_local($t1)
     # abort state before: {returns}
     # abort state after : {returns}
  7: $t8 := borrow_field<fields::S>.g($t9)
     # abort state before: {returns}
     # abort state after : {returns}
  8: drop($t9)
     # abort state before: {returns}
     # abort state after : {returns}
  9: $t7 := borrow_field<fields::T>.h($t8)
     # abort state before: {returns}
     # abort state after : {returns}
 10: drop($t8)
     # abort state before: {returns}
     # abort state after : {returns}
 11: write_ref($t7, $t6)
     # abort state before: {returns}
     # abort state after : {returns}
 12: drop($t7)
     # abort state before: {returns}
     # abort state after : {returns}
 13: $t0 := move($t1)
     # abort state before: {returns}
     # abort state after : {}
 14: return $t0
}


[variant baseline]
fun fields::write_local_via_ref(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: fields::T
     var $t5: u64
     var $t6: &mut fields::S
     var $t7: &mut fields::S
     var $t8: u64
     var $t9: &mut u64
     var $t10: &mut fields::T
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t3 := 0
     # abort state before: {returns}
     # abort state after : {returns}
  1: $t5 := 0
     # abort state before: {returns}
     # abort state after : {returns}
  2: $t4 := pack fields::T($t5)
     # abort state before: {returns}
     # abort state after : {returns}
  3: $t2 := pack fields::S($t3, $t4)
     # abort state before: {returns}
     # abort state after : {returns}
  4: $t1 := move($t2)
     # abort state before: {returns}
     # abort state after : {returns}
  5: $t7 := borrow_local($t1)
     # abort state before: {returns}
     # abort state after : {returns}
  6: $t6 := move($t7)
     # abort state before: {returns}
     # abort state after : {returns}
  7: $t8 := 42
     # abort state before: {returns}
     # abort state after : {returns}
  8: $t10 := borrow_field<fields::S>.g($t6)
     # abort state before: {returns}
     # abort state after : {returns}
  9: drop($t6)
     # abort state before: {returns}
     # abort state after : {returns}
 10: $t9 := borrow_field<fields::T>.h($t10)
     # abort state before: {returns}
     # abort state after : {returns}
 11: drop($t10)
     # abort state before: {returns}
     # abort state after : {returns}
 12: write_ref($t9, $t8)
     # abort state before: {returns}
     # abort state after : {returns}
 13: drop($t9)
     # abort state before: {returns}
     # abort state after : {returns}
 14: $t0 := move($t1)
     # abort state before: {returns}
     # abort state after : {}
 15: return $t0
}


[variant baseline]
fun fields::write_param($t0: &mut fields::S) {
     var $t1: u64
     var $t2: &mut u64
     var $t3: &mut fields::T
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t1 := 42
     # abort state before: {returns}
     # abort state after : {returns}
  1: $t3 := borrow_field<fields::S>.g($t0)
     # abort state before: {returns}
     # abort state after : {returns}
  2: drop($t0)
     # abort state before: {returns}
     # abort state after : {returns}
  3: $t2 := borrow_field<fields::T>.h($t3)
     # abort state before: {returns}
     # abort state after : {returns}
  4: drop($t3)
     # abort state before: {returns}
     # abort state after : {returns}
  5: write_ref($t2, $t1)
     # abort state before: {returns}
     # abort state after : {returns}
  6: drop($t2)
     # abort state before: {returns}
     # abort state after : {}
  7: return ()
}


[variant baseline]
fun fields::write_val($t0: fields::S): fields::S {
     var $t1: fields::S
     var $t2: u64
     var $t3: &mut u64
     var $t4: &mut fields::T
     var $t5: &mut fields::S
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t2 := 42
     # abort state before: {returns}
     # abort state after : {returns}
  1: $t5 := borrow_local($t0)
     # abort state before: {returns}
     # abort state after : {returns}
  2: $t4 := borrow_field<fields::S>.g($t5)
     # abort state before: {returns}
     # abort state after : {returns}
  3: drop($t5)
     # abort state before: {returns}
     # abort state after : {returns}
  4: $t3 := borrow_field<fields::T>.h($t4)
     # abort state before: {returns}
     # abort state after : {returns}
  5: drop($t4)
     # abort state before: {returns}
     # abort state after : {returns}
  6: write_ref($t3, $t2)
     # abort state before: {returns}
     # abort state after : {returns}
  7: drop($t3)
     # abort state before: {returns}
     # abort state after : {returns}
  8: $t1 := move($t0)
     # abort state before: {returns}
     # abort state after : {}
  9: return $t1
}

============ after AbilityChecker: ================

[variant baseline]
fun fields::read_ref($t0: &fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &u64
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t2 := borrow_field<fields::S>.g($t0)
     # abort state before: {returns}
     # abort state after : {returns}
  1: drop($t0)
     # abort state before: {returns}
     # abort state after : {returns}
  2: $t3 := borrow_field<fields::T>.h($t2)
     # abort state before: {returns}
     # abort state after : {returns}
  3: drop($t2)
     # abort state before: {returns}
     # abort state after : {returns}
  4: $t1 := read_ref($t3)
     # abort state before: {returns}
     # abort state after : {returns}
  5: drop($t3)
     # abort state before: {returns}
     # abort state after : {}
  6: return $t1
}


[variant baseline]
fun fields::read_val($t0: fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &fields::S
     var $t4: &u64
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t3 := borrow_local($t0)
     # abort state before: {returns}
     # abort state after : {returns}
  1: $t2 := borrow_field<fields::S>.g($t3)
     # abort state before: {returns}
     # abort state after : {returns}
  2: drop($t3)
     # abort state before: {returns}
     # abort state after : {returns}
  3: $t4 := borrow_field<fields::T>.h($t2)
     # abort state before: {returns}
     # abort state after : {returns}
  4: drop($t2)
     # abort state before: {returns}
     # abort state after : {returns}
  5: $t1 := read_ref($t4)
     # abort state before: {returns}
     # abort state after : {returns}
  6: drop($t4)
     # abort state before: {returns}
     # abort state after : {}
  7: return $t1
}


[variant baseline]
fun fields::write_local_direct(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: fields::T
     var $t5: u64
     var $t6: u64
     var $t7: &mut u64
     var $t8: &mut fields::T
     var $t9: &mut fields::S
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t3 := 0
     # abort state before: {returns}
     # abort state after : {returns}
  1: $t5 := 0
     # abort state before: {returns}
     # abort state after : {returns}
  2: $t4 := pack fields::T($t5)
     # abort state before: {returns}
     # abort state after : {returns}
  3: $t2 := pack fields::S($t3, $t4)
     # abort state before: {returns}
     # abort state after : {returns}
  4: $t1 := move($t2)
     # abort state before: {returns}
     # abort state after : {returns}
  5: $t6 := 42
     # abort state before: {returns}
     # abort state after : {returns}
  6: $t9 := borrow_local($t1)
     # abort state before: {returns}
     # abort state after : {returns}
  7: $t8 := borrow_field<fields::S>.g($t9)
     # abort state before: {returns}
     # abort state after : {returns}
  8: drop($t9)
     # abort state before: {returns}
     # abort state after : {returns}
  9: $t7 := borrow_field<fields::T>.h($t8)
     # abort state before: {returns}
     # abort state after : {returns}
 10: drop($t8)
     # abort state before: {returns}
     # abort state after : {returns}
 11: write_ref($t7, $t6)
     # abort state before: {returns}
     # abort state after : {returns}
 12: drop($t7)
     # abort state before: {returns}
     # abort state after : {returns}
 13: $t0 := move($t1)
     # abort state before: {returns}
     # abort state after : {}
 14: return $t0
}


[variant baseline]
fun fields::write_local_via_ref(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: fields::T
     var $t5: u64
     var $t6: &mut fields::S
     var $t7: &mut fields::S
     var $t8: u64
     var $t9: &mut u64
     var $t10: &mut fields::T
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t3 := 0
     # abort state before: {returns}
     # abort state after : {returns}
  1: $t5 := 0
     # abort state before: {returns}
     # abort state after : {returns}
  2: $t4 := pack fields::T($t5)
     # abort state before: {returns}
     # abort state after : {returns}
  3: $t2 := pack fields::S($t3, $t4)
     # abort state before: {returns}
     # abort state after : {returns}
  4: $t1 := move($t2)
     # abort state before: {returns}
     # abort state after : {returns}
  5: $t7 := borrow_local($t1)
     # abort state before: {returns}
     # abort state after : {returns}
  6: $t6 := move($t7)
     # abort state before: {returns}
     # abort state after : {returns}
  7: $t8 := 42
     # abort state before: {returns}
     # abort state after : {returns}
  8: $t10 := borrow_field<fields::S>.g($t6)
     # abort state before: {returns}
     # abort state after : {returns}
  9: drop($t6)
     # abort state before: {returns}
     # abort state after : {returns}
 10: $t9 := borrow_field<fields::T>.h($t10)
     # abort state before: {returns}
     # abort state after : {returns}
 11: drop($t10)
     # abort state before: {returns}
     # abort state after : {returns}
 12: write_ref($t9, $t8)
     # abort state before: {returns}
     # abort state after : {returns}
 13: drop($t9)
     # abort state before: {returns}
     # abort state after : {returns}
 14: $t0 := move($t1)
     # abort state before: {returns}
     # abort state after : {}
 15: return $t0
}


[variant baseline]
fun fields::write_param($t0: &mut fields::S) {
     var $t1: u64
     var $t2: &mut u64
     var $t3: &mut fields::T
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t1 := 42
     # abort state before: {returns}
     # abort state after : {returns}
  1: $t3 := borrow_field<fields::S>.g($t0)
     # abort state before: {returns}
     # abort state after : {returns}
  2: drop($t0)
     # abort state before: {returns}
     # abort state after : {returns}
  3: $t2 := borrow_field<fields::T>.h($t3)
     # abort state before: {returns}
     # abort state after : {returns}
  4: drop($t3)
     # abort state before: {returns}
     # abort state after : {returns}
  5: write_ref($t2, $t1)
     # abort state before: {returns}
     # abort state after : {returns}
  6: drop($t2)
     # abort state before: {returns}
     # abort state after : {}
  7: return ()
}


[variant baseline]
fun fields::write_val($t0: fields::S): fields::S {
     var $t1: fields::S
     var $t2: u64
     var $t3: &mut u64
     var $t4: &mut fields::T
     var $t5: &mut fields::S
     # abort state before: {returns}
     # abort state after : {returns}
  0: $t2 := 42
     # abort state before: {returns}
     # abort state after : {returns}
  1: $t5 := borrow_local($t0)
     # abort state before: {returns}
     # abort state after : {returns}
  2: $t4 := borrow_field<fields::S>.g($t5)
     # abort state before: {returns}
     # abort state after : {returns}
  3: drop($t5)
     # abort state before: {returns}
     # abort state after : {returns}
  4: $t3 := borrow_field<fields::T>.h($t4)
     # abort state before: {returns}
     # abort state after : {returns}
  5: drop($t4)
     # abort state before: {returns}
     # abort state after : {returns}
  6: write_ref($t3, $t2)
     # abort state before: {returns}
     # abort state after : {returns}
  7: drop($t3)
     # abort state before: {returns}
     # abort state after : {returns}
  8: $t1 := move($t0)
     # abort state before: {returns}
     # abort state after : {}
  9: return $t1
}
